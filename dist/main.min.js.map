{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","source/js/main.js","main.min.js","node_modules/baconjs/dist/Bacon.js","node_modules/baobab/defaults.js","node_modules/baobab/index.js","node_modules/baobab/node_modules/emmett/emmett.js","node_modules/baobab/src/baobab.js","node_modules/baobab/src/cursor.js","node_modules/baobab/src/facet.js","node_modules/baobab/src/helpers.js","node_modules/baobab/src/merge.js","node_modules/baobab/src/type.js","node_modules/baobab/src/update.js","node_modules/bootstrap/js/modal.js","node_modules/browserify/node_modules/buffer/index.js","node_modules/browserify/node_modules/buffer/node_modules/base64-js/lib/b64.js","node_modules/browserify/node_modules/buffer/node_modules/ieee754/index.js","node_modules/browserify/node_modules/buffer/node_modules/is-array/index.js","node_modules/browserify/node_modules/events/events.js","node_modules/browserify/node_modules/inherits/inherits_browser.js","node_modules/browserify/node_modules/isarray/index.js","node_modules/browserify/node_modules/process/browser.js","node_modules/browserify/node_modules/readable-stream/duplex.js","node_modules/browserify/node_modules/readable-stream/lib/_stream_duplex.js","node_modules/browserify/node_modules/readable-stream/lib/_stream_passthrough.js","node_modules/browserify/node_modules/readable-stream/lib/_stream_readable.js","node_modules/browserify/node_modules/readable-stream/lib/_stream_transform.js","node_modules/browserify/node_modules/readable-stream/lib/_stream_writable.js","node_modules/browserify/node_modules/readable-stream/node_modules/core-util-is/lib/util.js","node_modules/browserify/node_modules/readable-stream/passthrough.js","node_modules/browserify/node_modules/readable-stream/readable.js","node_modules/browserify/node_modules/readable-stream/transform.js","node_modules/browserify/node_modules/readable-stream/writable.js","node_modules/browserify/node_modules/stream-browserify/index.js","node_modules/browserify/node_modules/string_decoder/index.js","node_modules/filesaver.js/FileSaver.js","node_modules/ramda/dist/ramda.js","node_modules/uuid/rng-browser.js","node_modules/uuid/uuid.js","node_modules/virtual-dom/create-element.js","node_modules/virtual-dom/diff.js","node_modules/virtual-dom/h.js","node_modules/virtual-dom/index.js","node_modules/virtual-dom/node_modules/browser-split/index.js","node_modules/virtual-dom/node_modules/ev-store/index.js","node_modules/virtual-dom/node_modules/ev-store/node_modules/individual/index.js","node_modules/virtual-dom/node_modules/ev-store/node_modules/individual/one-version.js","node_modules/virtual-dom/node_modules/global/document.js","node_modules/virtual-dom/node_modules/is-object/index.js","node_modules/virtual-dom/node_modules/x-is-array/index.js","node_modules/virtual-dom/patch.js","node_modules/virtual-dom/vdom/apply-properties.js","node_modules/virtual-dom/vdom/create-element.js","node_modules/virtual-dom/vdom/dom-index.js","node_modules/virtual-dom/vdom/patch-op.js","node_modules/virtual-dom/vdom/patch.js","node_modules/virtual-dom/vdom/update-widget.js","node_modules/virtual-dom/virtual-hyperscript/hooks/ev-hook.js","node_modules/virtual-dom/virtual-hyperscript/hooks/soft-set-hook.js","node_modules/virtual-dom/virtual-hyperscript/index.js","node_modules/virtual-dom/virtual-hyperscript/parse-tag.js","node_modules/virtual-dom/vnode/handle-thunk.js","node_modules/virtual-dom/vnode/is-thunk.js","node_modules/virtual-dom/vnode/is-vhook.js","node_modules/virtual-dom/vnode/is-vnode.js","node_modules/virtual-dom/vnode/is-vtext.js","node_modules/virtual-dom/vnode/is-widget.js","node_modules/virtual-dom/vnode/version.js","node_modules/virtual-dom/vnode/vnode.js","node_modules/virtual-dom/vnode/vpatch.js","node_modules/virtual-dom/vnode/vtext.js","node_modules/virtual-dom/vtree/diff-props.js","node_modules/virtual-dom/vtree/diff.js","node_modules/virtual-html/index.js","node_modules/virtual-html/node_modules/htmltree/index.js","node_modules/virtual-html/node_modules/htmltree/node_modules/sax/lib/sax.js","node_modules/virtual-html/node_modules/to-camel-case/index.js","node_modules/virtual-html/node_modules/to-camel-case/node_modules/to-space-case/index.js","node_modules/virtual-html/node_modules/to-camel-case/node_modules/to-space-case/node_modules/to-no-case/index.js","source/js/modules/actions.js","source/js/modules/localstate.js","source/js/state.js","source/js/utils/omnium.js","source/js/views/addCategory.js","source/js/views/addPlan.js","source/js/views/budget.js","source/js/views/exporter.js","source/js/views/importer.js","source/js/views/ledger.js","source/js/views/plans.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","state","localstate","actions","ledger","budget","addCategory","plans","addPlan","exporter","importer","load","sync","viewState","select","currentPlanId","categories","facets","currentCategories","entries","currentEntries","periods","currentPeriods","init","$","./modules/actions","./modules/localstate","./state","./views/addCategory","./views/addPlan","./views/budget","./views/exporter","./views/importer","./views/ledger","./views/plans",2,"global","Bacon","BufferingSource","Bus","CompositeUnsubscribe","ConsumingSource","Desc","Dispatcher","End","Event","EventStream","Exception","Initial","Next","None","Observable","Property","PropertyDispatcher","Some","Source","UpdateBarrier","_","addPropertyInitValueToStream","assert","assertArray","assertEventStream","assertFunction","assertNoArguments","assertObservable","assertString","cloneArray","constantToFunction","containsDuplicateDeps","convertArgsToFunction","describe","endEvent","eventIdCounter","eventMethods","findDeps","findHandlerMethods","flatMap_","former","idCounter","initialEvent","isArray","isFieldKey","isObservable","latter","liftCallback","makeFunction","makeFunctionArgs","makeFunction_","makeObservable","makeSpawner","nextEvent","nop","partiallyApplied","recursionDepth","ref","registerObs","spys","toCombinator","toEvent","toFieldExtractor","toFieldKey","toOption","toSimpleExtractor","valueAndEnd","withDescription","withMethodCallSupport","hasProp","hasOwnProperty","extend","child","parent","ctor","this","constructor","key","prototype","__super__","slice","bind","fn","me","apply","arguments","toString","version","x","xs","message","condition","event","isFunction","Array","args","indexOf","j","len1","y","indexWhere","head","always","negate","empty","tail","filter","filtered","push","map","results","each","value","toArray","contains","id","last","all","any","without","remove","splice","fold","seed","flatMap","ys","concat","cached","obj","ex","internals","Object","_error","afterTransaction","afters","aftersIndex","currentEventId","flush","flushDepsOf","flushWaiters","hasWaiters","inTransaction","rootEvent","waiterObs","waiters","whenDoneWith","wrappedSubscribe","obs","obsWaiters","index","obsId","dep","deps","internalDeps","context","after","result","sink","doUnsub","shouldUnsub","unsub","unsubd","dispatcher","subscribe","reply","noMore","obs1","lazy1","lazy","queue","markEnded","ended","consume","mayHave","hasAtLeast","flatten","superClass","shift","c","values","isTrigger","fromObservable","context1","method1","args1","method","desc","wrapped","methodName","applied","fieldValue","partFuncs","parts","split","charAt","sampled","sampledBy","p","arg","left","right","value1","getOrElse","get","forEach","isDefined","inspect","v","more","isEvent","isEnd","isInitial","isNext","isError","hasValue","log","valueF","eager","valueInternal","fmap","toNext","error1","error","initialDesc","subscribeInternal","onValue","onValues","onError","onEnd","name","_name","assign","ss","unsubscribe","unsubscribed","subscriptions","starting","add","subscription","unsubMe","_this","count","_subscribe","_handleEvent","handleEvent","pushing","prevError","unsubSrc","hasSubscribers","removeSub","pushIt","pushToSubscriptions","sub","tmp","unsubscribeFromSource","handler","toProperty","initValue_","disp","initValue","initSent","sendInit","toEventStream","withHandler","never","when","ix","k","len","len2","needsBarrier","pat","patSources","pats","patterns","resultStream","sources","triggerFound","usage","ixs","cannotMatch","cannotSync","ends","match","nonFlattened","part","triggers","len3","ref1","source","trigger","unsubAll","flushLater","flushWhileTriggers","events","pop","len4","m","observables","checkObservable","groupSimultaneous","streams","property1","property","current","currentValueRootId","propertyEnded","maybeSubSource","dispatchingId","valId","changes","constant","fromBinder","binder","eventTransformer","shouldUnbind","unbind","unbinder","unbound","target","methodPair","pair","fromEventTarget","eventName","fromEvent","combineAsArray","stream","combineWith","combineTemplate","template","applyStreamValue","combinator","compile","compileTemplate","constantValue","funcs","mkContext","setValue","ctxStack","popContext","pushContext","RegExp","Date","newContext","rootContext","combine","other","decode","cases","withStateMachine","initState","fromF","newState","output","outputs","skipDuplicates","isEqual","b","prev","awaiting","myValues","otherValues","not","and","or","scheduler","setTimeout","d","setInterval","clearInterval","clearTimeout","now","getTime","bufferWithTime","delay","bufferWithTimeOrCount","Number","MAX_VALUE","bufferWithCount","flushOrSchedule","buffer","schedule","onInput","onFlush","delayMs","scheduled","end","once","unsubLeft","unsubRight","flatMapFirst","root","firstOnly","limit","childDeps","rootDep","checkEnd","checkQueue","composite","spawn","__","unsubRoot","flatMapWithConcurrencyLimit","flatMapConcat","justInitValue","mapEnd","skipErrors","takeUntil","stopper","endMarker","data","flatMapLatest","fromPoll","poll","later","sender","sequentially","repeatedly","interval","delayChanges","bufferingThrottle","minimumInterval","guardedSink","subscribeAll","newSink","subscribeInput","input","unsubscribeInput","plug","callback","fromCallback","fromNodeCallback","debounce","debounceImmediate","scan","acc","resultProperty","next","diff","start","prevTuple","tuple","doAction","endOnError","errors","fromPromise","promise","abort","then","done","mapError","flatMapError","err","sampler","samplerSource","thisSource","sample","reduce","merge","mergeAll","sinks","smartSink","unsubBoth","take","fromArray","holdWhen","valve","putToHold","releaseHold","valve_","startWith","shouldHold","asEventStream","selector","on","off","jQuery","Zepto","console","repeat","generator","flag","subscribeNext","retry","options","finished","isRetryable","maxRetries","retries","pause","valueStream","retriesDone","skip","skipUntil","starter","started","skipWhile","ok","slidingWindow","minValues","window","spy","running","takeWhile","update","initial","lateBindFirst","Function","zipAsArray","zipWith","zip","first","lastEvent","throttle","firstToPromise","PromiseCtr","Promise","resolve","reject","toPromise","define","amd","self",3,"autoCommit","asynchronous","validate","validationBehavior",4,"Baobab","helpers","defineProperty","getIn","./src/baobab.js","./src/helpers.js",5,"shallowMerge","o1","o2","isPlainObject","__allowedOptions","scope","__order","Emitter","_enabled","unbindAll","_handlers","_handlersAll","_handlersComplex","eArray","handlersList","bindingObject","order","pattern","li","listeners","h","handlers","complex","search","sort","emit","onces","type","kill","disable","enable",6,"complexHash","Math","random","replace","initialData","opts","bootstrap","Cursor","EventEmitter","defaults","_transaction","_future","undefined","_cursors","_identity","deepClone","addFacet","Facet","inherits","definition","createFacet","path","arrayOf","Path","solvedPath","ComplexPath","solvePath","hash","step","join","cursor","stack","spec","skipMerge","keys","commit","oldData","behavior","previousState","release","toJSON","../defaults.js","./cursor.js","./facet.js","./helpers.js","./merge.js","./type.js","./update.js","emmett",7,"tree","recording","undoing","record","archive","complexPath","relevant","updateHandler","shouldFire","solveUpdate","bound","_lazyBind","before","pathPolymorphism","allowedType","val","Splicer","leaf","pathObject","makeUpdateMethod","command","isRoot","isLeaf","Primitive","isBranch","up","isNaN","leftmost","rightmost","list","down","fullPath","unset","startRecording","maxRecords","stopRecording","undo","steps","PositiveInteger","back","set","hasHistory","getHistory","clearHistory",8,"refresh","complexity","targetMapping","targetProperty","mappingType","refreshArgs","firstTime","solved","solvedMapping","cursors","cursorsPaths","facetsPaths","paths","getter","facetData","cursorsMapping","facetsMapping","complexCursors","complexFacets","FacetCursors","FacetFacets",9,"decorator","array","nb","elements","cloneRegexp","re","flags","multiline","ignoreCase","sticky","unicode","clone","deep","item","ArrayBuffer","create","compose","fn1","fn2","compare","object","firstByComparison","indexByComparison","$cursor","idx","superCtor","super_","TempCtor","size","records","unshift","shallowClone",10,"only","commandValue","leafLevel","COMMANDS","$chain","$apply","$merge","$splice","$push","$unshift",11,"anyOf","allowed","some","String","NonScalar","every",12,"makeError","mutator","lastKey","oldValue","olderKey","$set",13,"Plugin","option","_relatedTarget","$this","Modal","DEFAULTS","show","element","$body","document","body","$element","$dialog","find","$backdrop","isShown","originalBodyPad","scrollbarWidth","ignoreBackdropClick","remote","proxy","VERSION","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","backdrop","keyboard","toggle","hide","that","relatedTarget","isDefaultPrevented","checkScrollbar","setScrollbar","addClass","escape","resize","one","is","transition","support","hasClass","appendTo","scrollTop","adjustDialog","offsetWidth","attr","enforceFocus","emulateTransitionEnd","preventDefault","removeClass","hideModal","has","which","handleUpdate","resetAdjustments","resetScrollbar","removeBackdrop","animate","doAnimate","currentTarget","focus","callbackRemove","modalIsOverflowing","scrollHeight","documentElement","clientHeight","css","paddingLeft","bodyIsOverflowing","paddingRight","fullWindowWidth","innerWidth","documentElementRect","getBoundingClientRect","abs","clientWidth","measureScrollbar","bodyPad","parseInt","style","scrollDiv","createElement","className","append","removeChild","old","modal","Constructor","noConflict","href","$target","test","showEvent",14,15,"Buffer","subject","encoding","byteLength","TypeError","kMaxLength","RangeError","TYPED_ARRAY_SUPPORT","_augment","Uint8Array","_isBuffer","_set","isArrayish","isBuffer","readUInt8","write","poolSize","rootParent","SlowBuffer","buf","hexWrite","string","offset","remaining","strLen","parsed","substr","utf8Write","charsWritten","blitBuffer","utf8ToBytes","asciiWrite","asciiToBytes","binaryWrite","base64Write","base64ToBytes","utf16leWrite","utf16leToBytes","base64Slice","base64","fromByteArray","utf8Slice","res","min","decodeUtf8Char","fromCharCode","asciiSlice","ret","binarySlice","hexSlice","out","toHex","utf16leSlice","bytes","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","str","stringtrim","INVALID_BASE64_RE","trim","units","Infinity","codePoint","leadSurrogate","charCodeAt","byteArray","hi","lo","toByteArray","src","dst","decodeURIComponent","INSPECT_MAX_BYTES","arr","foo","subarray","isEncoding","toLowerCase","totalLength","pos","copy","loweredCase","equals","byteOffset","arrayIndexOf","foundIndex","writeUInt8","isFinite","swap","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","read","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","target_start","fill","toArrayBuffer","BP","toLocaleString","base64-js","is-array",16,"lookup","elt","PLUS","PLUS_URL_SAFE","SLASH","SLASH_URL_SAFE","NUMBER","UPPER","LOWER","b64ToByteArray","b64","L","placeHolders","Arr","uint8ToBase64","uint8","encode","num","tripletToBase64","temp","extraBytes","base64js",17,"isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2",18,19,"_events","_maxListeners","isNumber","isObject","isUndefined","defaultMaxListeners","setMaxListeners","er","addListener","listener","newListener","warned","trace","g","removeListener","fired","position","removeAllListeners","listenerCount","emitter",20,"enumerable","writable","configurable",21,22,"drainQueue","draining","currentQueue","noop","process","nextTick","fun","title","browser","env","argv","versions","binding","cwd","chdir","dir","umask",23,"./lib/_stream_duplex.js",24,"Duplex","Readable","Writable","readable","allowHalfOpen","onend","_writableState","objectKeys","util","./_stream_readable","./_stream_writable","_process","core-util-is",25,"PassThrough","Transform","_transform","chunk","cb","./_stream_transform",26,"ReadableState","hwm","highWaterMark","defaultHwm","objectMode","pipes","pipesCount","flowing","endEmitted","reading","needReadable","emittedReadable","readableListening","readableObjectMode","defaultEncoding","ranOut","awaitDrain","readingMore","decoder","StringDecoder","_readableState","Stream","readableAddChunk","addToFront","chunkInvalid","isNullOrUndefined","onEofChunk","emitReadable","maybeReadMore","needMoreData","roundUpToNextPowerOf2","MAX_HWM","howMuchToRead","isNull","isString","debug","emitReadable_","flow","maybeReadMore_","pipeOnDrain","EE","resume","resumeScheduled","resume_","fromList","stringMode","cpy","endReadable","debuglog","setEncoding","enc","nOrig","doRead","_read","pipe","dest","pipeOpts","onunpipe","cleanup","onclose","onfinish","ondrain","onerror","ondata","needDrain","unpipe","doEnd","stdout","stderr","endFn","dests","ev","wrap","paused","_fromList","./_stream_duplex","isarray","string_decoder/",27,"TransformState","afterTransform","needTransform","transforming","writecb","writechunk","ts","_transformState","rs","_flush","ws","_write","writeencoding",28,"WriteReq","WritableState","writableObjectMode","ending","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","pendingcb","prefinished","errorEmitted","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","doWrite","writev","_writev","onwriteError","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","finishMaybe","cbs","entry","prefinish","need","endWritable","cork","uncork",29,"ar","isBoolean","isSymbol","isRegExp","objectToString","isDate","isPrimitive",30,"./lib/_stream_passthrough.js",31,"./lib/_stream_readable.js","./lib/_stream_transform.js","./lib/_stream_writable.js",32,33,34,"didOnEnd","destroy","_isStdio","readable-stream/duplex.js","readable-stream/passthrough.js","readable-stream/readable.js","readable-stream/transform.js","readable-stream/writable.js",35,"assertEncoding","isBufferEncoding","passThroughWrite","utf16DetectIncompleteChar","charReceived","charLength","base64DetectIncompleteChar","surrogateSize","detectIncompleteChar","charBuffer","charStr","available","charCode","substring","cr",36,"saveAs","navigator","msSaveOrOpenBlob","view","userAgent","doc","get_URL","URL","webkitURL","save_link","createElementNS","can_use_save_link","click","node","createEvent","initMouseEvent","dispatchEvent","webkit_req_fs","webkitRequestFileSystem","req_fs","requestFileSystem","mozRequestFileSystem","throw_outside","setImmediate","force_saveable_type","fs_min_size","arbitrary_revoke_timeout","revoke","file","revoker","revokeObjectURL","chrome","dispatch","filesaver","event_types","FileSaver","blob","object_url","target_view","blob_changed","dispatch_all","fs_error","createObjectURL","location","new_tab","open","safari","readyState","DONE","abortable","func","create_if_not_found","exclusive","INIT","download","webkitSlice","TEMPORARY","fs","getDirectory","save","getFile","createWriter","writer","onwriteend","toURL","ABORT_ERR","WRITING","NOT_FOUND_ERR","FS_proto","onwritestart","onprogress","onabort","content",37,"ramda","_add","_all","_any","_assoc","prop","_cloneRegExp","_complement","_compose","_concat","set1","set2","_containsWith","pred","_createMapEntry","_createMaxMinBy","comparator","valueComputer","computedCurrent","winner","computedWinner","_curry1","f1","_curry2","f2","_curry3","f3","_dissoc","_filter","_filterIndexed","_forEach","_functionsWith","_gt","_has","_indexOf","from","_isArray","_isInteger","isInteger","_isThenable","_isTransformer","_lastIndexOf","_lt","_map","_multiply","_nth","_path","_prepend","el","_reduced","__transducers_reduced__","_satisfiesSpec","parsedSpec","testObj","fnLen","objLen","_slice","to","_xall","XAll","xf","_xany","XAny","_xdrop","XDrop","_xdropWhile","XDropWhile","_xfilter","XFilter","_xfind","XFind","found","_xfindIndex","XFindIndex","_xfindLast","XFindLast","_xfindLastIndex","XFindLastIndex","lastIdx","_xmap","XMap","_xtake","XTake","_xtakeWhile","XTakeWhile","_xwrap","XWrap","aperture","arity","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","assoc","thisObj","both","complement","cond","pairs","containsWith","countBy","counts","createMapEntry","curryN","shortfall","initialArgs","currentArgs","combinedArgs","dec","defaultTo","differenceWith","second","firstLen","containsPred","dissoc","divide","either","eq","eqProps","obj1","obj2","filterIndexed","forEachIndexed","fromPairs","gt","gte","hasIn","identity","ifElse","onTrue","onFalse","inc","insertAll","elts","Ctor","isArrayLike","nodeType","isEmpty","isNil","isSet","keysIn","ks","lastIndexOf","lens","lns","lensOn","lt","lte","mapAccum","mapAccumRight","mapIndexed","mathMod","maxBy","memoize","repr","serialize","cache","minBy","modulo","multiply","nAry","nth","nthArg","nthChar","nthCharCode","of","omit","names","called","pathEq","pick","pickAll","pickBy","prepend","propEq","propOr","props","ps","range","reduceIndexed","reduceRight","reduceRightIndexed","rejectIndexed","regex","replacement","reverse","sortBy","aa","bb","strIndexOf","strLastIndexOf","subtract","tap","times","toPairs","toPairsIn","zeroWidth","hasProtoTrim","beginRx","endRx","unapply","unary","unfold","uniqWith","valuesIn","vs","wrapper","xprod","ilen","jlen","rv","zipObj","F","T","_append","_assocPath","_baseCopy","refFrom","refTo","copiedValue","_checkForMethod","methodname","_composeP","_contains","_createComposer","composeFunction","_createMaxMin","initialVal","computed","_createPartialApplicator","_dispatchable","transducer","_dissocPath","_hasMethod","_makeFlat","recursive","flatt","_pluck","_reduce","_arrayReduce","_iterableReduce","iter","_methodReduce","symIterator","Symbol","iterator","_xgroupBy","XGroupBy","inputs","assocPath","binary","composeP","converge","fns","curry","difference","dissocPath","drop","dropWhile","findIndex","findLast","findLastIndex","flip","funcName","functionsIn","groupBy","insert","intersectionWith","list1","list2","invoke","invoker","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","nIdx","mapObj","mapObjIndexed","none","partial","partialRight","partition","pipeP","pluck","fromIndex","toIndex","substringFrom","substringTo","sum","toLower","toUpper","transduce","unionWith","uniq","unnest","useWith","transformers","tlen","vals","where","_eqDeep","stackA","stackB","typeA","keysA","_extend","destination","_predicateWrap","predPicker","preds","predIterator","predicate","allPass","anyPass","ap","chain","commuteMap","consF","ftor","constructN","Fn","$0","$1","$2","$3","$4","$5","$6","$7","$8","$9","eqDeep","evolve","transformations","functions","intersection","invert","invertObj","liftN","lifted","product","project","union","_stepCat","_stepCatArray","_stepCatString","_stepCatObject","commute","construct","into","lift","R",38,"rng","crypto","getRandomValues","_rnds8","_rnds",39,"parse","ii","oct","_hexToByte","unparse","bth","_byteToHex","v1","clockseq","_clockseq","msecs","nsecs","_lastNSecs","dt","_lastMSecs","tl","tmh","_nodeId","v4","rnds","_rng","_seedBytes","uuid","./rng",40,"./vdom/create-element.js",41,"./vtree/diff.js",42,"./virtual-hyperscript/index.js",43,"patch","VNode","VText","./create-element.js","./diff.js","./h.js","./patch.js","./vnode/vnode.js","./vnode/vtext.js",44,"undef","nativeSplit","compliantExecNpcg","exec","separator","separator2","lastIndex","lastLength","extended","lastLastIndex",45,"EvStore","elem","hashKey","OneVersionConstraint","MY_VERSION","individual/one-version",46,"Individual",47,"OneVersion","moduleName","defaultValue","enforceKey","versionValue","./index.js",48,"topLevel","minDoc","doccy","min-document",49,50,"nativeIsArray",51,"./vdom/patch.js",52,"applyProperties","previous","propName","propValue","removeProperty","isHook","hook","patchObject","previousValue","unhook","attrName","removeAttribute","getPrototype","replacer","attrValue","setAttribute","getPrototypeOf","__proto__","../vnode/is-vhook.js","is-object",53,"vnode","warn","handleThunk","isWidget","isVText","createTextNode","text","isVNode","namespace","tagName","properties","children","childNode","appendChild","../vnode/handle-thunk.js","../vnode/is-vnode.js","../vnode/is-vtext.js","../vnode/is-widget.js","./apply-properties","global/document",54,"domIndex","rootNode","indices","nodes","ascending","recurse","rootIndex","indexInRange","vChildren","childNodes","vChild","noChild","nextIndex","currentIndex","currentItem","minIndex","maxIndex",55,"applyPatch","vpatch","domNode","renderOptions","vNode","VPatch","REMOVE","removeNode","INSERT","insertNode","VTEXT","stringPatch","WIDGET","widgetPatch","VNODE","vNodePatch","ORDER","reorderChildren","PROPS","THUNK","replaceRoot","parentNode","destroyWidget","newNode","render","leftVNode","vText","replaceData","replaceChild","widget","updating","updateWidget","w","moves","keyMap","removes","inserts","insertBefore","oldRoot","newRoot","../vnode/vpatch.js","./create-element","./update-widget",56,"patches","patchRecursive","patchIndices","ownerDocument","nodeIndex","patchList","patchOp","./dom-index","./patch-op","x-is-array",57,58,"EvHook","propertyName","es","ev-store",59,"SoftSetHook",60,"tag","isChildren","parseTag","softSetHook","transformProperties","addChild","isChild","UnexpectedVirtualElement","foreignObject","parentVnode","evHook","isVThunk","errorString","JSON","stringify","../vnode/is-thunk","../vnode/is-vhook","../vnode/is-vnode","../vnode/is-vtext","../vnode/is-widget","../vnode/vnode.js","../vnode/vtext.js","./hooks/ev-hook.js","./hooks/soft-set-hook.js","./parse-tag.js",61,"noId","tagParts","classIdSplit","notClassId","classes","toUpperCase","browser-split",62,"renderedA","renderedB","isThunk","renderThunk","thunk","renderedThunk","./is-thunk","./is-vnode","./is-vtext","./is-widget",63,64,65,"isVirtualNode","./version",66,"isVirtualText",67,68,69,"VirtualNode","noProperties","noChildren","hooks","descendants","hasWidgets","hasThunks","descendantHooks","isVHook","./is-vhook",70,"VirtualPatch","NONE",71,"VirtualText",72,"diffProps","aKey","aValue","bValue","objectDiff","bKey",73,"walk","applyClear","thunks","clearState","appendPatch","propsPatch","diffChildren","aChildren","orderedSet","reorder","bChildren","aLen","bLen","leftNode","rightNode","destroyWidgets","thunkPatch","hasPatches","undefinedKeys","bChildIndex","keyIndex","bKeys","bFree","free","aChildIndex","aKeys","aFree","newChildren","freeIndex","freeCount","deletedItems","itemIndex","aItem","lastFreeIndex","newItem","simulateItem","simulate","simulateIndex","wantedItem","../vnode/handle-thunk","../vnode/vpatch","./diff-props",74,"virtualHTML","html","defaultCb","htmltree","dom","attributes","htmlFor","dataset","createDataSet","createVNode","raw","fields","camel","to-camel-case","virtual-dom/h",75,"strict","parser","sax","lowercase","doctype","ondoctype","ontext","oncomment","comment","onscript","script","onopentag","void","void_elements","onclosetag","close",76,"SAXParser","opt","clearBuffers","q","bufferCheckPosition","MAX_BUFFER_LENGTH","lowercasetags","looseCase","tags","closed","closedRoot","sawRoot","noscript","S","BEGIN","ENTITIES","attribList","xmlns","ns","rootNS","trackPosition","line","column","checkBufferLength","maxAllowed","maxActual","buffers","closeText","emitNode","cdata","createStream","SAXStream","_parser","_decoder","streamWraps","charClass","charclass","textNode","textopts","normalize","strictFail","TEXT","newTag","qname","qualName","prefix","local","attrib","attribName","attribValue","qn","XML_NAMESPACE","XMLNS_NAMESPACE","openTag","selfClosing","uri","nv","isSelfClosing","SCRIPT","closeTag","closeTo","parseEntity","entity","entityLC","numStr","OPEN_WAKA","startTagPosition","whitespace","starti","TEXT_ENTITY","SCRIPT_ENDING","CLOSE_TAG","SGML_DECL","sgmlDecl","nameStart","OPEN_TAG","PROC_INST","procInstName","procInstBody","pad","CDATA","COMMENT","DOCTYPE","quote","SGML_DECL_QUOTED","DOCTYPE_DTD","DOCTYPE_QUOTED","DOCTYPE_DTD_QUOTED","COMMENT_ENDING","COMMENT_ENDED","CDATA_ENDING","CDATA_ENDING_2","PROC_INST_ENDING","PROC_INST_BODY","nameBody","OPEN_TAG_SLASH","ATTRIB","ATTRIB_NAME","ATTRIB_VALUE","ATTRIB_NAME_SAW_WHITE","ATTRIB_VALUE_QUOTED","ATTRIB_VALUE_UNQUOTED","ATTRIB_VALUE_ENTITY_Q","attribEnd","ATTRIB_VALUE_ENTITY_U","CLOSE_TAG_SAW_WHITE","returnState","EVENTS","SD","leftovers","number","letter","xml","STATE","COMMENT_STARTING","amp","quot","apos","AElig","Aacute","Acirc","Agrave","Aring","Atilde","Auml","Ccedil","ETH","Eacute","Ecirc","Egrave","Euml","Iacute","Icirc","Igrave","Iuml","Ntilde","Oacute","Ocirc","Ograve","Oslash","Otilde","Ouml","THORN","Uacute","Ucirc","Ugrave","Uuml","Yacute","aacute","acirc","aelig","agrave","aring","atilde","auml","ccedil","eacute","ecirc","egrave","eth","euml","iacute","icirc","igrave","iuml","ntilde","oacute","ocirc","ograve","oslash","otilde","ouml","szlig","thorn","uacute","ucirc","ugrave","uuml","yacute","yuml","reg","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","shy","macr","deg","plusmn","sup1","sup2","sup3","acute","micro","para","middot","cedil","ordm","raquo","frac14","frac12","frac34","iquest","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","exist","nabla","isin","notin","ni","prod","minus","lowast","radic","infin","ang","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","string_decoder",77,"toCamelCase","toSpace","matches","to-space-case",78,"toSpaceCase","clean","to-no-case",79,"toNoCase","hasSpace","hasSeparator","unseparate","hasCamel","uncamelize","separatorSplitter","camelSplitter","uppers",80,"getCurrentPlan","_ref","addEntry","description","category","expense","income","period","_ref$categories","updateCategory","categoryIndex","updateEntry","entryIndex","updateCurrentPlan","removeCategory","removeEntry","removePlan","planIndex","loadAllData","../state",81,"lsKey","localStorage","setItem","stored","getItem",82,"asProperty","currentPlan","plan","baconjs","baobab","baobab/src/cursor","baobab/src/facet",83,"_createClass","defineProperties","protoProps","staticProps","_classCallCheck","instance","vdom","vhtml","mixin","renderer","omnium","Omnium","render_","newTree","settings","virtual-dom","virtual-html",84,"_ref$name","_ref$budget","../utils/omnium",85,"numberOfPeriods","cloneCategories","selectedPeriod","selectedPeriodIndex","extendedPeriods","planPeriods","bootstrap/js/modal",86,"_defineProperty","hasCategory","hasPeriod","spentInPeriod","summer","expMinusInc","incMinusExp","periodHeader","categoryRow","periodResults","amountLeft","periodBudgets","maxBudgetThisPeriod","spentThisPeriod","budgetThisPeriod","leftThisPeriod","toFixed","total","negative","table","periodResultBalance","balance","totalResultBalance","expenses","incomes","periodTable","button","field","closest",87,"Blob","filesaver.js",88,"link","showInput","reader","FileReader","onload","readAsText","files",89,"categoryOption","selected","categorySelect","classnames","entryTemplate","stopPropagation","form",90,"tab","active","confirm"],"mappings":"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5B,EAAA8B,UACAoG,IAAA,IACAhsB,GAAA,IACAsB,GAAA,IACA2qB,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,IAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,IAAA,IACAC,KAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,KAAA,IACAvxC,KAAA,IACAwxC,IAAA,IACAC,KAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,IAAA,IACAC,OAAA,IACAC,KAAA,IACAC,IAAA,IACAC,KAAA,IACAC,MAAA,IACA11D,IAAA,IACA21D,IAAA,IACAC,KAAA,IACAC,IAAA,IACAC,OAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,KAAA,IACAC,OAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAztB,MAAA,IACA9E,OAAA,IACAwyB,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,KAAA,IACAC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","file":"main.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nvar state = require('./state');\nvar localstate = require('./modules/localstate');\nvar actions = require('./modules/actions');\n\nvar ledger = require('./views/ledger');\nvar budget = require('./views/budget');\nvar addCategory = require('./views/addCategory');\nvar plans = require('./views/plans');\nvar addPlan = require('./views/addPlan');\nvar exporter = require('./views/exporter');\nvar importer = require('./views/importer');\n\nlocalstate.load('state', state);\nlocalstate.sync('state', state);\n\nvar viewState = {\n  state,\n  plans: state.select('plans'),\n  currentPlanId: state.select('currentPlanId'),\n  categories: state.facets.currentCategories,\n  entries: state.facets.currentEntries,\n  periods: state.facets.currentPeriods,\n};\n\nledger.init($('.js-ledger'), viewState, actions);\nbudget.init($('.js-budget'), viewState, actions);\naddCategory.init($('.js-add-category'), viewState, actions);\nplans.init($('.js-plans'), viewState, actions);\naddPlan.init($('.js-add-plan'), viewState, actions);\nexporter.init($('.js-exporter'), viewState, actions);\nimporter.init($('.js-importer'), viewState, actions);\n",null,"(function() {\n  var Bacon, BufferingSource, Bus, CompositeUnsubscribe, ConsumingSource, Desc, Dispatcher, End, Error, Event, EventStream, Exception, Initial, Next, None, Observable, Property, PropertyDispatcher, Some, Source, UpdateBarrier, _, addPropertyInitValueToStream, assert, assertArray, assertEventStream, assertFunction, assertNoArguments, assertObservable, assertString, cloneArray, constantToFunction, containsDuplicateDeps, convertArgsToFunction, describe, endEvent, eventIdCounter, eventMethods, findDeps, findHandlerMethods, flatMap_, former, idCounter, initialEvent, isArray, isFieldKey, isObservable, latter, liftCallback, makeFunction, makeFunctionArgs, makeFunction_, makeObservable, makeSpawner, nextEvent, nop, partiallyApplied, recursionDepth, ref, registerObs, spys, toCombinator, toEvent, toFieldExtractor, toFieldKey, toOption, toSimpleExtractor, valueAndEnd, withDescription, withMethodCallSupport,\n    hasProp = {}.hasOwnProperty,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    slice = [].slice,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  Bacon = {\n    toString: function() {\n      return \"Bacon\";\n    }\n  };\n\n  Bacon.version = '0.7.53';\n\n  Exception = (typeof global !== \"undefined\" && global !== null ? global : this).Error;\n\n  nop = function() {};\n\n  latter = function(_, x) {\n    return x;\n  };\n\n  former = function(x, _) {\n    return x;\n  };\n\n  cloneArray = function(xs) {\n    return xs.slice(0);\n  };\n\n  assert = function(message, condition) {\n    if (!condition) {\n      throw new Exception(message);\n    }\n  };\n\n  assertEventStream = function(event) {\n    if (!(event instanceof EventStream)) {\n      throw new Exception(\"not an EventStream : \" + event);\n    }\n  };\n\n  assertObservable = function(event) {\n    if (!(event instanceof Observable)) {\n      throw new Exception(\"not an Observable : \" + event);\n    }\n  };\n\n  assertFunction = function(f) {\n    return assert(\"not a function : \" + f, _.isFunction(f));\n  };\n\n  isArray = function(xs) {\n    return xs instanceof Array;\n  };\n\n  isObservable = function(x) {\n    return x instanceof Observable;\n  };\n\n  assertArray = function(xs) {\n    if (!isArray(xs)) {\n      throw new Exception(\"not an array : \" + xs);\n    }\n  };\n\n  assertNoArguments = function(args) {\n    return assert(\"no arguments supported\", args.length === 0);\n  };\n\n  assertString = function(x) {\n    if (typeof x !== \"string\") {\n      throw new Exception(\"not a string : \" + x);\n    }\n  };\n\n  _ = {\n    indexOf: Array.prototype.indexOf ? function(xs, x) {\n      return xs.indexOf(x);\n    } : function(xs, x) {\n      var i, j, len1, y;\n      for (i = j = 0, len1 = xs.length; j < len1; i = ++j) {\n        y = xs[i];\n        if (x === y) {\n          return i;\n        }\n      }\n      return -1;\n    },\n    indexWhere: function(xs, f) {\n      var i, j, len1, y;\n      for (i = j = 0, len1 = xs.length; j < len1; i = ++j) {\n        y = xs[i];\n        if (f(y)) {\n          return i;\n        }\n      }\n      return -1;\n    },\n    head: function(xs) {\n      return xs[0];\n    },\n    always: function(x) {\n      return function() {\n        return x;\n      };\n    },\n    negate: function(f) {\n      return function(x) {\n        return !f(x);\n      };\n    },\n    empty: function(xs) {\n      return xs.length === 0;\n    },\n    tail: function(xs) {\n      return xs.slice(1, xs.length);\n    },\n    filter: function(f, xs) {\n      var filtered, j, len1, x;\n      filtered = [];\n      for (j = 0, len1 = xs.length; j < len1; j++) {\n        x = xs[j];\n        if (f(x)) {\n          filtered.push(x);\n        }\n      }\n      return filtered;\n    },\n    map: function(f, xs) {\n      var j, len1, results, x;\n      results = [];\n      for (j = 0, len1 = xs.length; j < len1; j++) {\n        x = xs[j];\n        results.push(f(x));\n      }\n      return results;\n    },\n    each: function(xs, f) {\n      var key, value;\n      for (key in xs) {\n        value = xs[key];\n        f(key, value);\n      }\n      return void 0;\n    },\n    toArray: function(xs) {\n      if (isArray(xs)) {\n        return xs;\n      } else {\n        return [xs];\n      }\n    },\n    contains: function(xs, x) {\n      return _.indexOf(xs, x) !== -1;\n    },\n    id: function(x) {\n      return x;\n    },\n    last: function(xs) {\n      return xs[xs.length - 1];\n    },\n    all: function(xs, f) {\n      var j, len1, x;\n      if (f == null) {\n        f = _.id;\n      }\n      for (j = 0, len1 = xs.length; j < len1; j++) {\n        x = xs[j];\n        if (!f(x)) {\n          return false;\n        }\n      }\n      return true;\n    },\n    any: function(xs, f) {\n      var j, len1, x;\n      if (f == null) {\n        f = _.id;\n      }\n      for (j = 0, len1 = xs.length; j < len1; j++) {\n        x = xs[j];\n        if (f(x)) {\n          return true;\n        }\n      }\n      return false;\n    },\n    without: function(x, xs) {\n      return _.filter((function(y) {\n        return y !== x;\n      }), xs);\n    },\n    remove: function(x, xs) {\n      var i;\n      i = _.indexOf(xs, x);\n      if (i >= 0) {\n        return xs.splice(i, 1);\n      }\n    },\n    fold: function(xs, seed, f) {\n      var j, len1, x;\n      for (j = 0, len1 = xs.length; j < len1; j++) {\n        x = xs[j];\n        seed = f(seed, x);\n      }\n      return seed;\n    },\n    flatMap: function(f, xs) {\n      return _.fold(xs, [], (function(ys, x) {\n        return ys.concat(f(x));\n      }));\n    },\n    cached: function(f) {\n      var value;\n      value = None;\n      return function() {\n        if (value === None) {\n          value = f();\n          f = void 0;\n        }\n        return value;\n      };\n    },\n    isFunction: function(f) {\n      return typeof f === \"function\";\n    },\n    toString: function(obj) {\n      var ex, internals, key, value;\n      try {\n        recursionDepth++;\n        if (obj == null) {\n          return \"undefined\";\n        } else if (_.isFunction(obj)) {\n          return \"function\";\n        } else if (isArray(obj)) {\n          if (recursionDepth > 5) {\n            return \"[..]\";\n          }\n          return \"[\" + _.map(_.toString, obj).toString() + \"]\";\n        } else if (((obj != null ? obj.toString : void 0) != null) && obj.toString !== Object.prototype.toString) {\n          return obj.toString();\n        } else if (typeof obj === \"object\") {\n          if (recursionDepth > 5) {\n            return \"{..}\";\n          }\n          internals = (function() {\n            var results;\n            results = [];\n            for (key in obj) {\n              if (!hasProp.call(obj, key)) continue;\n              value = (function() {\n                try {\n                  return obj[key];\n                } catch (_error) {\n                  ex = _error;\n                  return ex;\n                }\n              })();\n              results.push(_.toString(key) + \":\" + _.toString(value));\n            }\n            return results;\n          })();\n          return \"{\" + internals + \"}\";\n        } else {\n          return obj;\n        }\n      } finally {\n        recursionDepth--;\n      }\n    }\n  };\n\n  recursionDepth = 0;\n\n  Bacon._ = _;\n\n  UpdateBarrier = Bacon.UpdateBarrier = (function() {\n    var afterTransaction, afters, aftersIndex, currentEventId, flush, flushDepsOf, flushWaiters, hasWaiters, inTransaction, rootEvent, waiterObs, waiters, whenDoneWith, wrappedSubscribe;\n    rootEvent = void 0;\n    waiterObs = [];\n    waiters = {};\n    afters = [];\n    aftersIndex = 0;\n    afterTransaction = function(f) {\n      if (rootEvent) {\n        return afters.push(f);\n      } else {\n        return f();\n      }\n    };\n    whenDoneWith = function(obs, f) {\n      var obsWaiters;\n      if (rootEvent) {\n        obsWaiters = waiters[obs.id];\n        if (obsWaiters == null) {\n          obsWaiters = waiters[obs.id] = [f];\n          return waiterObs.push(obs);\n        } else {\n          return obsWaiters.push(f);\n        }\n      } else {\n        return f();\n      }\n    };\n    flush = function() {\n      while (waiterObs.length > 0) {\n        flushWaiters(0);\n      }\n      return void 0;\n    };\n    flushWaiters = function(index) {\n      var f, j, len1, obs, obsId, obsWaiters;\n      obs = waiterObs[index];\n      obsId = obs.id;\n      obsWaiters = waiters[obsId];\n      waiterObs.splice(index, 1);\n      delete waiters[obsId];\n      flushDepsOf(obs);\n      for (j = 0, len1 = obsWaiters.length; j < len1; j++) {\n        f = obsWaiters[j];\n        f();\n      }\n      return void 0;\n    };\n    flushDepsOf = function(obs) {\n      var dep, deps, index, j, len1;\n      deps = obs.internalDeps();\n      for (j = 0, len1 = deps.length; j < len1; j++) {\n        dep = deps[j];\n        flushDepsOf(dep);\n        if (waiters[dep.id]) {\n          index = _.indexOf(waiterObs, dep);\n          flushWaiters(index);\n        }\n      }\n      return void 0;\n    };\n    inTransaction = function(event, context, f, args) {\n      var after, result;\n      if (rootEvent) {\n        return f.apply(context, args);\n      } else {\n        rootEvent = event;\n        try {\n          result = f.apply(context, args);\n          flush();\n        } finally {\n          rootEvent = void 0;\n          while (aftersIndex < afters.length) {\n            after = afters[aftersIndex];\n            aftersIndex++;\n            after();\n          }\n          aftersIndex = 0;\n          afters = [];\n        }\n        return result;\n      }\n    };\n    currentEventId = function() {\n      if (rootEvent) {\n        return rootEvent.id;\n      } else {\n        return void 0;\n      }\n    };\n    wrappedSubscribe = function(obs, sink) {\n      var doUnsub, shouldUnsub, unsub, unsubd;\n      unsubd = false;\n      shouldUnsub = false;\n      doUnsub = function() {\n        return shouldUnsub = true;\n      };\n      unsub = function() {\n        unsubd = true;\n        return doUnsub();\n      };\n      doUnsub = obs.dispatcher.subscribe(function(event) {\n        return afterTransaction(function() {\n          var reply;\n          if (!unsubd) {\n            reply = sink(event);\n            if (reply === Bacon.noMore) {\n              return unsub();\n            }\n          }\n        });\n      });\n      if (shouldUnsub) {\n        doUnsub();\n      }\n      return unsub;\n    };\n    hasWaiters = function() {\n      return waiterObs.length > 0;\n    };\n    return {\n      whenDoneWith: whenDoneWith,\n      hasWaiters: hasWaiters,\n      inTransaction: inTransaction,\n      currentEventId: currentEventId,\n      wrappedSubscribe: wrappedSubscribe,\n      afterTransaction: afterTransaction\n    };\n  })();\n\n  Source = (function() {\n    function Source(obs1, sync, lazy1) {\n      this.obs = obs1;\n      this.sync = sync;\n      this.lazy = lazy1 != null ? lazy1 : false;\n      this.queue = [];\n    }\n\n    Source.prototype.subscribe = function(sink) {\n      return this.obs.dispatcher.subscribe(sink);\n    };\n\n    Source.prototype.toString = function() {\n      return this.obs.toString();\n    };\n\n    Source.prototype.markEnded = function() {\n      return this.ended = true;\n    };\n\n    Source.prototype.consume = function() {\n      if (this.lazy) {\n        return {\n          value: _.always(this.queue[0])\n        };\n      } else {\n        return this.queue[0];\n      }\n    };\n\n    Source.prototype.push = function(x) {\n      return this.queue = [x];\n    };\n\n    Source.prototype.mayHave = function() {\n      return true;\n    };\n\n    Source.prototype.hasAtLeast = function() {\n      return this.queue.length;\n    };\n\n    Source.prototype.flatten = true;\n\n    return Source;\n\n  })();\n\n  ConsumingSource = (function(superClass) {\n    extend(ConsumingSource, superClass);\n\n    function ConsumingSource() {\n      return ConsumingSource.__super__.constructor.apply(this, arguments);\n    }\n\n    ConsumingSource.prototype.consume = function() {\n      return this.queue.shift();\n    };\n\n    ConsumingSource.prototype.push = function(x) {\n      return this.queue.push(x);\n    };\n\n    ConsumingSource.prototype.mayHave = function(c) {\n      return !this.ended || this.queue.length >= c;\n    };\n\n    ConsumingSource.prototype.hasAtLeast = function(c) {\n      return this.queue.length >= c;\n    };\n\n    ConsumingSource.prototype.flatten = false;\n\n    return ConsumingSource;\n\n  })(Source);\n\n  BufferingSource = (function(superClass) {\n    extend(BufferingSource, superClass);\n\n    function BufferingSource(obs) {\n      BufferingSource.__super__.constructor.call(this, obs, true);\n    }\n\n    BufferingSource.prototype.consume = function() {\n      var values;\n      values = this.queue;\n      this.queue = [];\n      return {\n        value: function() {\n          return values;\n        }\n      };\n    };\n\n    BufferingSource.prototype.push = function(x) {\n      return this.queue.push(x.value());\n    };\n\n    BufferingSource.prototype.hasAtLeast = function() {\n      return true;\n    };\n\n    return BufferingSource;\n\n  })(Source);\n\n  Source.isTrigger = function(s) {\n    if (s instanceof Source) {\n      return s.sync;\n    } else {\n      return s instanceof EventStream;\n    }\n  };\n\n  Source.fromObservable = function(s) {\n    if (s instanceof Source) {\n      return s;\n    } else if (s instanceof Property) {\n      return new Source(s, false);\n    } else {\n      return new ConsumingSource(s, true);\n    }\n  };\n\n  Desc = (function() {\n    function Desc(context1, method1, args1) {\n      this.context = context1;\n      this.method = method1;\n      this.args = args1;\n      this.cached = void 0;\n    }\n\n    Desc.prototype.deps = function() {\n      return this.cached || (this.cached = findDeps([this.context].concat(this.args)));\n    };\n\n    Desc.prototype.apply = function(obs) {\n      obs.desc = this;\n      return obs;\n    };\n\n    Desc.prototype.toString = function() {\n      return _.toString(this.context) + \".\" + _.toString(this.method) + \"(\" + _.map(_.toString, this.args) + \")\";\n    };\n\n    return Desc;\n\n  })();\n\n  describe = function() {\n    var args, context, method;\n    context = arguments[0], method = arguments[1], args = 3 <= arguments.length ? slice.call(arguments, 2) : [];\n    if ((context || method) instanceof Desc) {\n      return context || method;\n    } else {\n      return new Desc(context, method, args);\n    }\n  };\n\n  withDescription = function() {\n    var desc, j, obs;\n    desc = 2 <= arguments.length ? slice.call(arguments, 0, j = arguments.length - 1) : (j = 0, []), obs = arguments[j++];\n    return describe.apply(null, desc).apply(obs);\n  };\n\n  findDeps = function(x) {\n    if (isArray(x)) {\n      return _.flatMap(findDeps, x);\n    } else if (isObservable(x)) {\n      return [x];\n    } else if (x instanceof Source) {\n      return [x.obs];\n    } else {\n      return [];\n    }\n  };\n\n  withMethodCallSupport = function(wrapped) {\n    return function() {\n      var args, context, f, methodName;\n      f = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n      if (typeof f === \"object\" && args.length) {\n        context = f;\n        methodName = args[0];\n        f = function() {\n          return context[methodName].apply(context, arguments);\n        };\n        args = args.slice(1);\n      }\n      return wrapped.apply(null, [f].concat(slice.call(args)));\n    };\n  };\n\n  makeFunctionArgs = function(args) {\n    args = Array.prototype.slice.call(args);\n    return makeFunction_.apply(null, args);\n  };\n\n  partiallyApplied = function(f, applied) {\n    return function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return f.apply(null, applied.concat(args));\n    };\n  };\n\n  toSimpleExtractor = function(args) {\n    return function(key) {\n      return function(value) {\n        var fieldValue;\n        if (value == null) {\n          return void 0;\n        } else {\n          fieldValue = value[key];\n          if (_.isFunction(fieldValue)) {\n            return fieldValue.apply(value, args);\n          } else {\n            return fieldValue;\n          }\n        }\n      };\n    };\n  };\n\n  toFieldExtractor = function(f, args) {\n    var partFuncs, parts;\n    parts = f.slice(1).split(\".\");\n    partFuncs = _.map(toSimpleExtractor(args), parts);\n    return function(value) {\n      var j, len1;\n      for (j = 0, len1 = partFuncs.length; j < len1; j++) {\n        f = partFuncs[j];\n        value = f(value);\n      }\n      return value;\n    };\n  };\n\n  isFieldKey = function(f) {\n    return (typeof f === \"string\") && f.length > 1 && f.charAt(0) === \".\";\n  };\n\n  makeFunction_ = withMethodCallSupport(function() {\n    var args, f;\n    f = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (_.isFunction(f)) {\n      if (args.length) {\n        return partiallyApplied(f, args);\n      } else {\n        return f;\n      }\n    } else if (isFieldKey(f)) {\n      return toFieldExtractor(f, args);\n    } else {\n      return _.always(f);\n    }\n  });\n\n  makeFunction = function(f, args) {\n    return makeFunction_.apply(null, [f].concat(slice.call(args)));\n  };\n\n  convertArgsToFunction = function(obs, f, args, method) {\n    var sampled;\n    if (f instanceof Property) {\n      sampled = f.sampledBy(obs, function(p, s) {\n        return [p, s];\n      });\n      return method.call(sampled, function(arg) {\n        var p, s;\n        p = arg[0], s = arg[1];\n        return p;\n      }).map(function(arg) {\n        var p, s;\n        p = arg[0], s = arg[1];\n        return s;\n      });\n    } else {\n      f = makeFunction(f, args);\n      return method.call(obs, f);\n    }\n  };\n\n  toCombinator = function(f) {\n    var key;\n    if (_.isFunction(f)) {\n      return f;\n    } else if (isFieldKey(f)) {\n      key = toFieldKey(f);\n      return function(left, right) {\n        return left[key](right);\n      };\n    } else {\n      throw new Exception(\"not a function or a field key: \" + f);\n    }\n  };\n\n  toFieldKey = function(f) {\n    return f.slice(1);\n  };\n\n  Some = (function() {\n    function Some(value1) {\n      this.value = value1;\n    }\n\n    Some.prototype.getOrElse = function() {\n      return this.value;\n    };\n\n    Some.prototype.get = function() {\n      return this.value;\n    };\n\n    Some.prototype.filter = function(f) {\n      if (f(this.value)) {\n        return new Some(this.value);\n      } else {\n        return None;\n      }\n    };\n\n    Some.prototype.map = function(f) {\n      return new Some(f(this.value));\n    };\n\n    Some.prototype.forEach = function(f) {\n      return f(this.value);\n    };\n\n    Some.prototype.isDefined = true;\n\n    Some.prototype.toArray = function() {\n      return [this.value];\n    };\n\n    Some.prototype.inspect = function() {\n      return \"Some(\" + this.value + \")\";\n    };\n\n    Some.prototype.toString = function() {\n      return this.inspect();\n    };\n\n    return Some;\n\n  })();\n\n  None = {\n    getOrElse: function(value) {\n      return value;\n    },\n    filter: function() {\n      return None;\n    },\n    map: function() {\n      return None;\n    },\n    forEach: function() {},\n    isDefined: false,\n    toArray: function() {\n      return [];\n    },\n    inspect: function() {\n      return \"None\";\n    },\n    toString: function() {\n      return this.inspect();\n    }\n  };\n\n  toOption = function(v) {\n    if (v instanceof Some || v === None) {\n      return v;\n    } else {\n      return new Some(v);\n    }\n  };\n\n  Bacon.noMore = [\"<no-more>\"];\n\n  Bacon.more = [\"<more>\"];\n\n  eventIdCounter = 0;\n\n  Event = (function() {\n    function Event() {\n      this.id = ++eventIdCounter;\n    }\n\n    Event.prototype.isEvent = function() {\n      return true;\n    };\n\n    Event.prototype.isEnd = function() {\n      return false;\n    };\n\n    Event.prototype.isInitial = function() {\n      return false;\n    };\n\n    Event.prototype.isNext = function() {\n      return false;\n    };\n\n    Event.prototype.isError = function() {\n      return false;\n    };\n\n    Event.prototype.hasValue = function() {\n      return false;\n    };\n\n    Event.prototype.filter = function() {\n      return true;\n    };\n\n    Event.prototype.inspect = function() {\n      return this.toString();\n    };\n\n    Event.prototype.log = function() {\n      return this.toString();\n    };\n\n    return Event;\n\n  })();\n\n  Next = (function(superClass) {\n    extend(Next, superClass);\n\n    function Next(valueF, eager) {\n      Next.__super__.constructor.call(this);\n      if (!eager && _.isFunction(valueF) || valueF instanceof Next) {\n        this.valueF = valueF;\n        this.valueInternal = void 0;\n      } else {\n        this.valueF = void 0;\n        this.valueInternal = valueF;\n      }\n    }\n\n    Next.prototype.isNext = function() {\n      return true;\n    };\n\n    Next.prototype.hasValue = function() {\n      return true;\n    };\n\n    Next.prototype.value = function() {\n      if (this.valueF instanceof Next) {\n        this.valueInternal = this.valueF.value();\n        this.valueF = void 0;\n      } else if (this.valueF) {\n        this.valueInternal = this.valueF();\n        this.valueF = void 0;\n      }\n      return this.valueInternal;\n    };\n\n    Next.prototype.fmap = function(f) {\n      var event, value;\n      if (this.valueInternal) {\n        value = this.valueInternal;\n        return this.apply(function() {\n          return f(value);\n        });\n      } else {\n        event = this;\n        return this.apply(function() {\n          return f(event.value());\n        });\n      }\n    };\n\n    Next.prototype.apply = function(value) {\n      return new Next(value);\n    };\n\n    Next.prototype.filter = function(f) {\n      return f(this.value());\n    };\n\n    Next.prototype.toString = function() {\n      return _.toString(this.value());\n    };\n\n    Next.prototype.log = function() {\n      return this.value();\n    };\n\n    return Next;\n\n  })(Event);\n\n  Initial = (function(superClass) {\n    extend(Initial, superClass);\n\n    function Initial() {\n      return Initial.__super__.constructor.apply(this, arguments);\n    }\n\n    Initial.prototype.isInitial = function() {\n      return true;\n    };\n\n    Initial.prototype.isNext = function() {\n      return false;\n    };\n\n    Initial.prototype.apply = function(value) {\n      return new Initial(value);\n    };\n\n    Initial.prototype.toNext = function() {\n      return new Next(this);\n    };\n\n    return Initial;\n\n  })(Next);\n\n  End = (function(superClass) {\n    extend(End, superClass);\n\n    function End() {\n      return End.__super__.constructor.apply(this, arguments);\n    }\n\n    End.prototype.isEnd = function() {\n      return true;\n    };\n\n    End.prototype.fmap = function() {\n      return this;\n    };\n\n    End.prototype.apply = function() {\n      return this;\n    };\n\n    End.prototype.toString = function() {\n      return \"<end>\";\n    };\n\n    return End;\n\n  })(Event);\n\n  Error = (function(superClass) {\n    extend(Error, superClass);\n\n    function Error(error1) {\n      this.error = error1;\n    }\n\n    Error.prototype.isError = function() {\n      return true;\n    };\n\n    Error.prototype.fmap = function() {\n      return this;\n    };\n\n    Error.prototype.apply = function() {\n      return this;\n    };\n\n    Error.prototype.toString = function() {\n      return \"<error> \" + _.toString(this.error);\n    };\n\n    return Error;\n\n  })(Event);\n\n  Bacon.Event = Event;\n\n  Bacon.Initial = Initial;\n\n  Bacon.Next = Next;\n\n  Bacon.End = End;\n\n  Bacon.Error = Error;\n\n  initialEvent = function(value) {\n    return new Initial(value, true);\n  };\n\n  nextEvent = function(value) {\n    return new Next(value, true);\n  };\n\n  endEvent = function() {\n    return new End();\n  };\n\n  toEvent = function(x) {\n    if (x instanceof Event) {\n      return x;\n    } else {\n      return nextEvent(x);\n    }\n  };\n\n  idCounter = 0;\n\n  registerObs = function() {};\n\n  Observable = (function() {\n    function Observable(desc) {\n      this.id = ++idCounter;\n      withDescription(desc, this);\n      this.initialDesc = this.desc;\n    }\n\n    Observable.prototype.subscribe = function(sink) {\n      return UpdateBarrier.wrappedSubscribe(this, sink);\n    };\n\n    Observable.prototype.subscribeInternal = function(sink) {\n      return this.dispatcher.subscribe(sink);\n    };\n\n    Observable.prototype.onValue = function() {\n      var f;\n      f = makeFunctionArgs(arguments);\n      return this.subscribe(function(event) {\n        if (event.hasValue()) {\n          return f(event.value());\n        }\n      });\n    };\n\n    Observable.prototype.onValues = function(f) {\n      return this.onValue(function(args) {\n        return f.apply(null, args);\n      });\n    };\n\n    Observable.prototype.onError = function() {\n      var f;\n      f = makeFunctionArgs(arguments);\n      return this.subscribe(function(event) {\n        if (event.isError()) {\n          return f(event.error);\n        }\n      });\n    };\n\n    Observable.prototype.onEnd = function() {\n      var f;\n      f = makeFunctionArgs(arguments);\n      return this.subscribe(function(event) {\n        if (event.isEnd()) {\n          return f();\n        }\n      });\n    };\n\n    Observable.prototype.name = function(name) {\n      this._name = name;\n      return this;\n    };\n\n    Observable.prototype.withDescription = function() {\n      return describe.apply(null, arguments).apply(this);\n    };\n\n    Observable.prototype.toString = function() {\n      if (this._name) {\n        return this._name;\n      } else {\n        return this.desc.toString();\n      }\n    };\n\n    Observable.prototype.internalDeps = function() {\n      return this.initialDesc.deps();\n    };\n\n    return Observable;\n\n  })();\n\n  Observable.prototype.assign = Observable.prototype.onValue;\n\n  Observable.prototype.forEach = Observable.prototype.onValue;\n\n  Observable.prototype.inspect = Observable.prototype.toString;\n\n  Bacon.Observable = Observable;\n\n  CompositeUnsubscribe = (function() {\n    function CompositeUnsubscribe(ss) {\n      var j, len1, s;\n      if (ss == null) {\n        ss = [];\n      }\n      this.unsubscribe = bind(this.unsubscribe, this);\n      this.unsubscribed = false;\n      this.subscriptions = [];\n      this.starting = [];\n      for (j = 0, len1 = ss.length; j < len1; j++) {\n        s = ss[j];\n        this.add(s);\n      }\n    }\n\n    CompositeUnsubscribe.prototype.add = function(subscription) {\n      var ended, unsub, unsubMe;\n      if (this.unsubscribed) {\n        return;\n      }\n      ended = false;\n      unsub = nop;\n      this.starting.push(subscription);\n      unsubMe = (function(_this) {\n        return function() {\n          if (_this.unsubscribed) {\n            return;\n          }\n          ended = true;\n          _this.remove(unsub);\n          return _.remove(subscription, _this.starting);\n        };\n      })(this);\n      unsub = subscription(this.unsubscribe, unsubMe);\n      if (!(this.unsubscribed || ended)) {\n        this.subscriptions.push(unsub);\n      } else {\n        unsub();\n      }\n      _.remove(subscription, this.starting);\n      return unsub;\n    };\n\n    CompositeUnsubscribe.prototype.remove = function(unsub) {\n      if (this.unsubscribed) {\n        return;\n      }\n      if ((_.remove(unsub, this.subscriptions)) !== void 0) {\n        return unsub();\n      }\n    };\n\n    CompositeUnsubscribe.prototype.unsubscribe = function() {\n      var j, len1, ref, s;\n      if (this.unsubscribed) {\n        return;\n      }\n      this.unsubscribed = true;\n      ref = this.subscriptions;\n      for (j = 0, len1 = ref.length; j < len1; j++) {\n        s = ref[j];\n        s();\n      }\n      this.subscriptions = [];\n      return this.starting = [];\n    };\n\n    CompositeUnsubscribe.prototype.count = function() {\n      if (this.unsubscribed) {\n        return 0;\n      }\n      return this.subscriptions.length + this.starting.length;\n    };\n\n    CompositeUnsubscribe.prototype.empty = function() {\n      return this.count() === 0;\n    };\n\n    return CompositeUnsubscribe;\n\n  })();\n\n  Bacon.CompositeUnsubscribe = CompositeUnsubscribe;\n\n  Dispatcher = (function() {\n    function Dispatcher(_subscribe, _handleEvent) {\n      this._subscribe = _subscribe;\n      this._handleEvent = _handleEvent;\n      this.subscribe = bind(this.subscribe, this);\n      this.handleEvent = bind(this.handleEvent, this);\n      this.subscriptions = [];\n      this.queue = [];\n      this.pushing = false;\n      this.ended = false;\n      this.prevError = void 0;\n      this.unsubSrc = void 0;\n    }\n\n    Dispatcher.prototype.hasSubscribers = function() {\n      return this.subscriptions.length > 0;\n    };\n\n    Dispatcher.prototype.removeSub = function(subscription) {\n      return this.subscriptions = _.without(subscription, this.subscriptions);\n    };\n\n    Dispatcher.prototype.push = function(event) {\n      if (event.isEnd()) {\n        this.ended = true;\n      }\n      return UpdateBarrier.inTransaction(event, this, this.pushIt, [event]);\n    };\n\n    Dispatcher.prototype.pushToSubscriptions = function(event) {\n      var e, j, len1, reply, sub, tmp;\n      try {\n        tmp = this.subscriptions;\n        for (j = 0, len1 = tmp.length; j < len1; j++) {\n          sub = tmp[j];\n          reply = sub.sink(event);\n          if (reply === Bacon.noMore || event.isEnd()) {\n            this.removeSub(sub);\n          }\n        }\n        return true;\n      } catch (_error) {\n        e = _error;\n        this.pushing = false;\n        this.queue = [];\n        throw e;\n      }\n    };\n\n    Dispatcher.prototype.pushIt = function(event) {\n      if (!this.pushing) {\n        if (event === this.prevError) {\n          return;\n        }\n        if (event.isError()) {\n          this.prevError = event;\n        }\n        this.pushing = true;\n        this.pushToSubscriptions(event);\n        this.pushing = false;\n        while (this.queue.length) {\n          event = this.queue.shift();\n          this.push(event);\n        }\n        if (this.hasSubscribers()) {\n          return Bacon.more;\n        } else {\n          this.unsubscribeFromSource();\n          return Bacon.noMore;\n        }\n      } else {\n        this.queue.push(event);\n        return Bacon.more;\n      }\n    };\n\n    Dispatcher.prototype.handleEvent = function(event) {\n      if (this._handleEvent) {\n        return this._handleEvent(event);\n      } else {\n        return this.push(event);\n      }\n    };\n\n    Dispatcher.prototype.unsubscribeFromSource = function() {\n      if (this.unsubSrc) {\n        this.unsubSrc();\n      }\n      return this.unsubSrc = void 0;\n    };\n\n    Dispatcher.prototype.subscribe = function(sink) {\n      var subscription;\n      if (this.ended) {\n        sink(endEvent());\n        return nop;\n      } else {\n        assertFunction(sink);\n        subscription = {\n          sink: sink\n        };\n        this.subscriptions.push(subscription);\n        if (this.subscriptions.length === 1) {\n          this.unsubSrc = this._subscribe(this.handleEvent);\n          assertFunction(this.unsubSrc);\n        }\n        return (function(_this) {\n          return function() {\n            _this.removeSub(subscription);\n            if (!_this.hasSubscribers()) {\n              return _this.unsubscribeFromSource();\n            }\n          };\n        })(this);\n      }\n    };\n\n    return Dispatcher;\n\n  })();\n\n  EventStream = (function(superClass) {\n    extend(EventStream, superClass);\n\n    function EventStream(desc, subscribe, handler) {\n      if (_.isFunction(desc)) {\n        handler = subscribe;\n        subscribe = desc;\n        desc = [];\n      }\n      EventStream.__super__.constructor.call(this, desc);\n      assertFunction(subscribe);\n      this.dispatcher = new Dispatcher(subscribe, handler);\n      registerObs(this);\n    }\n\n    EventStream.prototype.toProperty = function(initValue_) {\n      var disp, initValue;\n      initValue = arguments.length === 0 ? None : toOption(function() {\n        return initValue_;\n      });\n      disp = this.dispatcher;\n      return new Property(describe(this, \"toProperty\", initValue_), function(sink) {\n        var initSent, reply, sendInit, unsub;\n        initSent = false;\n        unsub = nop;\n        reply = Bacon.more;\n        sendInit = function() {\n          if (!initSent) {\n            return initValue.forEach(function(value) {\n              initSent = true;\n              reply = sink(new Initial(value));\n              if (reply === Bacon.noMore) {\n                unsub();\n                return unsub = nop;\n              }\n            });\n          }\n        };\n        unsub = disp.subscribe(function(event) {\n          if (event.hasValue()) {\n            if (initSent && event.isInitial()) {\n              return Bacon.more;\n            } else {\n              if (!event.isInitial()) {\n                sendInit();\n              }\n              initSent = true;\n              initValue = new Some(event);\n              return sink(event);\n            }\n          } else {\n            if (event.isEnd()) {\n              reply = sendInit();\n            }\n            if (reply !== Bacon.noMore) {\n              return sink(event);\n            }\n          }\n        });\n        sendInit();\n        return unsub;\n      });\n    };\n\n    EventStream.prototype.toEventStream = function() {\n      return this;\n    };\n\n    EventStream.prototype.withHandler = function(handler) {\n      return new EventStream(describe(this, \"withHandler\", handler), this.dispatcher.subscribe, handler);\n    };\n\n    return EventStream;\n\n  })(Observable);\n\n  Bacon.EventStream = EventStream;\n\n  Bacon.never = function() {\n    return new EventStream(describe(Bacon, \"never\"), function(sink) {\n      sink(endEvent());\n      return nop;\n    });\n  };\n\n  Bacon.when = function() {\n    var f, i, index, ix, j, k, len, len1, len2, needsBarrier, pat, patSources, pats, patterns, ref, resultStream, s, sources, triggerFound, usage;\n    if (arguments.length === 0) {\n      return Bacon.never();\n    }\n    len = arguments.length;\n    usage = \"when: expecting arguments in the form (Observable+,function)+\";\n    assert(usage, len % 2 === 0);\n    sources = [];\n    pats = [];\n    i = 0;\n    patterns = [];\n    while (i < len) {\n      patterns[i] = arguments[i];\n      patterns[i + 1] = arguments[i + 1];\n      patSources = _.toArray(arguments[i]);\n      f = constantToFunction(arguments[i + 1]);\n      pat = {\n        f: f,\n        ixs: []\n      };\n      triggerFound = false;\n      for (j = 0, len1 = patSources.length; j < len1; j++) {\n        s = patSources[j];\n        index = _.indexOf(sources, s);\n        if (!triggerFound) {\n          triggerFound = Source.isTrigger(s);\n        }\n        if (index < 0) {\n          sources.push(s);\n          index = sources.length - 1;\n        }\n        ref = pat.ixs;\n        for (k = 0, len2 = ref.length; k < len2; k++) {\n          ix = ref[k];\n          if (ix.index === index) {\n            ix.count++;\n          }\n        }\n        pat.ixs.push({\n          index: index,\n          count: 1\n        });\n      }\n      assert(\"At least one EventStream required\", triggerFound || (!patSources.length));\n      if (patSources.length > 0) {\n        pats.push(pat);\n      }\n      i = i + 2;\n    }\n    if (!sources.length) {\n      return Bacon.never();\n    }\n    sources = _.map(Source.fromObservable, sources);\n    needsBarrier = (_.any(sources, function(s) {\n      return s.flatten;\n    })) && (containsDuplicateDeps(_.map((function(s) {\n      return s.obs;\n    }), sources)));\n    return resultStream = new EventStream(describe.apply(null, [Bacon, \"when\"].concat(slice.call(patterns))), function(sink) {\n      var cannotMatch, cannotSync, ends, match, nonFlattened, part, triggers;\n      triggers = [];\n      ends = false;\n      match = function(p) {\n        var l, len3, ref1;\n        ref1 = p.ixs;\n        for (l = 0, len3 = ref1.length; l < len3; l++) {\n          i = ref1[l];\n          if (!sources[i.index].hasAtLeast(i.count)) {\n            return false;\n          }\n        }\n        return true;\n      };\n      cannotSync = function(source) {\n        return !source.sync || source.ended;\n      };\n      cannotMatch = function(p) {\n        var l, len3, ref1;\n        ref1 = p.ixs;\n        for (l = 0, len3 = ref1.length; l < len3; l++) {\n          i = ref1[l];\n          if (!sources[i.index].mayHave(i.count)) {\n            return true;\n          }\n        }\n      };\n      nonFlattened = function(trigger) {\n        return !trigger.source.flatten;\n      };\n      part = function(source) {\n        return function(unsubAll) {\n          var flush, flushLater, flushWhileTriggers;\n          flushLater = function() {\n            return UpdateBarrier.whenDoneWith(resultStream, flush);\n          };\n          flushWhileTriggers = function() {\n            var events, l, len3, p, reply, trigger;\n            if (triggers.length > 0) {\n              reply = Bacon.more;\n              trigger = triggers.pop();\n              for (l = 0, len3 = pats.length; l < len3; l++) {\n                p = pats[l];\n                if (match(p)) {\n                  events = (function() {\n                    var len4, m, ref1, results;\n                    ref1 = p.ixs;\n                    results = [];\n                    for (m = 0, len4 = ref1.length; m < len4; m++) {\n                      i = ref1[m];\n                      results.push(sources[i.index].consume());\n                    }\n                    return results;\n                  })();\n                  reply = sink(trigger.e.apply(function() {\n                    var event, values;\n                    values = (function() {\n                      var len4, m, results;\n                      results = [];\n                      for (m = 0, len4 = events.length; m < len4; m++) {\n                        event = events[m];\n                        results.push(event.value());\n                      }\n                      return results;\n                    })();\n                    return p.f.apply(p, values);\n                  }));\n                  if (triggers.length) {\n                    triggers = _.filter(nonFlattened, triggers);\n                  }\n                  if (reply === Bacon.noMore) {\n                    return reply;\n                  } else {\n                    return flushWhileTriggers();\n                  }\n                }\n              }\n            } else {\n              return Bacon.more;\n            }\n          };\n          flush = function() {\n            var reply;\n            reply = flushWhileTriggers();\n            if (ends) {\n              ends = false;\n              if (_.all(sources, cannotSync) || _.all(pats, cannotMatch)) {\n                reply = Bacon.noMore;\n                sink(endEvent());\n              }\n            }\n            if (reply === Bacon.noMore) {\n              unsubAll();\n            }\n            return reply;\n          };\n          return source.subscribe(function(e) {\n            var reply;\n            if (e.isEnd()) {\n              ends = true;\n              source.markEnded();\n              flushLater();\n            } else if (e.isError()) {\n              reply = sink(e);\n            } else {\n              source.push(e);\n              if (source.sync) {\n                triggers.push({\n                  source: source,\n                  e: e\n                });\n                if (needsBarrier || UpdateBarrier.hasWaiters()) {\n                  flushLater();\n                } else {\n                  flush();\n                }\n              }\n            }\n            if (reply === Bacon.noMore) {\n              unsubAll();\n            }\n            return reply || Bacon.more;\n          });\n        };\n      };\n      return new Bacon.CompositeUnsubscribe((function() {\n        var l, len3, results;\n        results = [];\n        for (l = 0, len3 = sources.length; l < len3; l++) {\n          s = sources[l];\n          results.push(part(s));\n        }\n        return results;\n      })()).unsubscribe;\n    });\n  };\n\n  containsDuplicateDeps = function(observables, state) {\n    var checkObservable;\n    if (state == null) {\n      state = [];\n    }\n    checkObservable = function(obs) {\n      var deps;\n      if (_.contains(state, obs)) {\n        return true;\n      } else {\n        deps = obs.internalDeps();\n        if (deps.length) {\n          state.push(obs);\n          return _.any(deps, checkObservable);\n        } else {\n          state.push(obs);\n          return false;\n        }\n      }\n    };\n    return _.any(observables, checkObservable);\n  };\n\n  constantToFunction = function(f) {\n    if (_.isFunction(f)) {\n      return f;\n    } else {\n      return _.always(f);\n    }\n  };\n\n  Bacon.groupSimultaneous = function() {\n    var s, sources, streams;\n    streams = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    if (streams.length === 1 && isArray(streams[0])) {\n      streams = streams[0];\n    }\n    sources = (function() {\n      var j, len1, results;\n      results = [];\n      for (j = 0, len1 = streams.length; j < len1; j++) {\n        s = streams[j];\n        results.push(new BufferingSource(s));\n      }\n      return results;\n    })();\n    return withDescription.apply(null, [Bacon, \"groupSimultaneous\"].concat(slice.call(streams), [Bacon.when(sources, (function() {\n      var xs;\n      xs = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return xs;\n    }))]));\n  };\n\n  PropertyDispatcher = (function(superClass) {\n    extend(PropertyDispatcher, superClass);\n\n    function PropertyDispatcher(property1, subscribe, handleEvent) {\n      this.property = property1;\n      this.subscribe = bind(this.subscribe, this);\n      PropertyDispatcher.__super__.constructor.call(this, subscribe, handleEvent);\n      this.current = None;\n      this.currentValueRootId = void 0;\n      this.propertyEnded = false;\n    }\n\n    PropertyDispatcher.prototype.push = function(event) {\n      if (event.isEnd()) {\n        this.propertyEnded = true;\n      }\n      if (event.hasValue()) {\n        this.current = new Some(event);\n        this.currentValueRootId = UpdateBarrier.currentEventId();\n      }\n      return PropertyDispatcher.__super__.push.call(this, event);\n    };\n\n    PropertyDispatcher.prototype.maybeSubSource = function(sink, reply) {\n      if (reply === Bacon.noMore) {\n        return nop;\n      } else if (this.propertyEnded) {\n        sink(endEvent());\n        return nop;\n      } else {\n        return Dispatcher.prototype.subscribe.call(this, sink);\n      }\n    };\n\n    PropertyDispatcher.prototype.subscribe = function(sink) {\n      var dispatchingId, initSent, reply, valId;\n      initSent = false;\n      reply = Bacon.more;\n      if (this.current.isDefined && (this.hasSubscribers() || this.propertyEnded)) {\n        dispatchingId = UpdateBarrier.currentEventId();\n        valId = this.currentValueRootId;\n        if (!this.propertyEnded && valId && dispatchingId && dispatchingId !== valId) {\n          UpdateBarrier.whenDoneWith(this.property, (function(_this) {\n            return function() {\n              if (_this.currentValueRootId === valId) {\n                return sink(initialEvent(_this.current.get().value()));\n              }\n            };\n          })(this));\n          return this.maybeSubSource(sink, reply);\n        } else {\n          UpdateBarrier.inTransaction(void 0, this, (function() {\n            return reply = sink(initialEvent(this.current.get().value()));\n          }), []);\n          return this.maybeSubSource(sink, reply);\n        }\n      } else {\n        return this.maybeSubSource(sink, reply);\n      }\n    };\n\n    return PropertyDispatcher;\n\n  })(Dispatcher);\n\n  Property = (function(superClass) {\n    extend(Property, superClass);\n\n    function Property(desc, subscribe, handler) {\n      if (_.isFunction(desc)) {\n        handler = subscribe;\n        subscribe = desc;\n        desc = [];\n      }\n      Property.__super__.constructor.call(this, desc);\n      assertFunction(subscribe);\n      this.dispatcher = new PropertyDispatcher(this, subscribe, handler);\n      registerObs(this);\n    }\n\n    Property.prototype.changes = function() {\n      return new EventStream(describe(this, \"changes\"), (function(_this) {\n        return function(sink) {\n          return _this.dispatcher.subscribe(function(event) {\n            if (!event.isInitial()) {\n              return sink(event);\n            }\n          });\n        };\n      })(this));\n    };\n\n    Property.prototype.withHandler = function(handler) {\n      return new Property(describe(this, \"withHandler\", handler), this.dispatcher.subscribe, handler);\n    };\n\n    Property.prototype.toProperty = function() {\n      assertNoArguments(arguments);\n      return this;\n    };\n\n    Property.prototype.toEventStream = function() {\n      return new EventStream(describe(this, \"toEventStream\"), (function(_this) {\n        return function(sink) {\n          return _this.dispatcher.subscribe(function(event) {\n            if (event.isInitial()) {\n              event = event.toNext();\n            }\n            return sink(event);\n          });\n        };\n      })(this));\n    };\n\n    return Property;\n\n  })(Observable);\n\n  Bacon.Property = Property;\n\n  Bacon.constant = function(value) {\n    return new Property(describe(Bacon, \"constant\", value), function(sink) {\n      sink(initialEvent(value));\n      sink(endEvent());\n      return nop;\n    });\n  };\n\n  Bacon.fromBinder = function(binder, eventTransformer) {\n    if (eventTransformer == null) {\n      eventTransformer = _.id;\n    }\n    return new EventStream(describe(Bacon, \"fromBinder\", binder, eventTransformer), function(sink) {\n      var shouldUnbind, unbind, unbinder, unbound;\n      unbound = false;\n      shouldUnbind = false;\n      unbind = function() {\n        if (!unbound) {\n          if (typeof unbinder !== \"undefined\" && unbinder !== null) {\n            unbinder();\n            return unbound = true;\n          } else {\n            return shouldUnbind = true;\n          }\n        }\n      };\n      unbinder = binder(function() {\n        var args, event, j, len1, reply, value;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        value = eventTransformer.apply(this, args);\n        if (!(isArray(value) && _.last(value) instanceof Event)) {\n          value = [value];\n        }\n        reply = Bacon.more;\n        for (j = 0, len1 = value.length; j < len1; j++) {\n          event = value[j];\n          reply = sink(event = toEvent(event));\n          if (reply === Bacon.noMore || event.isEnd()) {\n            unbind();\n            return reply;\n          }\n        }\n        return reply;\n      });\n      if (shouldUnbind) {\n        unbind();\n      }\n      return unbind;\n    });\n  };\n\n  eventMethods = [[\"addEventListener\", \"removeEventListener\"], [\"addListener\", \"removeListener\"], [\"on\", \"off\"], [\"bind\", \"unbind\"]];\n\n  findHandlerMethods = function(target) {\n    var j, len1, methodPair, pair;\n    for (j = 0, len1 = eventMethods.length; j < len1; j++) {\n      pair = eventMethods[j];\n      methodPair = [target[pair[0]], target[pair[1]]];\n      if (methodPair[0] && methodPair[1]) {\n        return methodPair;\n      }\n    }\n    throw new Error(\"No suitable event methods in \" + target);\n  };\n\n  Bacon.fromEventTarget = function(target, eventName, eventTransformer) {\n    var ref, sub, unsub;\n    ref = findHandlerMethods(target), sub = ref[0], unsub = ref[1];\n    return withDescription(Bacon, \"fromEvent\", target, eventName, Bacon.fromBinder(function(handler) {\n      sub.call(target, eventName, handler);\n      return function() {\n        return unsub.call(target, eventName, handler);\n      };\n    }, eventTransformer));\n  };\n\n  Bacon.fromEvent = Bacon.fromEventTarget;\n\n  Bacon.Observable.prototype.map = function() {\n    var args, p;\n    p = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    return convertArgsToFunction(this, p, args, function(f) {\n      return withDescription(this, \"map\", f, this.withHandler(function(event) {\n        return this.push(event.fmap(f));\n      }));\n    });\n  };\n\n  Bacon.combineAsArray = function() {\n    var index, j, len1, s, sources, stream, streams;\n    streams = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    if (streams.length === 1 && isArray(streams[0])) {\n      streams = streams[0];\n    }\n    for (index = j = 0, len1 = streams.length; j < len1; index = ++j) {\n      stream = streams[index];\n      if (!(isObservable(stream))) {\n        streams[index] = Bacon.constant(stream);\n      }\n    }\n    if (streams.length) {\n      sources = (function() {\n        var k, len2, results;\n        results = [];\n        for (k = 0, len2 = streams.length; k < len2; k++) {\n          s = streams[k];\n          results.push(new Source(s, true));\n        }\n        return results;\n      })();\n      return withDescription.apply(null, [Bacon, \"combineAsArray\"].concat(slice.call(streams), [Bacon.when(sources, (function() {\n        var xs;\n        xs = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return xs;\n      })).toProperty()]));\n    } else {\n      return Bacon.constant([]);\n    }\n  };\n\n  Bacon.onValues = function() {\n    var f, j, streams;\n    streams = 2 <= arguments.length ? slice.call(arguments, 0, j = arguments.length - 1) : (j = 0, []), f = arguments[j++];\n    return Bacon.combineAsArray(streams).onValues(f);\n  };\n\n  Bacon.combineWith = function() {\n    var f, streams;\n    f = arguments[0], streams = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    return withDescription.apply(null, [Bacon, \"combineWith\", f].concat(slice.call(streams), [Bacon.combineAsArray(streams).map(function(values) {\n      return f.apply(null, values);\n    })]));\n  };\n\n  Bacon.combineTemplate = function(template) {\n    var applyStreamValue, combinator, compile, compileTemplate, constantValue, current, funcs, mkContext, setValue, streams;\n    funcs = [];\n    streams = [];\n    current = function(ctxStack) {\n      return ctxStack[ctxStack.length - 1];\n    };\n    setValue = function(ctxStack, key, value) {\n      return current(ctxStack)[key] = value;\n    };\n    applyStreamValue = function(key, index) {\n      return function(ctxStack, values) {\n        return setValue(ctxStack, key, values[index]);\n      };\n    };\n    constantValue = function(key, value) {\n      return function(ctxStack) {\n        return setValue(ctxStack, key, value);\n      };\n    };\n    mkContext = function(template) {\n      if (isArray(template)) {\n        return [];\n      } else {\n        return {};\n      }\n    };\n    compile = function(key, value) {\n      var popContext, pushContext;\n      if (isObservable(value)) {\n        streams.push(value);\n        return funcs.push(applyStreamValue(key, streams.length - 1));\n      } else if (value === Object(value) && typeof value !== \"function\" && !(value instanceof RegExp) && !(value instanceof Date)) {\n        pushContext = function(key) {\n          return function(ctxStack) {\n            var newContext;\n            newContext = mkContext(value);\n            setValue(ctxStack, key, newContext);\n            return ctxStack.push(newContext);\n          };\n        };\n        popContext = function(ctxStack) {\n          return ctxStack.pop();\n        };\n        funcs.push(pushContext(key));\n        compileTemplate(value);\n        return funcs.push(popContext);\n      } else {\n        return funcs.push(constantValue(key, value));\n      }\n    };\n    compileTemplate = function(template) {\n      return _.each(template, compile);\n    };\n    compileTemplate(template);\n    combinator = function(values) {\n      var ctxStack, f, j, len1, rootContext;\n      rootContext = mkContext(template);\n      ctxStack = [rootContext];\n      for (j = 0, len1 = funcs.length; j < len1; j++) {\n        f = funcs[j];\n        f(ctxStack, values);\n      }\n      return rootContext;\n    };\n    return withDescription(Bacon, \"combineTemplate\", template, Bacon.combineAsArray(streams).map(combinator));\n  };\n\n  Bacon.Observable.prototype.combine = function(other, f) {\n    var combinator;\n    combinator = toCombinator(f);\n    return withDescription(this, \"combine\", other, f, Bacon.combineAsArray(this, other).map(function(values) {\n      return combinator(values[0], values[1]);\n    }));\n  };\n\n  Bacon.Observable.prototype.decode = function(cases) {\n    return withDescription(this, \"decode\", cases, this.combine(Bacon.combineTemplate(cases), function(key, values) {\n      return values[key];\n    }));\n  };\n\n  Bacon.Observable.prototype.withStateMachine = function(initState, f) {\n    var state;\n    state = initState;\n    return withDescription(this, \"withStateMachine\", initState, f, this.withHandler(function(event) {\n      var fromF, j, len1, newState, output, outputs, reply;\n      fromF = f(state, event);\n      newState = fromF[0], outputs = fromF[1];\n      state = newState;\n      reply = Bacon.more;\n      for (j = 0, len1 = outputs.length; j < len1; j++) {\n        output = outputs[j];\n        reply = this.push(output);\n        if (reply === Bacon.noMore) {\n          return reply;\n        }\n      }\n      return reply;\n    }));\n  };\n\n  Bacon.Observable.prototype.skipDuplicates = function(isEqual) {\n    if (isEqual == null) {\n      isEqual = function(a, b) {\n        return a === b;\n      };\n    }\n    return withDescription(this, \"skipDuplicates\", this.withStateMachine(None, function(prev, event) {\n      if (!event.hasValue()) {\n        return [prev, [event]];\n      } else if (event.isInitial() || prev === None || !isEqual(prev.get(), event.value())) {\n        return [new Some(event.value()), [event]];\n      } else {\n        return [prev, []];\n      }\n    }));\n  };\n\n  Bacon.Observable.prototype.awaiting = function(other) {\n    return withDescription(this, \"awaiting\", other, Bacon.groupSimultaneous(this, other).map(function(arg) {\n      var myValues, otherValues;\n      myValues = arg[0], otherValues = arg[1];\n      return otherValues.length === 0;\n    }).toProperty(false).skipDuplicates());\n  };\n\n  Bacon.Observable.prototype.not = function() {\n    return withDescription(this, \"not\", this.map(function(x) {\n      return !x;\n    }));\n  };\n\n  Bacon.Property.prototype.and = function(other) {\n    return withDescription(this, \"and\", other, this.combine(other, function(x, y) {\n      return x && y;\n    }));\n  };\n\n  Bacon.Property.prototype.or = function(other) {\n    return withDescription(this, \"or\", other, this.combine(other, function(x, y) {\n      return x || y;\n    }));\n  };\n\n  Bacon.scheduler = {\n    setTimeout: function(f, d) {\n      return setTimeout(f, d);\n    },\n    setInterval: function(f, i) {\n      return setInterval(f, i);\n    },\n    clearInterval: function(id) {\n      return clearInterval(id);\n    },\n    clearTimeout: function(id) {\n      return clearTimeout(id);\n    },\n    now: function() {\n      return new Date().getTime();\n    }\n  };\n\n  Bacon.EventStream.prototype.bufferWithTime = function(delay) {\n    return withDescription(this, \"bufferWithTime\", delay, this.bufferWithTimeOrCount(delay, Number.MAX_VALUE));\n  };\n\n  Bacon.EventStream.prototype.bufferWithCount = function(count) {\n    return withDescription(this, \"bufferWithCount\", count, this.bufferWithTimeOrCount(void 0, count));\n  };\n\n  Bacon.EventStream.prototype.bufferWithTimeOrCount = function(delay, count) {\n    var flushOrSchedule;\n    flushOrSchedule = function(buffer) {\n      if (buffer.values.length === count) {\n        return buffer.flush();\n      } else if (delay !== void 0) {\n        return buffer.schedule();\n      }\n    };\n    return withDescription(this, \"bufferWithTimeOrCount\", delay, count, this.buffer(delay, flushOrSchedule, flushOrSchedule));\n  };\n\n  Bacon.EventStream.prototype.buffer = function(delay, onInput, onFlush) {\n    var buffer, delayMs, reply;\n    if (onInput == null) {\n      onInput = nop;\n    }\n    if (onFlush == null) {\n      onFlush = nop;\n    }\n    buffer = {\n      scheduled: null,\n      end: void 0,\n      values: [],\n      flush: function() {\n        var reply;\n        if (this.scheduled) {\n          Bacon.scheduler.clearTimeout(this.scheduled);\n          this.scheduled = null;\n        }\n        if (this.values.length > 0) {\n          reply = this.push(nextEvent(this.values));\n          this.values = [];\n          if (this.end != null) {\n            return this.push(this.end);\n          } else if (reply !== Bacon.noMore) {\n            return onFlush(this);\n          }\n        } else {\n          if (this.end != null) {\n            return this.push(this.end);\n          }\n        }\n      },\n      schedule: function() {\n        if (!this.scheduled) {\n          return this.scheduled = delay((function(_this) {\n            return function() {\n              return _this.flush();\n            };\n          })(this));\n        }\n      }\n    };\n    reply = Bacon.more;\n    if (!_.isFunction(delay)) {\n      delayMs = delay;\n      delay = function(f) {\n        return Bacon.scheduler.setTimeout(f, delayMs);\n      };\n    }\n    return withDescription(this, \"buffer\", this.withHandler(function(event) {\n      buffer.push = (function(_this) {\n        return function(event) {\n          return _this.push(event);\n        };\n      })(this);\n      if (event.isError()) {\n        reply = this.push(event);\n      } else if (event.isEnd()) {\n        buffer.end = event;\n        if (!buffer.scheduled) {\n          buffer.flush();\n        }\n      } else {\n        buffer.values.push(event.value());\n        onInput(buffer);\n      }\n      return reply;\n    }));\n  };\n\n  Bacon.Observable.prototype.filter = function() {\n    var args, f;\n    f = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    return convertArgsToFunction(this, f, args, function(f) {\n      return withDescription(this, \"filter\", f, this.withHandler(function(event) {\n        if (event.filter(f)) {\n          return this.push(event);\n        } else {\n          return Bacon.more;\n        }\n      }));\n    });\n  };\n\n  Bacon.once = function(value) {\n    return new EventStream(describe(Bacon, \"once\", value), function(sink) {\n      sink(toEvent(value));\n      sink(endEvent());\n      return nop;\n    });\n  };\n\n  Bacon.EventStream.prototype.concat = function(right) {\n    var left;\n    left = this;\n    return new EventStream(describe(left, \"concat\", right), function(sink) {\n      var unsubLeft, unsubRight;\n      unsubRight = nop;\n      unsubLeft = left.dispatcher.subscribe(function(e) {\n        if (e.isEnd()) {\n          return unsubRight = right.dispatcher.subscribe(sink);\n        } else {\n          return sink(e);\n        }\n      });\n      return function() {\n        unsubLeft();\n        return unsubRight();\n      };\n    });\n  };\n\n  Bacon.Observable.prototype.flatMap = function() {\n    return flatMap_(this, makeSpawner(arguments));\n  };\n\n  Bacon.Observable.prototype.flatMapFirst = function() {\n    return flatMap_(this, makeSpawner(arguments), true);\n  };\n\n  flatMap_ = function(root, f, firstOnly, limit) {\n    var childDeps, result, rootDep;\n    rootDep = [root];\n    childDeps = [];\n    result = new EventStream(describe(root, \"flatMap\" + (firstOnly ? \"First\" : \"\"), f), function(sink) {\n      var checkEnd, checkQueue, composite, queue, spawn;\n      composite = new CompositeUnsubscribe();\n      queue = [];\n      spawn = function(event) {\n        var child;\n        child = makeObservable(f(event.value()));\n        childDeps.push(child);\n        return composite.add(function(unsubAll, unsubMe) {\n          return child.dispatcher.subscribe(function(event) {\n            var reply;\n            if (event.isEnd()) {\n              _.remove(child, childDeps);\n              checkQueue();\n              checkEnd(unsubMe);\n              return Bacon.noMore;\n            } else {\n              if (event instanceof Initial) {\n                event = event.toNext();\n              }\n              reply = sink(event);\n              if (reply === Bacon.noMore) {\n                unsubAll();\n              }\n              return reply;\n            }\n          });\n        });\n      };\n      checkQueue = function() {\n        var event;\n        event = queue.shift();\n        if (event) {\n          return spawn(event);\n        }\n      };\n      checkEnd = function(unsub) {\n        unsub();\n        if (composite.empty()) {\n          return sink(endEvent());\n        }\n      };\n      composite.add(function(__, unsubRoot) {\n        return root.dispatcher.subscribe(function(event) {\n          if (event.isEnd()) {\n            return checkEnd(unsubRoot);\n          } else if (event.isError()) {\n            return sink(event);\n          } else if (firstOnly && composite.count() > 1) {\n            return Bacon.more;\n          } else {\n            if (composite.unsubscribed) {\n              return Bacon.noMore;\n            }\n            if (limit && composite.count() > limit) {\n              return queue.push(event);\n            } else {\n              return spawn(event);\n            }\n          }\n        });\n      });\n      return composite.unsubscribe;\n    });\n    result.internalDeps = function() {\n      if (childDeps.length) {\n        return rootDep.concat(childDeps);\n      } else {\n        return rootDep;\n      }\n    };\n    return result;\n  };\n\n  makeSpawner = function(args) {\n    if (args.length === 1 && isObservable(args[0])) {\n      return _.always(args[0]);\n    } else {\n      return makeFunctionArgs(args);\n    }\n  };\n\n  makeObservable = function(x) {\n    if (isObservable(x)) {\n      return x;\n    } else {\n      return Bacon.once(x);\n    }\n  };\n\n  Bacon.Observable.prototype.flatMapWithConcurrencyLimit = function() {\n    var args, limit;\n    limit = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    return withDescription.apply(null, [this, \"flatMapWithConcurrencyLimit\", limit].concat(slice.call(args), [flatMap_(this, makeSpawner(args), false, limit)]));\n  };\n\n  Bacon.Observable.prototype.flatMapConcat = function() {\n    return withDescription.apply(null, [this, \"flatMapConcat\"].concat(slice.call(arguments), [this.flatMapWithConcurrencyLimit.apply(this, [1].concat(slice.call(arguments)))]));\n  };\n\n  addPropertyInitValueToStream = function(property, stream) {\n    var justInitValue;\n    justInitValue = new EventStream(describe(property, \"justInitValue\"), function(sink) {\n      var unsub, value;\n      value = void 0;\n      unsub = property.dispatcher.subscribe(function(event) {\n        if (!event.isEnd()) {\n          value = event;\n        }\n        return Bacon.noMore;\n      });\n      UpdateBarrier.whenDoneWith(justInitValue, function() {\n        if (value != null) {\n          sink(value);\n        }\n        return sink(endEvent());\n      });\n      return unsub;\n    });\n    return justInitValue.concat(stream).toProperty();\n  };\n\n  Bacon.Observable.prototype.mapEnd = function() {\n    var f;\n    f = makeFunctionArgs(arguments);\n    return withDescription(this, \"mapEnd\", f, this.withHandler(function(event) {\n      if (event.isEnd()) {\n        this.push(nextEvent(f(event)));\n        this.push(endEvent());\n        return Bacon.noMore;\n      } else {\n        return this.push(event);\n      }\n    }));\n  };\n\n  Bacon.Observable.prototype.skipErrors = function() {\n    return withDescription(this, \"skipErrors\", this.withHandler(function(event) {\n      if (event.isError()) {\n        return Bacon.more;\n      } else {\n        return this.push(event);\n      }\n    }));\n  };\n\n  Bacon.EventStream.prototype.takeUntil = function(stopper) {\n    var endMarker;\n    endMarker = {};\n    return withDescription(this, \"takeUntil\", stopper, Bacon.groupSimultaneous(this.mapEnd(endMarker), stopper.skipErrors()).withHandler(function(event) {\n      var data, j, len1, ref, reply, value;\n      if (!event.hasValue()) {\n        return this.push(event);\n      } else {\n        ref = event.value(), data = ref[0], stopper = ref[1];\n        if (stopper.length) {\n          return this.push(endEvent());\n        } else {\n          reply = Bacon.more;\n          for (j = 0, len1 = data.length; j < len1; j++) {\n            value = data[j];\n            if (value === endMarker) {\n              reply = this.push(endEvent());\n            } else {\n              reply = this.push(nextEvent(value));\n            }\n          }\n          return reply;\n        }\n      }\n    }));\n  };\n\n  Bacon.Property.prototype.takeUntil = function(stopper) {\n    var changes;\n    changes = this.changes().takeUntil(stopper);\n    return withDescription(this, \"takeUntil\", stopper, addPropertyInitValueToStream(this, changes));\n  };\n\n  Bacon.Observable.prototype.flatMapLatest = function() {\n    var f, stream;\n    f = makeSpawner(arguments);\n    stream = this.toEventStream();\n    return withDescription(this, \"flatMapLatest\", f, stream.flatMap(function(value) {\n      return makeObservable(f(value)).takeUntil(stream);\n    }));\n  };\n\n  Bacon.fromPoll = function(delay, poll) {\n    return withDescription(Bacon, \"fromPoll\", delay, poll, Bacon.fromBinder((function(handler) {\n      var id;\n      id = Bacon.scheduler.setInterval(handler, delay);\n      return function() {\n        return Bacon.scheduler.clearInterval(id);\n      };\n    }), poll));\n  };\n\n  Bacon.later = function(delay, value) {\n    return withDescription(Bacon, \"later\", delay, value, Bacon.fromBinder(function(sink) {\n      var id, sender;\n      sender = function() {\n        return sink([value, endEvent()]);\n      };\n      id = Bacon.scheduler.setTimeout(sender, delay);\n      return function() {\n        return Bacon.scheduler.clearTimeout(id);\n      };\n    }));\n  };\n\n  Bacon.sequentially = function(delay, values) {\n    var index;\n    index = 0;\n    return withDescription(Bacon, \"sequentially\", delay, values, Bacon.fromPoll(delay, function() {\n      var value;\n      value = values[index++];\n      if (index < values.length) {\n        return value;\n      } else if (index === values.length) {\n        return [value, endEvent()];\n      } else {\n        return endEvent();\n      }\n    }));\n  };\n\n  Bacon.repeatedly = function(delay, values) {\n    var index;\n    index = 0;\n    return withDescription(Bacon, \"repeatedly\", delay, values, Bacon.fromPoll(delay, function() {\n      return values[index++ % values.length];\n    }));\n  };\n\n  Bacon.interval = function(delay, value) {\n    if (value == null) {\n      value = {};\n    }\n    return withDescription(Bacon, \"interval\", delay, value, Bacon.fromPoll(delay, function() {\n      return nextEvent(value);\n    }));\n  };\n\n  Bacon.EventStream.prototype.delay = function(delay) {\n    return withDescription(this, \"delay\", delay, this.flatMap(function(value) {\n      return Bacon.later(delay, value);\n    }));\n  };\n\n  Bacon.Property.prototype.delay = function(delay) {\n    return this.delayChanges(\"delay\", delay, function(changes) {\n      return changes.delay(delay);\n    });\n  };\n\n  Bacon.Property.prototype.delayChanges = function() {\n    var desc, f, j;\n    desc = 2 <= arguments.length ? slice.call(arguments, 0, j = arguments.length - 1) : (j = 0, []), f = arguments[j++];\n    return withDescription.apply(null, [this].concat(slice.call(desc), [addPropertyInitValueToStream(this, f(this.changes()))]));\n  };\n\n  Bacon.Observable.prototype.bufferingThrottle = function(minimumInterval) {\n    return withDescription(this, \"bufferingThrottle\", minimumInterval, this.flatMapConcat(function(x) {\n      return Bacon.once(x).concat(Bacon.later(minimumInterval).filter(false));\n    }));\n  };\n\n  Bacon.Property.prototype.bufferingThrottle = function() {\n    return Bacon.Observable.prototype.bufferingThrottle.apply(this, arguments).toProperty();\n  };\n\n  Bus = (function(superClass) {\n    extend(Bus, superClass);\n\n    function Bus() {\n      this.guardedSink = bind(this.guardedSink, this);\n      this.subscribeAll = bind(this.subscribeAll, this);\n      this.unsubAll = bind(this.unsubAll, this);\n      this.sink = void 0;\n      this.subscriptions = [];\n      this.ended = false;\n      Bus.__super__.constructor.call(this, describe(Bacon, \"Bus\"), this.subscribeAll);\n    }\n\n    Bus.prototype.unsubAll = function() {\n      var j, len1, ref, sub;\n      ref = this.subscriptions;\n      for (j = 0, len1 = ref.length; j < len1; j++) {\n        sub = ref[j];\n        if (typeof sub.unsub === \"function\") {\n          sub.unsub();\n        }\n      }\n      return void 0;\n    };\n\n    Bus.prototype.subscribeAll = function(newSink) {\n      var j, len1, ref, subscription;\n      this.sink = newSink;\n      ref = cloneArray(this.subscriptions);\n      for (j = 0, len1 = ref.length; j < len1; j++) {\n        subscription = ref[j];\n        this.subscribeInput(subscription);\n      }\n      return this.unsubAll;\n    };\n\n    Bus.prototype.guardedSink = function(input) {\n      return (function(_this) {\n        return function(event) {\n          if (event.isEnd()) {\n            _this.unsubscribeInput(input);\n            return Bacon.noMore;\n          } else {\n            return _this.sink(event);\n          }\n        };\n      })(this);\n    };\n\n    Bus.prototype.subscribeInput = function(subscription) {\n      return subscription.unsub = subscription.input.dispatcher.subscribe(this.guardedSink(subscription.input));\n    };\n\n    Bus.prototype.unsubscribeInput = function(input) {\n      var i, j, len1, ref, sub;\n      ref = this.subscriptions;\n      for (i = j = 0, len1 = ref.length; j < len1; i = ++j) {\n        sub = ref[i];\n        if (sub.input === input) {\n          if (typeof sub.unsub === \"function\") {\n            sub.unsub();\n          }\n          this.subscriptions.splice(i, 1);\n          return;\n        }\n      }\n    };\n\n    Bus.prototype.plug = function(input) {\n      var sub;\n      assertObservable(input);\n      if (this.ended) {\n        return;\n      }\n      sub = {\n        input: input\n      };\n      this.subscriptions.push(sub);\n      if ((this.sink != null)) {\n        this.subscribeInput(sub);\n      }\n      return (function(_this) {\n        return function() {\n          return _this.unsubscribeInput(input);\n        };\n      })(this);\n    };\n\n    Bus.prototype.end = function() {\n      this.ended = true;\n      this.unsubAll();\n      return typeof this.sink === \"function\" ? this.sink(endEvent()) : void 0;\n    };\n\n    Bus.prototype.push = function(value) {\n      return typeof this.sink === \"function\" ? this.sink(nextEvent(value)) : void 0;\n    };\n\n    Bus.prototype.error = function(error) {\n      return typeof this.sink === \"function\" ? this.sink(new Error(error)) : void 0;\n    };\n\n    return Bus;\n\n  })(EventStream);\n\n  Bacon.Bus = Bus;\n\n  liftCallback = function(desc, wrapped) {\n    return withMethodCallSupport(function() {\n      var args, f, stream;\n      f = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n      stream = partiallyApplied(wrapped, [\n        function(values, callback) {\n          return f.apply(null, slice.call(values).concat([callback]));\n        }\n      ]);\n      return withDescription.apply(null, [Bacon, desc, f].concat(slice.call(args), [Bacon.combineAsArray(args).flatMap(stream)]));\n    });\n  };\n\n  Bacon.fromCallback = liftCallback(\"fromCallback\", function() {\n    var args, f;\n    f = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    return Bacon.fromBinder(function(handler) {\n      makeFunction(f, args)(handler);\n      return nop;\n    }, (function(value) {\n      return [value, endEvent()];\n    }));\n  });\n\n  Bacon.fromNodeCallback = liftCallback(\"fromNodeCallback\", function() {\n    var args, f;\n    f = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    return Bacon.fromBinder(function(handler) {\n      makeFunction(f, args)(handler);\n      return nop;\n    }, function(error, value) {\n      if (error) {\n        return [new Error(error), endEvent()];\n      }\n      return [value, endEvent()];\n    });\n  });\n\n  Bacon.EventStream.prototype.debounce = function(delay) {\n    return withDescription(this, \"debounce\", delay, this.flatMapLatest(function(value) {\n      return Bacon.later(delay, value);\n    }));\n  };\n\n  Bacon.Property.prototype.debounce = function(delay) {\n    return this.delayChanges(\"debounce\", delay, function(changes) {\n      return changes.debounce(delay);\n    });\n  };\n\n  Bacon.EventStream.prototype.debounceImmediate = function(delay) {\n    return withDescription(this, \"debounceImmediate\", delay, this.flatMapFirst(function(value) {\n      return Bacon.once(value).concat(Bacon.later(delay).filter(false));\n    }));\n  };\n\n  Bacon.Observable.prototype.scan = function(seed, f) {\n    var acc, resultProperty, subscribe;\n    f = toCombinator(f);\n    acc = toOption(seed);\n    subscribe = (function(_this) {\n      return function(sink) {\n        var initSent, reply, sendInit, unsub;\n        initSent = false;\n        unsub = nop;\n        reply = Bacon.more;\n        sendInit = function() {\n          if (!initSent) {\n            return acc.forEach(function(value) {\n              initSent = true;\n              reply = sink(new Initial(function() {\n                return value;\n              }));\n              if (reply === Bacon.noMore) {\n                unsub();\n                return unsub = nop;\n              }\n            });\n          }\n        };\n        unsub = _this.dispatcher.subscribe(function(event) {\n          var next, prev;\n          if (event.hasValue()) {\n            if (initSent && event.isInitial()) {\n              return Bacon.more;\n            } else {\n              if (!event.isInitial()) {\n                sendInit();\n              }\n              initSent = true;\n              prev = acc.getOrElse(void 0);\n              next = f(prev, event.value());\n              acc = new Some(next);\n              return sink(event.apply(function() {\n                return next;\n              }));\n            }\n          } else {\n            if (event.isEnd()) {\n              reply = sendInit();\n            }\n            if (reply !== Bacon.noMore) {\n              return sink(event);\n            }\n          }\n        });\n        UpdateBarrier.whenDoneWith(resultProperty, sendInit);\n        return unsub;\n      };\n    })(this);\n    return resultProperty = new Property(describe(this, \"scan\", seed, f), subscribe);\n  };\n\n  Bacon.Observable.prototype.diff = function(start, f) {\n    f = toCombinator(f);\n    return withDescription(this, \"diff\", start, f, this.scan([start], function(prevTuple, next) {\n      return [next, f(prevTuple[0], next)];\n    }).filter(function(tuple) {\n      return tuple.length === 2;\n    }).map(function(tuple) {\n      return tuple[1];\n    }));\n  };\n\n  Bacon.Observable.prototype.doAction = function() {\n    var f;\n    f = makeFunctionArgs(arguments);\n    return withDescription(this, \"doAction\", f, this.withHandler(function(event) {\n      if (event.hasValue()) {\n        f(event.value());\n      }\n      return this.push(event);\n    }));\n  };\n\n  Bacon.Observable.prototype.endOnError = function() {\n    var args, f;\n    f = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (f == null) {\n      f = true;\n    }\n    return convertArgsToFunction(this, f, args, function(f) {\n      return withDescription(this, \"endOnError\", this.withHandler(function(event) {\n        if (event.isError() && f(event.error)) {\n          this.push(event);\n          return this.push(endEvent());\n        } else {\n          return this.push(event);\n        }\n      }));\n    });\n  };\n\n  Observable.prototype.errors = function() {\n    return withDescription(this, \"errors\", this.filter(function() {\n      return false;\n    }));\n  };\n\n  valueAndEnd = (function(value) {\n    return [value, endEvent()];\n  });\n\n  Bacon.fromPromise = function(promise, abort) {\n    return withDescription(Bacon, \"fromPromise\", promise, Bacon.fromBinder(function(handler) {\n      var ref;\n      if ((ref = promise.then(handler, function(e) {\n        return handler(new Error(e));\n      })) != null) {\n        if (typeof ref.done === \"function\") {\n          ref.done();\n        }\n      }\n      return function() {\n        if (abort) {\n          return typeof promise.abort === \"function\" ? promise.abort() : void 0;\n        }\n      };\n    }, valueAndEnd));\n  };\n\n  Bacon.Observable.prototype.mapError = function() {\n    var f;\n    f = makeFunctionArgs(arguments);\n    return withDescription(this, \"mapError\", f, this.withHandler(function(event) {\n      if (event.isError()) {\n        return this.push(nextEvent(f(event.error)));\n      } else {\n        return this.push(event);\n      }\n    }));\n  };\n\n  Bacon.Observable.prototype.flatMapError = function(fn) {\n    return withDescription(this, \"flatMapError\", fn, this.mapError(function(err) {\n      return new Error(err);\n    }).flatMap(function(x) {\n      if (x instanceof Error) {\n        return fn(x.error);\n      } else {\n        return Bacon.once(x);\n      }\n    }));\n  };\n\n  Bacon.EventStream.prototype.sampledBy = function(sampler, combinator) {\n    return withDescription(this, \"sampledBy\", sampler, combinator, this.toProperty().sampledBy(sampler, combinator));\n  };\n\n  Bacon.Property.prototype.sampledBy = function(sampler, combinator) {\n    var lazy, result, samplerSource, stream, thisSource;\n    if (combinator != null) {\n      combinator = toCombinator(combinator);\n    } else {\n      lazy = true;\n      combinator = function(f) {\n        return f.value();\n      };\n    }\n    thisSource = new Source(this, false, lazy);\n    samplerSource = new Source(sampler, true, lazy);\n    stream = Bacon.when([thisSource, samplerSource], combinator);\n    result = sampler instanceof Property ? stream.toProperty() : stream;\n    return withDescription(this, \"sampledBy\", sampler, combinator, result);\n  };\n\n  Bacon.Property.prototype.sample = function(interval) {\n    return withDescription(this, \"sample\", interval, this.sampledBy(Bacon.interval(interval, {})));\n  };\n\n  Bacon.Observable.prototype.map = function() {\n    var args, p;\n    p = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (p instanceof Property) {\n      return p.sampledBy(this, former);\n    } else {\n      return convertArgsToFunction(this, p, args, function(f) {\n        return withDescription(this, \"map\", f, this.withHandler(function(event) {\n          return this.push(event.fmap(f));\n        }));\n      });\n    }\n  };\n\n  Bacon.Observable.prototype.fold = function(seed, f) {\n    return withDescription(this, \"fold\", seed, f, this.scan(seed, f).sampledBy(this.filter(false).mapEnd().toProperty()));\n  };\n\n  Observable.prototype.reduce = Observable.prototype.fold;\n\n  Bacon.EventStream.prototype.merge = function(right) {\n    var left;\n    assertEventStream(right);\n    left = this;\n    return withDescription(left, \"merge\", right, Bacon.mergeAll(this, right));\n  };\n\n  Bacon.mergeAll = function() {\n    var streams;\n    streams = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    if (isArray(streams[0])) {\n      streams = streams[0];\n    }\n    if (streams.length) {\n      return new EventStream(describe.apply(null, [Bacon, \"mergeAll\"].concat(slice.call(streams))), function(sink) {\n        var ends, sinks, smartSink;\n        ends = 0;\n        smartSink = function(obs) {\n          return function(unsubBoth) {\n            return obs.dispatcher.subscribe(function(event) {\n              var reply;\n              if (event.isEnd()) {\n                ends++;\n                if (ends === streams.length) {\n                  return sink(endEvent());\n                } else {\n                  return Bacon.more;\n                }\n              } else {\n                reply = sink(event);\n                if (reply === Bacon.noMore) {\n                  unsubBoth();\n                }\n                return reply;\n              }\n            });\n          };\n        };\n        sinks = _.map(smartSink, streams);\n        return new Bacon.CompositeUnsubscribe(sinks).unsubscribe;\n      });\n    } else {\n      return Bacon.never();\n    }\n  };\n\n  Bacon.Observable.prototype.take = function(count) {\n    if (count <= 0) {\n      return Bacon.never();\n    }\n    return withDescription(this, \"take\", count, this.withHandler(function(event) {\n      if (!event.hasValue()) {\n        return this.push(event);\n      } else {\n        count--;\n        if (count > 0) {\n          return this.push(event);\n        } else {\n          if (count === 0) {\n            this.push(event);\n          }\n          this.push(endEvent());\n          return Bacon.noMore;\n        }\n      }\n    }));\n  };\n\n  Bacon.fromArray = function(values) {\n    var i;\n    assertArray(values);\n    if (!values.length) {\n      return withDescription(Bacon, \"fromArray\", values, Bacon.never());\n    } else {\n      i = 0;\n      return new EventStream(describe(Bacon, \"fromArray\", values), function(sink) {\n        var push, reply, unsubd;\n        unsubd = false;\n        reply = Bacon.more;\n        push = function() {\n          var value;\n          if ((reply !== Bacon.noMore) && !unsubd) {\n            value = values[i++];\n            reply = sink(toEvent(value));\n            if (reply !== Bacon.noMore) {\n              if (i === values.length) {\n                return sink(endEvent());\n              } else {\n                return UpdateBarrier.afterTransaction(push);\n              }\n            }\n          }\n        };\n        push();\n        return function() {\n          return unsubd = true;\n        };\n      });\n    }\n  };\n\n  Bacon.EventStream.prototype.holdWhen = function(valve) {\n    var putToHold, releaseHold, valve_;\n    valve_ = valve.startWith(false);\n    releaseHold = valve_.filter(function(x) {\n      return !x;\n    });\n    putToHold = valve_.filter(_.id);\n    return withDescription(this, \"holdWhen\", valve, this.filter(false).merge(valve_.flatMapConcat((function(_this) {\n      return function(shouldHold) {\n        if (!shouldHold) {\n          return _this.takeUntil(putToHold);\n        } else {\n          return _this.scan([], (function(xs, x) {\n            return xs.concat([x]);\n          })).sampledBy(releaseHold).take(1).flatMap(Bacon.fromArray);\n        }\n      };\n    })(this))));\n  };\n\n  Bacon.$ = {};\n\n  Bacon.$.asEventStream = function(eventName, selector, eventTransformer) {\n    var ref;\n    if (_.isFunction(selector)) {\n      ref = [selector, void 0], eventTransformer = ref[0], selector = ref[1];\n    }\n    return withDescription(this.selector || this, \"asEventStream\", eventName, Bacon.fromBinder((function(_this) {\n      return function(handler) {\n        _this.on(eventName, selector, handler);\n        return function() {\n          return _this.off(eventName, selector, handler);\n        };\n      };\n    })(this), eventTransformer));\n  };\n\n  if ((ref = typeof jQuery !== \"undefined\" && jQuery !== null ? jQuery : typeof Zepto !== \"undefined\" && Zepto !== null ? Zepto : void 0) != null) {\n    ref.fn.asEventStream = Bacon.$.asEventStream;\n  }\n\n  Bacon.Observable.prototype.log = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    this.subscribe(function(event) {\n      return typeof console !== \"undefined\" && console !== null ? typeof console.log === \"function\" ? console.log.apply(console, slice.call(args).concat([event.log()])) : void 0 : void 0;\n    });\n    return this;\n  };\n\n  Bacon.repeat = function(generator) {\n    var index;\n    index = 0;\n    return Bacon.fromBinder(function(sink) {\n      var flag, handleEvent, reply, subscribeNext, unsub;\n      flag = false;\n      reply = Bacon.more;\n      unsub = function() {};\n      handleEvent = function(event) {\n        if (event.isEnd()) {\n          if (!flag) {\n            return flag = true;\n          } else {\n            return subscribeNext();\n          }\n        } else {\n          return reply = sink(event);\n        }\n      };\n      subscribeNext = function() {\n        var next;\n        flag = true;\n        while (flag && reply !== Bacon.noMore) {\n          next = generator(index++);\n          flag = false;\n          if (next) {\n            unsub = next.subscribeInternal(handleEvent);\n          } else {\n            sink(endEvent());\n          }\n        }\n        return flag = true;\n      };\n      subscribeNext();\n      return function() {\n        return unsub();\n      };\n    });\n  };\n\n  Bacon.retry = function(options) {\n    var delay, error, finished, isRetryable, maxRetries, retries, source;\n    if (!_.isFunction(options.source)) {\n      throw new Exception(\"'source' option has to be a function\");\n    }\n    source = options.source;\n    retries = options.retries || 0;\n    maxRetries = options.maxRetries || retries;\n    delay = options.delay || function() {\n      return 0;\n    };\n    isRetryable = options.isRetryable || function() {\n      return true;\n    };\n    finished = false;\n    error = null;\n    return withDescription(Bacon, \"retry\", options, Bacon.repeat(function() {\n      var context, pause, valueStream;\n      if (finished) {\n        return null;\n      } else {\n        valueStream = function() {\n          return source().endOnError().withHandler(function(event) {\n            if (event.isError()) {\n              error = event;\n              if (isRetryable(error.error) && retries > 0) {\n\n              } else {\n                finished = true;\n                return this.push(event);\n              }\n            } else {\n              if (event.hasValue()) {\n                error = null;\n                finished = true;\n              }\n              return this.push(event);\n            }\n          });\n        };\n        if (error) {\n          context = {\n            error: error.error,\n            retriesDone: maxRetries - retries\n          };\n          pause = Bacon.later(delay(context)).filter(false);\n          retries = retries - 1;\n          return pause.concat(Bacon.once().flatMap(valueStream));\n        } else {\n          return valueStream();\n        }\n      }\n    }));\n  };\n\n  Bacon.Observable.prototype.skip = function(count) {\n    return withDescription(this, \"skip\", count, this.withHandler(function(event) {\n      if (!event.hasValue()) {\n        return this.push(event);\n      } else if (count > 0) {\n        count--;\n        return Bacon.more;\n      } else {\n        return this.push(event);\n      }\n    }));\n  };\n\n  Bacon.EventStream.prototype.skipUntil = function(starter) {\n    var started;\n    started = starter.take(1).map(true).toProperty(false);\n    return withDescription(this, \"skipUntil\", starter, this.filter(started));\n  };\n\n  Bacon.EventStream.prototype.skipWhile = function() {\n    var args, f, ok;\n    f = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    ok = false;\n    return convertArgsToFunction(this, f, args, function(f) {\n      return withDescription(this, \"skipWhile\", f, this.withHandler(function(event) {\n        if (ok || !event.hasValue() || !f(event.value())) {\n          if (event.hasValue()) {\n            ok = true;\n          }\n          return this.push(event);\n        } else {\n          return Bacon.more;\n        }\n      }));\n    });\n  };\n\n  Bacon.Observable.prototype.slidingWindow = function(n, minValues) {\n    if (minValues == null) {\n      minValues = 0;\n    }\n    return withDescription(this, \"slidingWindow\", n, minValues, this.scan([], (function(window, value) {\n      return window.concat([value]).slice(-n);\n    })).filter((function(values) {\n      return values.length >= minValues;\n    })));\n  };\n\n  Bacon.spy = function(spy) {\n    return spys.push(spy);\n  };\n\n  spys = [];\n\n  registerObs = function(obs) {\n    var j, len1, spy;\n    if (spys.length) {\n      if (!registerObs.running) {\n        try {\n          registerObs.running = true;\n          for (j = 0, len1 = spys.length; j < len1; j++) {\n            spy = spys[j];\n            spy(obs);\n          }\n        } finally {\n          delete registerObs.running;\n        }\n      }\n    }\n    return void 0;\n  };\n\n  Bacon.Property.prototype.startWith = function(seed) {\n    return withDescription(this, \"startWith\", seed, this.scan(seed, function(prev, next) {\n      return next;\n    }));\n  };\n\n  Bacon.EventStream.prototype.startWith = function(seed) {\n    return withDescription(this, \"startWith\", seed, Bacon.once(seed).concat(this));\n  };\n\n  Bacon.Observable.prototype.takeWhile = function() {\n    var args, f;\n    f = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    return convertArgsToFunction(this, f, args, function(f) {\n      return withDescription(this, \"takeWhile\", f, this.withHandler(function(event) {\n        if (event.filter(f)) {\n          return this.push(event);\n        } else {\n          this.push(endEvent());\n          return Bacon.noMore;\n        }\n      }));\n    });\n  };\n\n  Bacon.update = function() {\n    var i, initial, lateBindFirst, patterns;\n    initial = arguments[0], patterns = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    lateBindFirst = function(f) {\n      return function() {\n        var args;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return function(i) {\n          return f.apply(null, [i].concat(args));\n        };\n      };\n    };\n    i = patterns.length - 1;\n    while (i > 0) {\n      if (!(patterns[i] instanceof Function)) {\n        patterns[i] = (function(x) {\n          return function() {\n            return x;\n          };\n        })(patterns[i]);\n      }\n      patterns[i] = lateBindFirst(patterns[i]);\n      i = i - 2;\n    }\n    return withDescription.apply(null, [Bacon, \"update\", initial].concat(slice.call(patterns), [Bacon.when.apply(Bacon, patterns).scan(initial, (function(x, f) {\n      return f(x);\n    }))]));\n  };\n\n  Bacon.zipAsArray = function() {\n    var streams;\n    streams = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    if (isArray(streams[0])) {\n      streams = streams[0];\n    }\n    return withDescription.apply(null, [Bacon, \"zipAsArray\"].concat(slice.call(streams), [Bacon.zipWith(streams, function() {\n      var xs;\n      xs = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return xs;\n    })]));\n  };\n\n  Bacon.zipWith = function() {\n    var f, ref1, streams;\n    f = arguments[0], streams = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (!_.isFunction(f)) {\n      ref1 = [f, streams[0]], streams = ref1[0], f = ref1[1];\n    }\n    streams = _.map((function(s) {\n      return s.toEventStream();\n    }), streams);\n    return withDescription.apply(null, [Bacon, \"zipWith\", f].concat(slice.call(streams), [Bacon.when(streams, f)]));\n  };\n\n  Bacon.Observable.prototype.zip = function(other, f) {\n    if (f == null) {\n      f = Array;\n    }\n    return withDescription(this, \"zip\", other, Bacon.zipWith([this, other], f));\n  };\n\n  \n\nBacon.Observable.prototype.first = function () {\n  return withDescription(this, \"first\", this.take(1));\n};\n\nBacon.Observable.prototype.last = function () {\n  var lastEvent;\n\n  return withDescription(this, \"last\", this.withHandler(function (event) {\n    if (event.isEnd()) {\n      if (lastEvent) {\n        this.push(lastEvent);\n      }\n      this.push(endEvent());\n      return Bacon.noMore;\n    } else {\n      lastEvent = event;\n    }\n  }));\n};\n\nBacon.EventStream.prototype.throttle = function (delay) {\n  return withDescription(this, \"throttle\", delay, this.bufferWithTime(delay).map(function (values) {\n    return values[values.length - 1];\n  }));\n};\n\nBacon.Property.prototype.throttle = function (delay) {\n  return this.delayChanges(\"throttle\", delay, function (changes) {\n    return changes.throttle(delay);\n  });\n};\n\nObservable.prototype.firstToPromise = function (PromiseCtr) {\n  var _this = this;\n\n  if (typeof PromiseCtr !== \"function\") {\n    if (typeof Promise === \"function\") {\n      PromiseCtr = Promise;\n    } else {\n      throw new Exception(\"There isn't default Promise, use shim or parameter\");\n    }\n  }\n\n  return new PromiseCtr(function (resolve, reject) {\n    return _this.subscribe(function (event) {\n      if (event.hasValue()) {\n        resolve(event.value());\n      }\n      if (event.isError()) {\n        reject(event.error);\n      }\n\n      return Bacon.noMore;\n    });\n  });\n};\n\nObservable.prototype.toPromise = function (PromiseCtr) {\n  return this.last().firstToPromise(PromiseCtr);\n};\n\nif ((typeof define !== \"undefined\" && define !== null) && (define.amd != null)) {\n    define([], function() {\n      return Bacon;\n    });\n    this.Bacon = Bacon;\n  } else if ((typeof module !== \"undefined\" && module !== null) && (module.exports != null)) {\n    module.exports = Bacon;\n    Bacon.Bacon = Bacon;\n  } else {\n    this.Bacon = Bacon;\n  }\n\n}).call(this);\n","/**\n * Baobab Default Options\n * =======================\n *\n */\nmodule.exports = {\n\n  // Should the tree handle its transactions on its own?\n  autoCommit: true,\n\n  // Should the transactions be handled asynchronously?\n  asynchronous: true,\n\n  // Facets registration\n  facets: {},\n\n  // Validation specifications\n  validate: null,\n\n  // Validation behaviour 'rollback' or 'notify'\n  validationBehavior: 'rollback'\n};\n","/**\n * Baobab Public Interface\n * ========================\n *\n * Exposes the main library classes.\n */\nvar Baobab = require('./src/baobab.js'),\n    helpers = require('./src/helpers.js');\n\n// Non-writable version\nObject.defineProperty(Baobab, 'version', {\n  value: '1.0.2'\n});\n\n// Exposing helpers\nBaobab.getIn = helpers.getIn;\n\n// Exporting\nmodule.exports = Baobab;\n","(function() {\n  'use strict';\n\n  /**\n   * Here is the list of every allowed parameter when using Emitter#on:\n   * @type {Object}\n   */\n  var __allowedOptions = {\n    once: 'boolean',\n    scope: 'object'\n  };\n\n  /**\n   * Incremental id used to order event handlers.\n   */\n  var __order = 0;\n\n  /**\n   * A simple helper to shallowly merge two objects. The second one will \"win\"\n   * over the first one.\n   *\n   * @param  {object}  o1 First target object.\n   * @param  {object}  o2 Second target object.\n   * @return {object}     Returns the merged object.\n   */\n  function shallowMerge(o1, o2) {\n    var o = {},\n        k;\n\n    for (k in o1) o[k] = o1[k];\n    for (k in o2) o[k] = o2[k];\n\n    return o;\n  }\n\n  /**\n   * Is the given variable a plain JavaScript object?\n   *\n   * @param  {mixed}  v   Target.\n   * @return {boolean}    The boolean result.\n   */\n  function isPlainObject(v) {\n    return v &&\n           typeof v === 'object' &&\n           !Array.isArray(v) &&\n           !(v instanceof Function) &&\n           !(v instanceof RegExp);\n  }\n\n  /**\n   * The emitter's constructor. It initializes the handlers-per-events store and\n   * the global handlers store.\n   *\n   * Emitters are useful for non-DOM events communication. Read its methods\n   * documentation for more information about how it works.\n   *\n   * @return {Emitter}         The fresh new instance.\n   */\n  var Emitter = function() {\n    this._enabled = true;\n\n    // Dirty trick that will set the necessary properties to the emitter\n    this.unbindAll();\n  };\n\n  /**\n   * This method unbinds every handlers attached to every or any events. So,\n   * these functions will no more be executed when the related events are\n   * emitted. If the functions were not bound to the events, nothing will\n   * happen, and no error will be thrown.\n   *\n   * Usage:\n   * ******\n   * > myEmitter.unbindAll();\n   *\n   * @return {Emitter}      Returns this.\n   */\n  Emitter.prototype.unbindAll = function() {\n\n    this._handlers = {};\n    this._handlersAll = [];\n    this._handlersComplex = [];\n\n    return this;\n  };\n\n\n  /**\n   * This method binds one or more functions to the emitter, handled to one or a\n   * suite of events. So, these functions will be executed anytime one related\n   * event is emitted.\n   *\n   * It is also possible to bind a function to any emitted event by not\n   * specifying any event to bind the function to.\n   *\n   * Recognized options:\n   * *******************\n   *  - {?boolean} once   If true, the handlers will be unbound after the first\n   *                      execution. Default value: false.\n   *  - {?object}  scope  If a scope is given, then the listeners will be called\n   *                      with this scope as \"this\".\n   *\n   * Variant 1:\n   * **********\n   * > myEmitter.on('myEvent', function(e) { console.log(e); });\n   * > // Or:\n   * > myEmitter.on('myEvent', function(e) { console.log(e); }, { once: true });\n   *\n   * @param  {string}   event   The event to listen to.\n   * @param  {function} handler The function to bind.\n   * @param  {?object}  options Eventually some options.\n   * @return {Emitter}          Returns this.\n   *\n   * Variant 2:\n   * **********\n   * > myEmitter.on(\n   * >   ['myEvent1', 'myEvent2'],\n   * >   function(e) { console.log(e); }\n   * >);\n   * > // Or:\n   * > myEmitter.on(\n   * >   ['myEvent1', 'myEvent2'],\n   * >   function(e) { console.log(e); }\n   * >   { once: true }}\n   * >);\n   *\n   * @param  {array}    events  The events to listen to.\n   * @param  {function} handler The function to bind.\n   * @param  {?object}  options Eventually some options.\n   * @return {Emitter}          Returns this.\n   *\n   * Variant 3:\n   * **********\n   * > myEmitter.on({\n   * >   myEvent1: function(e) { console.log(e); },\n   * >   myEvent2: function(e) { console.log(e); }\n   * > });\n   * > // Or:\n   * > myEmitter.on({\n   * >   myEvent1: function(e) { console.log(e); },\n   * >   myEvent2: function(e) { console.log(e); }\n   * > }, { once: true });\n   *\n   * @param  {object}  bindings An object containing pairs event / function.\n   * @param  {?object}  options Eventually some options.\n   * @return {Emitter}          Returns this.\n   *\n   * Variant 4:\n   * **********\n   * > myEmitter.on(function(e) { console.log(e); });\n   * > // Or:\n   * > myEmitter.on(function(e) { console.log(e); }, { once: true});\n   *\n   * @param  {function} handler The function to bind to every events.\n   * @param  {?object}  options Eventually some options.\n   * @return {Emitter}          Returns this.\n   */\n  Emitter.prototype.on = function(a, b, c) {\n    var i,\n        l,\n        k,\n        event,\n        eArray,\n        handlersList,\n        bindingObject;\n\n    // Variant 3\n    if (isPlainObject(a)) {\n      for (event in a)\n        this.on(event, a[event], b);\n      return this;\n    }\n\n    // Variant 1, 2 and 4\n    if (typeof a === 'function') {\n      c = b;\n      b = a;\n      a = null;\n    }\n\n    eArray = [].concat(a);\n\n    for (i = 0, l = eArray.length; i < l; i++) {\n      event = eArray[i];\n\n      bindingObject = {\n        order: __order++,\n        fn: b\n      };\n\n      // Defining the list in which the handler should be inserted\n      if (typeof event === 'string') {\n        if (!this._handlers[event])\n          this._handlers[event] = [];\n        handlersList = this._handlers[event];\n      }\n      else if (event instanceof RegExp) {\n        handlersList = this._handlersComplex;\n        bindingObject.pattern = event;\n      }\n      else if (event === null) {\n        handlersList = this._handlersAll;\n      }\n      else {\n        throw Error('Emitter.on: invalid event.');\n      }\n\n      // Appending needed properties\n      for (k in c || {})\n        if (__allowedOptions[k])\n          bindingObject[k] = c[k];\n\n      if (bindingObject.once)\n        bindingObject.parent = handlersList;\n\n      handlersList.push(bindingObject);\n    }\n\n    return this;\n  };\n\n\n  /**\n   * This method works exactly as the previous #on, but will add an options\n   * object if none is given, and set the option \"once\" to true.\n   *\n   * The polymorphism works exactly as with the #on method.\n   */\n  Emitter.prototype.once = function() {\n    var args = Array.prototype.slice.call(arguments),\n        li = args.length - 1;\n\n    if (isPlainObject(args[li]) && args.length > 1)\n      args[li] = shallowMerge(args[li], {once: true});\n    else\n      args.push({once: true});\n\n    return this.on.apply(this, args);\n  };\n\n\n  /**\n   * This method unbinds one or more functions from events of the emitter. So,\n   * these functions will no more be executed when the related events are\n   * emitted. If the functions were not bound to the events, nothing will\n   * happen, and no error will be thrown.\n   *\n   * Variant 1:\n   * **********\n   * > myEmitter.off('myEvent', myHandler);\n   *\n   * @param  {string}   event   The event to unbind the handler from.\n   * @param  {function} handler The function to unbind.\n   * @return {Emitter}          Returns this.\n   *\n   * Variant 2:\n   * **********\n   * > myEmitter.off(['myEvent1', 'myEvent2'], myHandler);\n   *\n   * @param  {array}    events  The events to unbind the handler from.\n   * @param  {function} handler The function to unbind.\n   * @return {Emitter}          Returns this.\n   *\n   * Variant 3:\n   * **********\n   * > myEmitter.off({\n   * >   myEvent1: myHandler1,\n   * >   myEvent2: myHandler2\n   * > });\n   *\n   * @param  {object} bindings An object containing pairs event / function.\n   * @return {Emitter}         Returns this.\n   *\n   * Variant 4:\n   * **********\n   * > myEmitter.off(myHandler);\n   *\n   * @param  {function} handler The function to unbind from every events.\n   * @return {Emitter}          Returns this.\n   *\n   * Variant 5:\n   * **********\n   * > myEmitter.off(event);\n   *\n   * @param  {string} event     The event we should unbind.\n   * @return {Emitter}          Returns this.\n   */\n  function filter(target, fn) {\n    target = target || [];\n\n    var a = [],\n        l,\n        i;\n\n    for (i = 0, l = target.length; i < l; i++)\n      if (target[i].fn !== fn)\n        a.push(target[i]);\n\n    return a;\n  }\n\n  Emitter.prototype.off = function(events, fn) {\n    var i,\n        n,\n        j,\n        m,\n        k,\n        a,\n        event;\n\n    // Variant 4:\n    if (arguments.length === 1 && typeof events === 'function') {\n      fn = arguments[0];\n\n      // Handlers bound to events:\n      for (k in this._handlers) {\n        this._handlers[k] = filter(this._handlers[k], fn);\n\n        if (this._handlers[k].length === 0)\n          delete this._handlers[k];\n      }\n\n      // Generic Handlers\n      this._handlersAll = filter(this._handlersAll, fn);\n\n      // Complex handlers\n      this._handlersComplex = filter(this._handlersComplex, fn);\n    }\n\n    // Variant 5\n    else if (arguments.length === 1 && typeof events === 'string') {\n      delete this._handlers[events];\n    }\n\n    // Variant 1 and 2:\n    else if (arguments.length === 2) {\n      var eArray = [].concat(events);\n\n      for (i = 0, n = eArray.length; i < n; i++) {\n        event = eArray[i];\n\n        this._handlers[event] = filter(this._handlers[event], fn);\n\n        if ((this._handlers[event] || []).length === 0)\n          delete this._handlers[event];\n      }\n    }\n\n    // Variant 3\n    else if (isPlainObject(events)) {\n      for (k in events)\n        this.off(k, events[k]);\n    }\n\n    return this;\n  };\n\n  /**\n   * This method retrieve the listeners attached to a particular event.\n   *\n   * @param  {?string}    Name of the event.\n   * @return {array}      Array of handler functions.\n   */\n  Emitter.prototype.listeners = function(event) {\n    var handlers = this._handlersAll || [],\n        complex = false,\n        h,\n        i,\n        l;\n\n    if (!event)\n      throw Error('Emitter.listeners: no event provided.');\n\n    handlers = handlers.concat(this._handlers[event] || []);\n\n    for (i = 0, l = this._handlersComplex.length; i < l; i++) {\n      h = this._handlersComplex[i];\n\n      if (~event.search(h.pattern)) {\n        complex = true;\n        handlers.push(h);\n      }\n    }\n\n    // If we have any complex handlers, we need to sort\n    if (this._handlersAll.length || complex)\n      return handlers.sort(function(a, b) {\n        return a.order - b.order;\n      });\n    else\n      return handlers.slice(0);\n  };\n\n  /**\n   * This method emits the specified event(s), and executes every handlers bound\n   * to the event(s).\n   *\n   * Use cases:\n   * **********\n   * > myEmitter.emit('myEvent');\n   * > myEmitter.emit('myEvent', myData);\n   * > myEmitter.emit(['myEvent1', 'myEvent2']);\n   * > myEmitter.emit(['myEvent1', 'myEvent2'], myData);\n   * > myEmitter.emit({myEvent1: myData1, myEvent2: myData2});\n   *\n   * @param  {string|array} events The event(s) to emit.\n   * @param  {object?}      data   The data.\n   * @return {Emitter}             Returns this.\n   */\n  Emitter.prototype.emit = function(events, data) {\n\n    // Short exit if the emitter is disabled\n    if (!this._enabled)\n      return this;\n\n    // Object variant\n    if (isPlainObject(events)) {\n\n      for (var k in events)\n        this.emit(k, events[k]);\n\n      return this;\n    }\n\n    var eArray = [].concat(events),\n        onces = [],\n        event,\n        handlers,\n        handler,\n        i,\n        j,\n        l,\n        m;\n\n    for (i = 0, l = eArray.length; i < l; i++) {\n      handlers = this.listeners(eArray[i]);\n\n      for (j = 0, m = handlers.length; j < m; j++) {\n        handler = handlers[j];\n        event = {\n          type: eArray[i],\n          target: this\n        };\n\n        if (arguments.length > 1)\n          event.data = data;\n\n        handler.fn.call('scope' in handler ? handler.scope : this, event);\n\n        if (handler.once)\n          onces.push(handler);\n      }\n\n      // Cleaning onces\n      for (j = onces.length - 1; j >= 0; j--)\n        onces[j].parent.splice(onces[j].parent.indexOf(onces[j]), 1);\n    }\n\n    return this;\n  };\n\n\n  /**\n   * This method will unbind all listeners and make it impossible to ever\n   * rebind any listener to any event.\n   */\n  Emitter.prototype.kill = function() {\n\n    this.unbindAll();\n    this._handlers = null;\n    this._handlersAll = null;\n    this._handlersComplex = null;\n    this._enabled = false;\n  };\n\n\n  /**\n   * This method disabled the emitter, which means its emit method will do\n   * nothing.\n   *\n   * @return {Emitter} Returns this.\n   */\n  Emitter.prototype.disable = function() {\n    this._enabled = false;\n\n    return this;\n  };\n\n\n  /**\n   * This method enables the emitter.\n   *\n   * @return {Emitter} Returns this.\n   */\n  Emitter.prototype.enable = function() {\n    this._enabled = true;\n\n    return this;\n  };\n\n\n  /**\n   * Version:\n   */\n  Emitter.version = '3.0.0';\n\n\n  // Export:\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports)\n      exports = module.exports = Emitter;\n    exports.Emitter = Emitter;\n  } else if (typeof define === 'function' && define.amd)\n    define('emmett', [], function() {\n      return Emitter;\n    });\n  else\n    this.Emitter = Emitter;\n}).call(this);\n","/**\n * Baobab Data Structure\n * ======================\n *\n * A handy data tree with cursors.\n */\nvar Cursor = require('./cursor.js'),\n    EventEmitter = require('emmett'),\n    Facet = require('./facet.js'),\n    helpers = require('./helpers.js'),\n    update = require('./update.js'),\n    merge = require('./merge.js'),\n    defaults = require('../defaults.js'),\n    type = require('./type.js');\n\nfunction complexHash(type) {\n  return type + '$' +\n    (new Date()).getTime() + (''  + Math.random()).replace('0.', '');\n}\n\n/**\n * Main Class\n */\nfunction Baobab(initialData, opts) {\n  if (arguments.length < 1)\n    initialData = {};\n\n  // New keyword optional\n  if (!(this instanceof Baobab))\n    return new Baobab(initialData, opts);\n\n  if (!type.Object(initialData) && !type.Array(initialData))\n    throw Error('Baobab: invalid data.');\n\n  // Extending\n  EventEmitter.call(this);\n\n  // Merging defaults\n  this.options = helpers.shallowMerge(defaults, opts);\n\n  // Privates\n  this._transaction = {};\n  this._future = undefined;\n  this._cursors = {};\n  this._identity = '[object Baobab]';\n\n  // Properties\n  this.data = helpers.deepClone(initialData);\n  this.root = this.select([]);\n  this.facets = {};\n\n  // Boostrapping root cursor's methods\n  function bootstrap(name) {\n    this[name] = function() {\n      var r = this.root[name].apply(this.root, arguments);\n      return r instanceof Cursor ? this : r;\n    };\n  }\n\n  ['get', 'set', 'unset', 'update'].forEach(bootstrap.bind(this));\n\n  // Facets\n  if (!type.Object(this.options.facets))\n    throw Error('Baobab: invalid facets.');\n\n  for (var k in this.options.facets)\n    this.addFacet(k, this.options.facets[k]);\n}\n\nhelpers.inherits(Baobab, EventEmitter);\n\n/**\n * Prototype\n */\nBaobab.prototype.addFacet = function(name, definition, args) {\n  this.facets[name] = this.createFacet(definition, args);\n  return this;\n};\n\nBaobab.prototype.createFacet = function(definition, args) {\n  return new Facet(this, definition, args);\n};\n\nBaobab.prototype.select = function(path) {\n  if (arguments.length > 1)\n    path = helpers.arrayOf(arguments);\n\n  if (!type.Path(path))\n    throw Error('Baobab.select: invalid path.');\n\n  // Casting to array\n  path = [].concat(path);\n\n  // Complex path?\n  var complex = type.ComplexPath(path);\n\n  var solvedPath;\n\n  if (complex)\n    solvedPath = helpers.solvePath(this.data, path, this);\n\n  // Registering a new cursor or giving the already existing one for path\n  var hash = path.map(function(step) {\n    if (type.Function(step))\n      return complexHash('fn');\n    else if (type.Object(step))\n      return complexHash('ob');\n    else\n      return step;\n  }).join('|λ|');\n\n  if (!this._cursors[hash]) {\n    var cursor = new Cursor(this, path, solvedPath, hash);\n    this._cursors[hash] = cursor;\n    return cursor;\n  }\n  else {\n    return this._cursors[hash];\n  }\n};\n\nBaobab.prototype.stack = function(spec, skipMerge) {\n  var self = this;\n\n  if (!type.Object(spec))\n    throw Error('Baobab.update: wrong specification.');\n\n  this._transaction = (skipMerge && !Object.keys(this._transaction).length) ?\n    spec :\n    merge(this._transaction, spec);\n\n  // Should we let the user commit?\n  if (!this.options.autoCommit)\n    return this;\n\n  // Should we update synchronously?\n  if (!this.options.asynchronous)\n    return this.commit();\n\n  // Updating asynchronously\n  if (!this._future)\n    this._future = setTimeout(self.commit.bind(self, null), 0);\n\n  return this;\n};\n\nBaobab.prototype.commit = function() {\n  var self = this;\n\n  // Applying modifications\n  var result = update(this.data, this._transaction, this.options);\n\n  var oldData = this.data;\n\n  // Resetting\n  this._transaction = {};\n\n  if (this._future)\n    this._future = clearTimeout(this._future);\n\n  // Validate?\n  var validate = this.options.validate,\n      behavior = this.options.validationBehavior;\n\n  if (typeof validate === 'function') {\n    var error = validate.call(this, oldData, result.data, result.log);\n\n    if (error instanceof Error) {\n      this.emit('invalid', {error: error});\n\n      if (behavior === 'rollback')\n        return this;\n    }\n  }\n\n  // Switching tree's data\n  this.data = result.data;\n\n  // Baobab-level update event\n  this.emit('update', {\n    log: result.log,\n    previousState: oldData\n  });\n\n  return this;\n};\n\nBaobab.prototype.release = function() {\n  var k;\n\n  delete this.data;\n  delete this._transaction;\n\n  // Releasing cursors\n  for (k in this._cursors)\n    this._cursors[k].release();\n  delete this._cursors;\n\n  // Releasing facets\n  for (k in this.facets)\n    this.facets[k].release();\n  delete this.facets;\n\n  // Killing event emitter\n  this.kill();\n};\n\n/**\n * Output\n */\nBaobab.prototype.toJSON = function() {\n  return this.get();\n};\n\nBaobab.prototype.toString = function() {\n  return this._identity;\n};\n\n/**\n * Export\n */\nmodule.exports = Baobab;\n","/**\n * Baobab Cursor Abstraction\n * ==========================\n *\n * Nested selection into a baobab tree.\n */\nvar EventEmitter = require('emmett'),\n    helpers = require('./helpers.js'),\n    defaults = require('../defaults.js'),\n    type = require('./type.js');\n\n/**\n * Main Class\n */\nfunction Cursor(tree, path, solvedPath, hash) {\n  var self = this;\n\n  // Extending event emitter\n  EventEmitter.call(this);\n\n  // Enforcing array\n  path = path || [];\n\n  // Properties\n  this.tree = tree;\n  this.path = path;\n  this.hash = hash;\n  this.archive = null;\n  this.recording = false;\n  this.undoing = false;\n\n  // Privates\n  this._identity = '[object Cursor]';\n\n  // Complex path?\n  this.complexPath = !!solvedPath;\n  this.solvedPath = this.complexPath ? solvedPath : this.path;\n\n  // Relevant?\n  this.relevant = this.get() !== undefined;\n\n  // Root listeners\n  function update(previousState) {\n    if (self.recording && !self.undoing) {\n\n      // Handle archive\n      var record = helpers.getIn(previousState, self.solvedPath, self.tree);\n      self.archive.add(record);\n    }\n\n    self.undoing = false;\n    return self.emit('update');\n  }\n\n  this.updateHandler = function(e) {\n    var log = e.data.log,\n        previousState = e.data.previousState,\n        shouldFire = false,\n        c, p, l, m, i, j;\n\n    // Solving path if needed\n    if (self.complexPath)\n      self.solvedPath = helpers.solvePath(self.tree.data, self.path, self.tree);\n\n    // If selector listens at tree, we fire\n    if (!self.path.length)\n      return update(previousState);\n\n    // Checking update log to see whether the cursor should update.\n    if (self.solvedPath)\n      shouldFire = helpers.solveUpdate(log, [self.solvedPath]);\n\n    // Handling relevancy\n    var data = self.get() !== undefined;\n\n    if (self.relevant) {\n      if (data && shouldFire) {\n        update(previousState);\n      }\n      else if (!data) {\n        self.emit('irrelevant');\n        self.relevant = false;\n      }\n    }\n    else {\n      if (data && shouldFire) {\n        self.emit('relevant');\n        update(previousState);\n        self.relevant = true;\n      }\n    }\n  };\n\n  // Lazy binding\n  var bound = false;\n\n  this._lazyBind = function() {\n    if (bound)\n      return;\n    bound = true;\n    self.tree.on('update', self.updateHandler);\n  };\n\n  this.on = helpers.before(this._lazyBind, this.on.bind(this));\n  this.once = helpers.before(this._lazyBind, this.once.bind(this));\n\n  if (this.complexPath)\n    this._lazyBind();\n}\n\nhelpers.inherits(Cursor, EventEmitter);\n\n/**\n * Predicates\n */\nCursor.prototype.isRoot = function() {\n  return !this.path.length;\n};\n\nCursor.prototype.isLeaf = function() {\n  return type.Primitive(this.get());\n};\n\nCursor.prototype.isBranch = function() {\n  return !this.isLeaf() && !this.isRoot();\n};\n\n/**\n * Traversal\n */\nCursor.prototype.root = function() {\n  return this.tree.root();\n};\n\nCursor.prototype.select = function(path) {\n  if (arguments.length > 1)\n    path = helpers.arrayOf(arguments);\n\n  if (!type.Path(path))\n    throw Error('baobab.Cursor.select: invalid path.');\n  return this.tree.select(this.path.concat(path));\n};\n\nCursor.prototype.up = function() {\n  if (this.solvedPath && this.solvedPath.length)\n    return this.tree.select(this.path.slice(0, -1));\n  else\n    return null;\n};\n\nCursor.prototype.left = function() {\n  var last = +this.solvedPath[this.solvedPath.length - 1];\n\n  if (isNaN(last))\n    throw Error('baobab.Cursor.left: cannot go left on a non-list type.');\n\n  return last ?\n    this.tree.select(this.solvedPath.slice(0, -1).concat(last - 1)) :\n    null;\n};\n\nCursor.prototype.leftmost = function() {\n  var last = +this.solvedPath[this.solvedPath.length - 1];\n\n  if (isNaN(last))\n    throw Error('baobab.Cursor.leftmost: cannot go left on a non-list type.');\n\n  return this.tree.select(this.solvedPath.slice(0, -1).concat(0));\n};\n\nCursor.prototype.right = function() {\n  var last = +this.solvedPath[this.solvedPath.length - 1];\n\n  if (isNaN(last))\n    throw Error('baobab.Cursor.right: cannot go right on a non-list type.');\n\n  if (last + 1 === this.up().get().length)\n    return null;\n\n  return this.tree.select(this.solvedPath.slice(0, -1).concat(last + 1));\n};\n\nCursor.prototype.rightmost = function() {\n  var last = +this.solvedPath[this.solvedPath.length - 1];\n\n  if (isNaN(last))\n    throw Error('baobab.Cursor.right: cannot go right on a non-list type.');\n\n  var list = this.up().get();\n\n  return this.tree.select(this.solvedPath.slice(0, -1).concat(list.length - 1));\n};\n\nCursor.prototype.down = function() {\n  var last = +this.solvedPath[this.solvedPath.length - 1];\n\n  if (!(this.get() instanceof Array))\n    return null;\n\n  return this.tree.select(this.solvedPath.concat(0));\n};\n\n/**\n * Access\n */\nCursor.prototype.get = function(path) {\n  if (arguments.length > 1)\n    path = helpers.arrayOf(arguments);\n\n  var fullPath = this.solvedPath.concat(\n    [].concat(path || path === 0 ? path : [])\n  );\n\n  return helpers.getIn(this.tree.data, fullPath, this.tree);\n};\n\n/**\n * Update\n */\nfunction pathPolymorphism(method, allowedType, key, val) {\n  if (arguments.length > 5)\n    throw Error('baobab.Cursor.' + method + ': too many arguments.');\n\n  if (method === 'unset') {\n    val = true;\n\n    if (arguments.length === 2)\n      key = [];\n  }\n\n  else if (arguments.length < 4) {\n    val = key;\n    key = [];\n  }\n\n  if (!type.Path(key))\n    throw Error('baobab.Cursor.' + method + ': invalid path \"' + key + '\".');\n\n  // Splice exception\n  if (method === 'splice' &&\n      !type.Splicer(val)) {\n    if (type.Array(val))\n      val = [val];\n    else\n      throw Error('baobab.Cursor.splice: incorrect value.');\n  }\n\n  // Checking value validity\n  if (allowedType && !allowedType(val))\n    throw Error('baobab.Cursor.' + method + ': incorrect value.');\n\n  var path = [].concat(key),\n      solvedPath = helpers.solvePath(this.get(), path, this.tree);\n\n  if (!solvedPath)\n    throw Error('baobab.Cursor.' + method + ': could not solve dynamic path.');\n\n  var leaf = {};\n  leaf['$' + method] = val;\n\n  var spec = helpers.pathObject(solvedPath, leaf);\n\n  return spec;\n}\n\nfunction makeUpdateMethod(command, type) {\n  Cursor.prototype[command] = function() {\n    var spec = pathPolymorphism.bind(this, command, type).apply(this, arguments);\n\n    return this.update(spec, true);\n  };\n}\n\nmakeUpdateMethod('set');\nmakeUpdateMethod('apply', type.Function);\nmakeUpdateMethod('chain', type.Function);\nmakeUpdateMethod('push');\nmakeUpdateMethod('unshift');\nmakeUpdateMethod('merge', type.Object);\nmakeUpdateMethod('splice');\n\nCursor.prototype.unset = function(key) {\n  if (key === undefined && this.isRoot())\n    throw Error('baobab.Cursor.unset: cannot remove root node.');\n\n  var spec = pathPolymorphism.bind(this, 'unset', null).apply(this, arguments);\n\n  return this.update(spec, true);\n};\n\nCursor.prototype.update = function(spec, skipMerge) {\n  if (!type.Object(spec))\n    throw Error('baobab.Cursor.update: invalid specifications.');\n\n  this.tree.stack(helpers.pathObject(this.solvedPath, spec), skipMerge);\n  return this;\n};\n\n/**\n * History\n */\nCursor.prototype.startRecording = function(maxRecords) {\n  maxRecords = maxRecords || 5;\n\n  if (maxRecords < 1)\n    throw Error('baobab.Cursor.startRecording: invalid maximum number of records.');\n\n  if (this.archive)\n    return this;\n\n  // Lazy bind\n  this._lazyBind();\n\n  this.archive = helpers.archive(maxRecords);\n  this.recording = true;\n  return this;\n};\n\nCursor.prototype.stopRecording = function() {\n  this.recording = false;\n  return this;\n};\n\nCursor.prototype.undo = function(steps) {\n  steps = steps || 1;\n\n  if (!this.recording)\n    throw Error('baobab.Cursor.undo: cursor is not recording.');\n\n  if (!type.PositiveInteger(steps))\n    throw Error('baobab.Cursor.undo: expecting a positive integer.');\n\n  var record = this.archive.back(steps);\n\n  if (!record)\n    throw Error('boabab.Cursor.undo: cannot find a relevant record (' + steps + ' back).');\n\n  this.undoing = true;\n  return this.set(record);\n};\n\nCursor.prototype.hasHistory = function() {\n  return !!(this.archive && this.archive.get().length);\n};\n\nCursor.prototype.getHistory = function() {\n  return this.archive ? this.archive.get() : [];\n};\n\nCursor.prototype.clearHistory = function() {\n  this.archive = null;\n  return this;\n};\n\n/**\n * Releasing\n */\nCursor.prototype.release = function() {\n\n  // Removing listener on parent\n  this.tree.off('update', this.updateHandler);\n\n  // If the cursor is hashed, we unsubscribe from the parent\n  if (this.hash)\n    delete this.tree._cursors[this.hash];\n\n  // Dereferencing\n  delete this.tree;\n  delete this.path;\n  delete this.solvedPath;\n  delete this.archive;\n\n  // Killing emitter\n  this.kill();\n};\n\n/**\n * Output\n */\nCursor.prototype.toJSON = function() {\n  return this.get();\n};\n\nCursor.prototype.toString = function() {\n  return this._identity;\n};\n\n/**\n * Export\n */\nmodule.exports = Cursor;\n","/**\n * Baobab Facet Abstraction\n * =========================\n *\n * Facets enable the user to define views on a given Baobab tree.\n */\nvar EventEmitter = require('emmett'),\n    Cursor = require('./cursor.js'),\n    helpers = require('./helpers.js'),\n    type = require('./type.js');\n\nfunction Facet(tree, definition, args) {\n  var self = this;\n\n  var firstTime = true,\n      solved = false,\n      getter = definition.get,\n      facetData = null;\n\n  // Extending event emitter\n  EventEmitter.call(this);\n\n  // Properties\n  this.tree = tree;\n  this.cursors = {};\n  this.facets = {};\n\n  var cursorsMapping = definition.cursors,\n      facetsMapping = definition.facets,\n      complexCursors = typeof definition.cursors === 'function',\n      complexFacets = typeof definition.facets === 'function';\n\n  // Refreshing the internal mapping\n  function refresh(complexity, targetMapping, targetProperty, mappingType, refreshArgs) {\n    if (!complexity && !firstTime)\n      return;\n\n    solved = false;\n\n    var solvedMapping = targetMapping;\n\n    if (complexity)\n      solvedMapping = targetMapping.apply(this, refreshArgs);\n\n    if (!mappingType(solvedMapping))\n      throw Error('baobab.Facet: incorrect ' + targetProperty + ' mapping.');\n\n    self[targetProperty] = {};\n\n    Object.keys(solvedMapping).forEach(function(k) {\n\n      if (targetProperty === 'cursors') {\n        if (solvedMapping[k] instanceof Cursor) {\n          self.cursors[k] = solvedMapping[k];\n          return;\n        }\n\n        if (type.Path(solvedMapping[k])) {\n          self.cursors[k] = tree.select(solvedMapping[k]);\n          return;\n        }\n      }\n\n      else {\n        if (solvedMapping[k] instanceof Facet) {\n          self.facets[k] = solvedMapping[k];\n          return;\n        }\n\n        if (typeof solvedMapping[k] === 'string') {\n          self.facets[k] = tree.facets[solvedMapping[k]];\n\n          if (!self.facets[k])\n            throw Error('baobab.Facet: unkown \"' + solvedMapping[k] + '\" facet in facets mapping.');\n          return;\n        }\n      }\n    });\n  }\n\n  this.refresh = function(refreshArgs) {\n    refreshArgs = refreshArgs || [];\n\n    if (!type.Array(refreshArgs))\n      throw Error('baobab.Facet.refresh: first argument should be an array.');\n\n    if (cursorsMapping)\n      refresh(\n        complexCursors,\n        cursorsMapping,\n        'cursors',\n        type.FacetCursors,\n        refreshArgs\n      );\n\n    if (facetsMapping)\n      refresh(\n        complexFacets,\n        facetsMapping,\n        'facets',\n        type.FacetFacets,\n        refreshArgs\n      );\n  };\n\n  // Data solving\n  this.get = function() {\n    if (solved)\n      return facetData;\n\n    // Solving\n    var data = {},\n        k;\n\n    for (k in self.facets)\n      data[k] = self.facets[k].get();\n\n    for (k in self.cursors)\n      data[k] = self.cursors[k].get();\n\n    // Applying getter\n    data = typeof getter === 'function' ?\n      getter.call(null, data) :\n      data;\n\n    solved = true;\n    facetData = data;\n\n    return facetData;\n  };\n\n  // Tracking the tree's updates\n  function cursorsPaths(cursors) {\n    return Object.keys(cursors).map(function(k) {\n      return cursors[k].solvedPath;\n    });\n  }\n\n  function facetsPaths(facets) {\n    var paths =  Object.keys(facets).map(function(k) {\n      return cursorsPaths(facets[k].cursors);\n    });\n\n    return [].concat.apply([], paths);\n  }\n\n  this.updateHandler = function(e) {\n\n    var paths = cursorsPaths(self.cursors).concat(facetsPaths(self.facets));\n\n    if (helpers.solveUpdate(e.data.log, paths)) {\n      solved = false;\n      self.emit('update');\n    }\n  };\n\n  // Init routine\n  this.refresh(args);\n  this.tree.on('update', this.updateHandler);\n\n  firstTime = false;\n}\n\nhelpers.inherits(Facet, EventEmitter);\n\nFacet.prototype.release = function() {\n  this.tree.off('update', this.updateHandler);\n\n  this.tree = null;\n  this.cursors = null;\n  this.facets = null;\n  this.kill();\n};\n\nmodule.exports = Facet;\n","/**\n * Baobab Helpers\n * ===============\n *\n * Miscellaneous helper functions.\n */\nvar type = require('./type.js');\n\n// Make a real array of an array-like object\nfunction arrayOf(o) {\n  return Array.prototype.slice.call(o);\n}\n\n// Decorate a function by applying something before it\nfunction before(decorator, fn) {\n  return function() {\n    decorator();\n    fn.apply(null, arguments);\n  };\n}\n\n// Non-mutative splice function\nfunction splice(array, index, nb /*, &elements */) {\n  var elements = arrayOf(arguments).slice(3);\n\n  return array\n    .slice(0, index)\n    .concat(elements)\n    .concat(array.slice(index + nb));\n}\n\n// Shallow merge\nfunction shallowMerge(o1, o2) {\n  var o = {},\n      k;\n\n  for (k in o1) o[k] = o1[k];\n  for (k in o2) o[k] = o2[k];\n\n  return o;\n}\n\n// Clone a regexp\nfunction cloneRegexp(re) {\n  var pattern = re.source,\n      flags = '';\n\n  if (re.global) flags += 'g';\n  if (re.multiline) flags += 'm';\n  if (re.ignoreCase) flags += 'i';\n  if (re.sticky) flags += 'y';\n  if (re.unicode) flags += 'u';\n\n  return new RegExp(pattern, flags);\n}\n\n// Cloning function\nfunction clone(deep, item) {\n  if (!item ||\n      typeof item !== 'object' ||\n      item instanceof Error ||\n      ('ArrayBuffer' in global && item instanceof ArrayBuffer))\n    return item;\n\n  // Array\n  if (type.Array(item)) {\n    if (deep) {\n      var i, l, a = [];\n      for (i = 0, l = item.length; i < l; i++)\n        a.push(deepClone(item[i]));\n      return a;\n    }\n    else {\n      return item.slice(0);\n    }\n  }\n\n  // Date\n  if (type.Date(item))\n    return new Date(item.getTime());\n\n  // RegExp\n  if (item instanceof RegExp)\n    return cloneRegexp(item);\n\n  // Object\n  if (type.Object(item)) {\n    var k, o = {};\n\n    if (item.constructor && item.constructor !== Object)\n      o = Object.create(item.constructor.prototype);\n\n    for (k in item)\n      if (item.hasOwnProperty(k))\n        o[k] = deep ? deepClone(item[k]) : item[k];\n    return o;\n  }\n\n  return item;\n}\n\n// Shallow & deep cloning functions\nvar shallowClone = clone.bind(null, false),\n    deepClone = clone.bind(null, true);\n\n// Simplistic composition\nfunction compose(fn1, fn2) {\n  return function(arg) {\n    return fn2(fn1(arg));\n  };\n}\n\n// Get first item matching predicate in list\nfunction first(a, fn) {\n  var i, l;\n  for (i = 0, l = a.length; i < l; i++) {\n    if (fn(a[i]))\n      return a[i];\n  }\n  return;\n}\n\nfunction index(a, fn) {\n  var i, l;\n  for (i = 0, l = a.length; i < l; i++) {\n    if (fn(a[i]))\n      return i;\n  }\n  return -1;\n}\n\n// Compare object to spec\nfunction compare(object, spec) {\n  var ok = true,\n      k;\n\n  // If we reached here via a recursive call, object may be undefined because\n  // not all items in a collection will have the same deep nesting structure\n  if (!object) {\n    return false;\n  }\n\n  for (k in spec) {\n    if (type.Object(spec[k])) {\n      ok = ok && compare(object[k], spec[k]);\n    }\n    else if (type.Array(spec[k])) {\n      ok = ok && !!~spec[k].indexOf(object[k]);\n    }\n    else {\n      if (object[k] !== spec[k])\n        return false;\n    }\n  }\n\n  return ok;\n}\n\nfunction firstByComparison(object, spec) {\n  return first(object, function(e) {\n    return compare(e, spec);\n  });\n}\n\nfunction indexByComparison(object, spec) {\n  return index(object, function(e) {\n    return compare(e, spec);\n  });\n}\n\n// Retrieve nested objects\nfunction getIn(object, path, tree) {\n  path = path || [];\n\n  var c = object,\n      p,\n      i,\n      l;\n\n  for (i = 0, l = path.length; i < l; i++) {\n    if (!c)\n      return;\n\n    if (typeof path[i] === 'function') {\n      if (!type.Array(c))\n        return;\n\n      c = first(c, path[i]);\n    }\n    else if (typeof path[i] === 'object') {\n      if (tree && '$cursor' in path[i]) {\n        if (!type.Path(path[i].$cursor))\n          throw Error('baobab.getIn: $cursor path must be an array.');\n\n        p = tree.get(path[i].$cursor);\n        c = c[p];\n      }\n\n      else if (!type.Array(c)) {\n        return;\n      }\n\n      else {\n        c = firstByComparison(c, path[i]);\n      }\n    }\n    else {\n      c = c[path[i]];\n    }\n  }\n\n  return c;\n}\n\n// Solve a complex path\nfunction solvePath(object, path, tree) {\n  var solvedPath = [],\n      c = object,\n      idx,\n      i,\n      l;\n\n  for (i = 0, l = path.length; i < l; i++) {\n    if (!c)\n      return null;\n\n    if (typeof path[i] === 'function') {\n      if (!type.Array(c))\n        return;\n\n      idx = index(c, path[i]);\n      solvedPath.push(idx);\n      c = c[idx];\n    }\n    else if (typeof path[i] === 'object') {\n      if (tree && '$cursor' in path[i]) {\n        if (!type.Path(path[i].$cursor))\n          throw Error('baobab.getIn: $cursor path must be an array.');\n\n        p = tree.get(path[i].$cursor);\n        solvedPath.push(p);\n        c = c[p];\n      }\n\n      else if (!type.Array(c)) {\n        return;\n      }\n\n      else {\n        idx = indexByComparison(c, path[i]);\n        solvedPath.push(idx);\n        c = c[idx];\n      }\n    }\n    else {\n      solvedPath.push(path[i]);\n      c = c[path[i]] || {};\n    }\n  }\n\n  return solvedPath;\n}\n\n// Determine whether an update should fire for the given paths\n// NOTES: 1) if performance becomes an issue, the threefold loop can be\n//           simplified to become a complex twofold one.\n//        2) a regex version could also work but I am not confident it would be\n//           faster.\nfunction solveUpdate(log, paths) {\n  var i, j, k, l, m, n, p, c, s;\n\n  // Looping through possible paths\n  for (i = 0, l = paths.length; i < l; i++) {\n    p = paths[i];\n\n    // Looping through logged paths\n    for (j = 0, m = log.length; j < m; j++) {\n      c = log[j];\n\n      // Looping through steps\n      for (k = 0, n = c.length; k < n; k++) {\n        s = c[k];\n\n        // If path is not relevant, we break\n        if (s != p[k])\n          break;\n\n        // If we reached last item and we are relevant\n        if (k + 1 === n || k + 1 === p.length)\n          return true;\n      }\n    }\n  }\n\n  return false;\n}\n\n// Return a fake object relative to the given path\nfunction pathObject(path, spec) {\n  var l = path.length,\n      o = {},\n      c = o,\n      i;\n\n  if (!l)\n    o = spec;\n\n  for (i = 0; i < l; i++) {\n    c[path[i]] = (i + 1 === l) ? spec : {};\n    c = c[path[i]];\n  }\n\n  return o;\n}\n\n// Shim used for cross-compatible event emitting extension\nfunction inherits(ctor, superCtor) {\n  ctor.super_ = superCtor;\n  var TempCtor = function () {};\n  TempCtor.prototype = superCtor.prototype;\n  ctor.prototype = new TempCtor();\n  ctor.prototype.constructor = ctor;\n}\n\n// Archive\nfunction archive(size) {\n  var records = [];\n\n  return {\n    add: function(record) {\n      records.unshift(record);\n\n      if (records.length > size)\n        records.length = size;\n    },\n    back: function(steps) {\n      var record = records[steps - 1];\n\n      if (record)\n        records = records.slice(steps);\n      return record;\n    },\n    get: function() {\n      return records;\n    }\n  };\n}\n\nmodule.exports = {\n  archive: archive,\n  arrayOf: arrayOf,\n  before: before,\n  deepClone: deepClone,\n  shallowClone: shallowClone,\n  shallowMerge: shallowMerge,\n  compose: compose,\n  getIn: getIn,\n  inherits: inherits,\n  pathObject: pathObject,\n  solvePath: solvePath,\n  solveUpdate: solveUpdate,\n  splice: splice\n};\n","/**\n * Baobab Merge\n * =============\n *\n * A function used to merge updates in the stack.\n */\nvar helpers = require('./helpers.js'),\n    type = require('./type.js');\n\n// Helpers\nvar COMMANDS = ['$unset', '$set', '$apply'];\n\nfunction only(command, commandValue) {\n  var o = {};\n  o[command] = commandValue;\n  return o;\n}\n\n// Main function\nfunction merge(a, b) {\n  var o = helpers.shallowClone(a || {}),\n      leafLevel = false,\n      k,\n      i;\n\n  COMMANDS.forEach(function(c) {\n    if (c in b) {\n      o = only(c, b[c]);\n      leafLevel = true;\n    }\n  });\n\n  if (b.$chain) {\n\n    if (o.$apply)\n      o.$apply = helpers.compose(o.$apply, b.$chain);\n    else\n      o.$apply = b.$chain;\n\n    o = only('$apply', o.$apply);\n    leafLevel = true;\n  }\n\n  if (b.$merge) {\n    o.$merge = helpers.shallowMerge(o.$merge || {}, b.$merge);\n    leafLevel = true;\n  }\n\n  if (b.$splice || b.$splice) {\n    o.$splice = [].concat(o.$splice || []).concat(b.$splice || []);\n    leafLevel = true;\n  }\n\n  if (b.$push || o.$push) {\n    o.$push = [].concat(o.$push || []).concat(b.$push || []);\n    leafLevel = true;\n  }\n\n  if (b.$unshift || o.$unshift) {\n    o.$unshift = [].concat(b.$unshift || []).concat(o.$unshift || []);\n    leafLevel = true;\n  }\n\n  if (leafLevel)\n    return o;\n\n  for (k in o) {\n    if (k.charAt(0) === '$')\n      delete o[k];\n  }\n\n  for (k in b) {\n    if (type.Object(b[k]))\n      o[k] = merge(o[k], b[k]);\n  }\n\n  return o;\n}\n\nmodule.exports = merge;\n","/**\n * Baobab Type Checking\n * =====================\n *\n * Misc helpers functions used throughout the library to perform some type\n * tests at runtime.\n *\n * @christianalfoni\n */\nvar type = {};\n\n/**\n * Helpers\n */\nfunction anyOf(value, allowed) {\n  return allowed.some(function(t) {\n    return type[t](value);\n  });\n}\n\n/**\n * Simple types\n */\ntype.Array = function(value) {\n  return Array.isArray(value);\n};\n\ntype.Object = function(value) {\n  return value &&\n         typeof value === 'object' &&\n         !Array.isArray(value) &&\n         !(value instanceof Function);\n};\n\ntype.String = function(value) {\n  return typeof value === 'string';\n};\n\ntype.Number = function(value) {\n  return typeof value === 'number';\n};\n\ntype.PositiveInteger = function(value) {\n  return typeof value === 'number' && value > 0 && value % 1 === 0;\n};\n\ntype.Function = function(value) {\n  return typeof value === 'function';\n};\n\ntype.Primitive = function(value) {\n  return !value ||\n         typeof value === 'string' ||\n         typeof value === 'number' ||\n         typeof value === 'boolean';\n};\n\ntype.Date = function(value) {\n  return value instanceof Date;\n};\n\n/**\n * Complex types\n */\ntype.NonScalar = function(value) {\n  return type.Object(value) || type.Array(value);\n};\n\ntype.Splicer = function(value) {\n  return type.Array(value) &&\n         value.every(type.Array);\n};\n\ntype.Path = function(value, allowed) {\n  allowed = allowed || ['String', 'Number', 'Function', 'Object'];\n\n  if (type.Array(value)) {\n    return value.every(function(step) {\n      return anyOf(step, allowed);\n    });\n  }\n  else {\n    return anyOf(value, allowed);\n  }\n};\n\ntype.ComplexPath = function(value) {\n  return value.some(function(step) {\n    return anyOf(step, ['Object', 'Function']);\n  });\n};\n\ntype.FacetCursors = function(value) {\n  if (!type.Object(value))\n    return false;\n\n  return Object.keys(value).every(function(k) {\n    var v = value[k];\n\n    return type.Path(v, ['String', 'Number', 'Object']) ||\n           v instanceof require('./cursor.js');\n  });\n};\n\ntype.FacetFacets = function(value) {\n  if (!type.Object(value))\n    return false;\n\n  return Object.keys(value).every(function(k) {\n    var v = value[k];\n\n    return typeof v === 'string' ||\n           v instanceof require('./facet.js');\n  });\n};\n\nmodule.exports = type;\n","/**\n * Baobab Update\n * ==============\n *\n * A handy method to mutate an atom according to the given specification.\n * Mostly inspired by http://facebook.github.io/react/docs/update.html\n */\nvar helpers = require('./helpers.js'),\n    type = require('./type.js');\n\n// Helpers\nfunction makeError(path, message) {\n  var e = new Error('baobab.update: ' + message + ' at path /' +\n                    path.slice(1).join('/'));\n\n  e.path = path;\n  return e;\n}\n\nmodule.exports = function(data, spec, opts) {\n  opts = opts || {};\n\n  var log = {};\n\n  // Shifting root\n  data = {root: helpers.shallowClone(data)};\n\n  // Closure performing the updates themselves\n  var mutator = function(o, spec, path, parent) {\n    path = path || ['root'];\n\n    var hash = path.join('|λ|'),\n        lastKey = path[path.length - 1],\n        oldValue = o[lastKey],\n        fn,\n        k,\n        v,\n        i,\n        l;\n\n    // If nested object does not exist, we create it\n    if (type.Primitive(o[lastKey]))\n      o[lastKey] = {};\n    else\n      o[lastKey] = helpers.shallowClone(o[lastKey]);\n\n    // Are we at leaf level?\n    var leafLevel = Object.keys(spec).some(function(k) {\n      return k.charAt(0) === '$';\n    });\n\n    // Leaf level updates\n    if (leafLevel) {\n      log[hash] = true;\n\n      for (k in spec) {\n\n        // $unset\n        if (k === '$unset') {\n          var olderKey = path[path.length - 2];\n\n          if (!type.Object(parent[olderKey]))\n            throw makeError(path.slice(0, -1), 'using command $unset on a non-object');\n\n          parent[olderKey] = helpers.shallowClone(o);\n          delete parent[olderKey][lastKey];\n\n          break;\n        }\n\n        // $set\n        if (k === '$set') {\n          v = spec.$set;\n\n          o[lastKey] = v;\n        }\n\n        // $apply\n        else if (k === '$apply' || k === '$chain') {\n          fn = spec.$apply || spec.$chain;\n\n          if (typeof fn !== 'function')\n            throw makeError(path, 'using command $apply with a non function');\n\n          o[lastKey] = fn.call(null, oldValue);\n        }\n\n        // $merge\n        else if (k === '$merge') {\n          v = spec.$merge;\n\n          if (!type.Object(o[lastKey]) || !type.Object(v))\n            throw makeError(path, 'using command $merge with a non object');\n\n          o[lastKey] = helpers.shallowMerge(o[lastKey], v);\n        }\n\n        // $splice\n        if (k === '$splice') {\n          v = spec.$splice;\n\n          if (!type.Array(o[lastKey]))\n            throw makeError(path, 'using command $push to a non array');\n\n          for (i = 0, l = v.length; i < l; i++)\n            o[lastKey] = helpers.splice.apply(null, [o[lastKey]].concat(v[i]));\n        }\n\n        // $push\n        if (k === '$push') {\n          v = spec.$push;\n\n          if (!type.Array(o[lastKey]))\n            throw makeError(path, 'using command $push to a non array');\n\n          o[lastKey] = o[lastKey].concat(v);\n        }\n\n        // $unshift\n        if (k === '$unshift') {\n          v = spec.$unshift;\n\n          if (!type.Array(o[lastKey]))\n            throw makeError(path, 'using command $unshift to a non array');\n\n          o[lastKey] = [].concat(v).concat(o[lastKey]);\n        }\n      }\n    }\n    else {\n      for (k in spec)  {\n\n        // Recur\n        mutator(\n          o[lastKey],\n          spec[k],\n          path.concat(k),\n          o\n        );\n      }\n    }\n  };\n\n  mutator(data, spec);\n\n  // Returning data and path log\n  return {\n    data: data.root,\n\n    // SHIFT LOG\n    log: Object.keys(log).map(function(hash) {\n      return hash.split('|λ|').slice(1);\n    })\n  };\n};\n","/* ========================================================================\n * Bootstrap: modal.js v3.3.4\n * http://getbootstrap.com/javascript/#modals\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // MODAL CLASS DEFINITION\n  // ======================\n\n  var Modal = function (element, options) {\n    this.options             = options\n    this.$body               = $(document.body)\n    this.$element            = $(element)\n    this.$dialog             = this.$element.find('.modal-dialog')\n    this.$backdrop           = null\n    this.isShown             = null\n    this.originalBodyPad     = null\n    this.scrollbarWidth      = 0\n    this.ignoreBackdropClick = false\n\n    if (this.options.remote) {\n      this.$element\n        .find('.modal-content')\n        .load(this.options.remote, $.proxy(function () {\n          this.$element.trigger('loaded.bs.modal')\n        }, this))\n    }\n  }\n\n  Modal.VERSION  = '3.3.4'\n\n  Modal.TRANSITION_DURATION = 300\n  Modal.BACKDROP_TRANSITION_DURATION = 150\n\n  Modal.DEFAULTS = {\n    backdrop: true,\n    keyboard: true,\n    show: true\n  }\n\n  Modal.prototype.toggle = function (_relatedTarget) {\n    return this.isShown ? this.hide() : this.show(_relatedTarget)\n  }\n\n  Modal.prototype.show = function (_relatedTarget) {\n    var that = this\n    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })\n\n    this.$element.trigger(e)\n\n    if (this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = true\n\n    this.checkScrollbar()\n    this.setScrollbar()\n    this.$body.addClass('modal-open')\n\n    this.escape()\n    this.resize()\n\n    this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this))\n\n    this.$dialog.on('mousedown.dismiss.bs.modal', function () {\n      that.$element.one('mouseup.dismiss.bs.modal', function (e) {\n        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true\n      })\n    })\n\n    this.backdrop(function () {\n      var transition = $.support.transition && that.$element.hasClass('fade')\n\n      if (!that.$element.parent().length) {\n        that.$element.appendTo(that.$body) // don't move modals dom position\n      }\n\n      that.$element\n        .show()\n        .scrollTop(0)\n\n      that.adjustDialog()\n\n      if (transition) {\n        that.$element[0].offsetWidth // force reflow\n      }\n\n      that.$element\n        .addClass('in')\n        .attr('aria-hidden', false)\n\n      that.enforceFocus()\n\n      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })\n\n      transition ?\n        that.$dialog // wait for modal to slide in\n          .one('bsTransitionEnd', function () {\n            that.$element.trigger('focus').trigger(e)\n          })\n          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n        that.$element.trigger('focus').trigger(e)\n    })\n  }\n\n  Modal.prototype.hide = function (e) {\n    if (e) e.preventDefault()\n\n    e = $.Event('hide.bs.modal')\n\n    this.$element.trigger(e)\n\n    if (!this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = false\n\n    this.escape()\n    this.resize()\n\n    $(document).off('focusin.bs.modal')\n\n    this.$element\n      .removeClass('in')\n      .attr('aria-hidden', true)\n      .off('click.dismiss.bs.modal')\n      .off('mouseup.dismiss.bs.modal')\n\n    this.$dialog.off('mousedown.dismiss.bs.modal')\n\n    $.support.transition && this.$element.hasClass('fade') ?\n      this.$element\n        .one('bsTransitionEnd', $.proxy(this.hideModal, this))\n        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n      this.hideModal()\n  }\n\n  Modal.prototype.enforceFocus = function () {\n    $(document)\n      .off('focusin.bs.modal') // guard against infinite focus loop\n      .on('focusin.bs.modal', $.proxy(function (e) {\n        if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {\n          this.$element.trigger('focus')\n        }\n      }, this))\n  }\n\n  Modal.prototype.escape = function () {\n    if (this.isShown && this.options.keyboard) {\n      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {\n        e.which == 27 && this.hide()\n      }, this))\n    } else if (!this.isShown) {\n      this.$element.off('keydown.dismiss.bs.modal')\n    }\n  }\n\n  Modal.prototype.resize = function () {\n    if (this.isShown) {\n      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))\n    } else {\n      $(window).off('resize.bs.modal')\n    }\n  }\n\n  Modal.prototype.hideModal = function () {\n    var that = this\n    this.$element.hide()\n    this.backdrop(function () {\n      that.$body.removeClass('modal-open')\n      that.resetAdjustments()\n      that.resetScrollbar()\n      that.$element.trigger('hidden.bs.modal')\n    })\n  }\n\n  Modal.prototype.removeBackdrop = function () {\n    this.$backdrop && this.$backdrop.remove()\n    this.$backdrop = null\n  }\n\n  Modal.prototype.backdrop = function (callback) {\n    var that = this\n    var animate = this.$element.hasClass('fade') ? 'fade' : ''\n\n    if (this.isShown && this.options.backdrop) {\n      var doAnimate = $.support.transition && animate\n\n      this.$backdrop = $('<div class=\"modal-backdrop ' + animate + '\" />')\n        .appendTo(this.$body)\n\n      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {\n        if (this.ignoreBackdropClick) {\n          this.ignoreBackdropClick = false\n          return\n        }\n        if (e.target !== e.currentTarget) return\n        this.options.backdrop == 'static'\n          ? this.$element[0].focus()\n          : this.hide()\n      }, this))\n\n      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow\n\n      this.$backdrop.addClass('in')\n\n      if (!callback) return\n\n      doAnimate ?\n        this.$backdrop\n          .one('bsTransitionEnd', callback)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callback()\n\n    } else if (!this.isShown && this.$backdrop) {\n      this.$backdrop.removeClass('in')\n\n      var callbackRemove = function () {\n        that.removeBackdrop()\n        callback && callback()\n      }\n      $.support.transition && this.$element.hasClass('fade') ?\n        this.$backdrop\n          .one('bsTransitionEnd', callbackRemove)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callbackRemove()\n\n    } else if (callback) {\n      callback()\n    }\n  }\n\n  // these following methods are used to handle overflowing modals\n\n  Modal.prototype.handleUpdate = function () {\n    this.adjustDialog()\n  }\n\n  Modal.prototype.adjustDialog = function () {\n    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight\n\n    this.$element.css({\n      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',\n      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''\n    })\n  }\n\n  Modal.prototype.resetAdjustments = function () {\n    this.$element.css({\n      paddingLeft: '',\n      paddingRight: ''\n    })\n  }\n\n  Modal.prototype.checkScrollbar = function () {\n    var fullWindowWidth = window.innerWidth\n    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n      var documentElementRect = document.documentElement.getBoundingClientRect()\n      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)\n    }\n    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth\n    this.scrollbarWidth = this.measureScrollbar()\n  }\n\n  Modal.prototype.setScrollbar = function () {\n    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)\n    this.originalBodyPad = document.body.style.paddingRight || ''\n    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)\n  }\n\n  Modal.prototype.resetScrollbar = function () {\n    this.$body.css('padding-right', this.originalBodyPad)\n  }\n\n  Modal.prototype.measureScrollbar = function () { // thx walsh\n    var scrollDiv = document.createElement('div')\n    scrollDiv.className = 'modal-scrollbar-measure'\n    this.$body.append(scrollDiv)\n    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\n    this.$body[0].removeChild(scrollDiv)\n    return scrollbarWidth\n  }\n\n\n  // MODAL PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option, _relatedTarget) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.modal')\n      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))\n      if (typeof option == 'string') data[option](_relatedTarget)\n      else if (options.show) data.show(_relatedTarget)\n    })\n  }\n\n  var old = $.fn.modal\n\n  $.fn.modal             = Plugin\n  $.fn.modal.Constructor = Modal\n\n\n  // MODAL NO CONFLICT\n  // =================\n\n  $.fn.modal.noConflict = function () {\n    $.fn.modal = old\n    return this\n  }\n\n\n  // MODAL DATA-API\n  // ==============\n\n  $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {\n    var $this   = $(this)\n    var href    = $this.attr('href')\n    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) // strip for ie7\n    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())\n\n    if ($this.is('a')) e.preventDefault()\n\n    $target.one('show.bs.modal', function (showEvent) {\n      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown\n      $target.one('hidden.bs.modal', function () {\n        $this.is(':visible') && $this.trigger('focus')\n      })\n    })\n    Plugin.call($target, option, this)\n  })\n\n}(jQuery);\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('is-array')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar kMaxLength = 0x3fffffff\nvar rootParent = {}\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Note:\n *\n * - Implementation must support adding new properties to `Uint8Array` instances.\n *   Firefox 4-29 lacked support, fixed in Firefox 30+.\n *   See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *  - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *  - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *    incorrect length in some situations.\n *\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they will\n * get the Object implementation, which is slower but will work correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = (function () {\n  try {\n    var buf = new ArrayBuffer(0)\n    var arr = new Uint8Array(buf)\n    arr.foo = function () { return 42 }\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        new Uint8Array(1).subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n})()\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (subject, encoding) {\n  var self = this\n  if (!(self instanceof Buffer)) return new Buffer(subject, encoding)\n\n  var type = typeof subject\n  var length\n\n  if (type === 'number') {\n    length = +subject\n  } else if (type === 'string') {\n    length = Buffer.byteLength(subject, encoding)\n  } else if (type === 'object' && subject !== null) {\n    // assume object is array-like\n    if (subject.type === 'Buffer' && isArray(subject.data)) subject = subject.data\n    length = +subject.length\n  } else {\n    throw new TypeError('must start with number, buffer, array or string')\n  }\n\n  if (length > kMaxLength) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum size: 0x' +\n      kMaxLength.toString(16) + ' bytes')\n  }\n\n  if (length < 0) length = 0\n  else length >>>= 0 // coerce to uint32\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Preferred: Return an augmented `Uint8Array` instance for best performance\n    self = Buffer._augment(new Uint8Array(length)) // eslint-disable-line consistent-this\n  } else {\n    // Fallback: Return THIS instance of Buffer (created by `new`)\n    self.length = length\n    self._isBuffer = true\n  }\n\n  var i\n  if (Buffer.TYPED_ARRAY_SUPPORT && typeof subject.byteLength === 'number') {\n    // Speed optimization -- use set if we're copying from a typed array\n    self._set(subject)\n  } else if (isArrayish(subject)) {\n    // Treat array-ish objects as a byte array\n    if (Buffer.isBuffer(subject)) {\n      for (i = 0; i < length; i++) {\n        self[i] = subject.readUInt8(i)\n      }\n    } else {\n      for (i = 0; i < length; i++) {\n        self[i] = ((subject[i] % 256) + 256) % 256\n      }\n    }\n  } else if (type === 'string') {\n    self.write(subject, 0, encoding)\n  } else if (type === 'number' && !Buffer.TYPED_ARRAY_SUPPORT) {\n    for (i = 0; i < length; i++) {\n      self[i] = 0\n    }\n  }\n\n  if (length > 0 && length <= Buffer.poolSize) self.parent = rootParent\n\n  return self\n}\n\nfunction SlowBuffer (subject, encoding) {\n  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\n  var buf = new Buffer(subject, encoding)\n  delete buf.parent\n  return buf\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n  for (var i = 0, len = Math.min(x, y); i < len && a[i] === b[i]; i++) {}\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, totalLength) {\n  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  } else if (list.length === 1) {\n    return list[0]\n  }\n\n  var i\n  if (totalLength === undefined) {\n    totalLength = 0\n    for (i = 0; i < list.length; i++) {\n      totalLength += list[i].length\n    }\n  }\n\n  var buf = new Buffer(totalLength)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nBuffer.byteLength = function byteLength (str, encoding) {\n  var ret\n  str = str + ''\n  switch (encoding || 'utf8') {\n    case 'ascii':\n    case 'binary':\n    case 'raw':\n      ret = str.length\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = str.length * 2\n      break\n    case 'hex':\n      ret = str.length >>> 1\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8ToBytes(str).length\n      break\n    case 'base64':\n      ret = base64ToBytes(str).length\n      break\n    default:\n      ret = str.length\n  }\n  return ret\n}\n\n// pre-set for values that may exist in the future\nBuffer.prototype.length = undefined\nBuffer.prototype.parent = undefined\n\n// toString(encoding, start=0, end=buffer.length)\nBuffer.prototype.toString = function toString (encoding, start, end) {\n  var loweredCase = false\n\n  start = start >>> 0\n  end = end === undefined || end === Infinity ? this.length : end >>> 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return 0\n  return Buffer.compare(this, b)\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset) {\n  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff\n  else if (byteOffset < -0x80000000) byteOffset = -0x80000000\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    if (val.length === 0) return -1 // special case: looking for empty string always fails\n    return String.prototype.indexOf.call(this, val, byteOffset)\n  }\n  if (Buffer.isBuffer(val)) {\n    return arrayIndexOf(this, val, byteOffset)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset)\n  }\n\n  function arrayIndexOf (arr, val, byteOffset) {\n    var foundIndex = -1\n    for (var i = 0; byteOffset + i < arr.length; i++) {\n      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex\n      } else {\n        foundIndex = -1\n      }\n    }\n    return -1\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\n// `get` will be removed in Node 0.13+\nBuffer.prototype.get = function get (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` will be removed in Node 0.13+\nBuffer.prototype.set = function set (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) throw new Error('Invalid hex string')\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n  return charsWritten\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(asciiToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(base64ToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction utf16leWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n  return charsWritten\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Support both (string, offset, length, encoding)\n  // and the legacy (string, encoding, offset, length)\n  if (isFinite(offset)) {\n    if (!isFinite(length)) {\n      encoding = length\n      length = undefined\n    }\n  } else {  // legacy\n    var swap = encoding\n    encoding = offset\n    offset = length\n    length = swap\n  }\n\n  offset = Number(offset) || 0\n\n  if (length < 0 || offset < 0 || offset > this.length) {\n    throw new RangeError('attempt to write outside buffer bounds')\n  }\n\n  var remaining = this.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n  encoding = String(encoding || 'utf8').toLowerCase()\n\n  var ret\n  switch (encoding) {\n    case 'hex':\n      ret = hexWrite(this, string, offset, length)\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8Write(this, string, offset, length)\n      break\n    case 'ascii':\n      ret = asciiWrite(this, string, offset, length)\n      break\n    case 'binary':\n      ret = binaryWrite(this, string, offset, length)\n      break\n    case 'base64':\n      ret = base64Write(this, string, offset, length)\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = utf16leWrite(this, string, offset, length)\n      break\n    default:\n      throw new TypeError('Unknown encoding: ' + encoding)\n  }\n  return ret\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  var res = ''\n  var tmp = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    if (buf[i] <= 0x7F) {\n      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])\n      tmp = ''\n    } else {\n      tmp += '%' + buf[i].toString(16)\n    }\n  }\n\n  return res + decodeUtf8Char(tmp)\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  if (newBuf.length) newBuf.parent = this.parent || this\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) >>> 0 & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) >>> 0 & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = value\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = value\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkInt(\n      this, value, offset, byteLength,\n      Math.pow(2, 8 * byteLength - 1) - 1,\n      -Math.pow(2, 8 * byteLength - 1)\n    )\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkInt(\n      this, value, offset, byteLength,\n      Math.pow(2, 8 * byteLength - 1) - 1,\n      -Math.pow(2, 8 * byteLength - 1)\n    )\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = value\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n  if (offset < 0) throw new RangeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, target_start, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (target_start >= target.length) target_start = target.length\n  if (!target_start) target_start = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (target_start < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - target_start < end - start) {\n    end = target.length - target_start + start\n  }\n\n  var len = end - start\n\n  if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < len; i++) {\n      target[i + target_start] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), target_start)\n  }\n\n  return len\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function fill (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new RangeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function toArrayBuffer () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function _augment (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array set method before overwriting\n  arr._set = arr.set\n\n  // deprecated, will be removed in node 0.13+\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.indexOf = BP.indexOf\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUIntLE = BP.readUIntLE\n  arr.readUIntBE = BP.readUIntBE\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readIntLE = BP.readIntLE\n  arr.readIntBE = BP.readIntBE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUIntLE = BP.writeUIntLE\n  arr.writeUIntBE = BP.writeUIntBE\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeIntLE = BP.writeIntLE\n  arr.writeIntBE = BP.writeIntBE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-z\\-]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction isArrayish (subject) {\n  return isArray(subject) || Buffer.isBuffer(subject) ||\n      subject && typeof subject === 'object' &&\n      typeof subject.length === 'number'\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n  var i = 0\n\n  for (; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (leadSurrogate) {\n        // 2 leads in a row\n        if (codePoint < 0xDC00) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          leadSurrogate = codePoint\n          continue\n        } else {\n          // valid surrogate pair\n          codePoint = leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00 | 0x10000\n          leadSurrogate = null\n        }\n      } else {\n        // no lead yet\n\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else {\n          // valid lead\n          leadSurrogate = codePoint\n          continue\n        }\n      }\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n      leadSurrogate = null\n    }\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x200000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction decodeUtf8Char (str) {\n  try {\n    return decodeURIComponent(str)\n  } catch (err) {\n    return String.fromCharCode(0xFFFD) // UTF 8 invalid char\n  }\n}\n","var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n","exports.read = function(buffer, offset, isLE, mLen, nBytes) {\n  var e, m,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      nBits = -7,\n      i = isLE ? (nBytes - 1) : 0,\n      d = isLE ? -1 : 1,\n      s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity);\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function(buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),\n      i = isLE ? 0 : (nBytes - 1),\n      d = isLE ? 1 : -1,\n      s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n\n  buffer[offset + i - d] |= s * 128;\n};\n","\n/**\n * isArray\n */\n\nvar isArray = Array.isArray;\n\n/**\n * toString\n */\n\nvar str = Object.prototype.toString;\n\n/**\n * Whether or not the given `val`\n * is an array.\n *\n * example:\n *\n *        isArray([]);\n *        // > true\n *        isArray(arguments);\n *        // > false\n *        isArray('');\n *        // > false\n *\n * @param {mixed} val\n * @return {bool}\n */\n\nmodule.exports = isArray || function (val) {\n  return !! val && '[object Array]' == str.call(val);\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        len = arguments.length;\n        args = new Array(len - 1);\n        for (i = 1; i < len; i++)\n          args[i - 1] = arguments[i];\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    len = arguments.length;\n    args = new Array(len - 1);\n    for (i = 1; i < len; i++)\n      args[i - 1] = arguments[i];\n\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    var m;\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  var ret;\n  if (!emitter._events || !emitter._events[type])\n    ret = 0;\n  else if (isFunction(emitter._events[type]))\n    ret = 1;\n  else\n    ret = emitter._events[type].length;\n  return ret;\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = require(\"./lib/_stream_duplex.js\")\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nforEach(objectKeys(Writable.prototype), function(method) {\n  if (!Duplex.prototype[method])\n    Duplex.prototype[method] = Writable.prototype[method];\n});\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false)\n    this.readable = false;\n\n  if (options && options.writable === false)\n    this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false)\n    this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(this.end.bind(this));\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function(chunk, encoding, cb) {\n  cb(null, chunk);\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = require('events').EventEmitter;\n\n/*<replacement>*/\nif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\nvar Stream = require('stream');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar StringDecoder;\n\n\n/*<replacement>*/\nvar debug = require('util');\nif (debug && debug.debuglog) {\n  debug = debug.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\n\nutil.inherits(Readable, Stream);\n\nfunction ReadableState(options, stream) {\n  var Duplex = require('./_stream_duplex');\n\n  options = options || {};\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder)\n      StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk, encoding) {\n  var state = this._readableState;\n\n  if (util.isString(chunk) && !state.objectMode) {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function(chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (util.isNullOrUndefined(chunk)) {\n    state.reading = false;\n    if (!state.ended)\n      onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      if (state.decoder && !addToFront && !encoding)\n        chunk = state.decoder.write(chunk);\n\n      if (!addToFront)\n        state.reading = false;\n\n      // if we want the data now, just emit it.\n      if (state.flowing && state.length === 0 && !state.sync) {\n        stream.emit('data', chunk);\n        stream.read(0);\n      } else {\n        // update the buffer info.\n        state.length += state.objectMode ? 1 : chunk.length;\n        if (addToFront)\n          state.buffer.unshift(chunk);\n        else\n          state.buffer.push(chunk);\n\n        if (state.needReadable)\n          emitReadable(stream);\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended &&\n         (state.needReadable ||\n          state.length < state.highWaterMark ||\n          state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  if (!StringDecoder)\n    StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 128MB\nvar MAX_HWM = 0x800000;\nfunction roundUpToNextPowerOf2(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended)\n    return 0;\n\n  if (state.objectMode)\n    return n === 0 ? 0 : 1;\n\n  if (isNaN(n) || util.isNull(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length)\n      return state.buffer[0].length;\n    else\n      return state.length;\n  }\n\n  if (n <= 0)\n    return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark)\n    state.highWaterMark = roundUpToNextPowerOf2(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else\n      return state.length;\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  debug('read', n);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (!util.isNumber(n) || n > 0)\n    state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended)\n      endReadable(this);\n    else\n      emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0)\n      endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  }\n\n  if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read pushed data synchronously, then `reading` will be false,\n  // and we need to re-evaluate how much data we can return to the user.\n  if (doRead && !state.reading)\n    n = howMuchToRead(nOrig, state);\n\n  var ret;\n  if (n > 0)\n    ret = fromList(n, state);\n  else\n    ret = null;\n\n  if (util.isNull(ret)) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended)\n    state.needReadable = true;\n\n  // If we tried to read() past the EOF, then emit end on the next tick.\n  if (nOrig !== n && state.ended && state.length === 0)\n    endReadable(this);\n\n  if (!util.isNull(ret))\n    this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!util.isBuffer(chunk) &&\n      !util.isString(chunk) &&\n      !util.isNullOrUndefined(chunk) &&\n      !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n\nfunction onEofChunk(stream, state) {\n  if (state.decoder && !state.ended) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync)\n      process.nextTick(function() {\n        emitReadable_(stream);\n      });\n    else\n      emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(function() {\n      maybeReadMore_(stream, state);\n    });\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended &&\n         state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n    else\n      len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function(dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted)\n    process.nextTick(endFn);\n  else\n    src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain &&\n        (!dest._writableState || dest._writableState.needDrain))\n      ondrain();\n  }\n\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    if (false === ret) {\n      debug('false write response, pause',\n            src._readableState.awaitDrain);\n      src._readableState.awaitDrain++;\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EE.listenerCount(dest, 'error') === 0)\n      dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error)\n    dest.on('error', onerror);\n  else if (isArray(dest._events.error))\n    dest._events.error.unshift(onerror);\n  else\n    dest._events.error = [onerror, dest._events.error];\n\n\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain)\n      state.awaitDrain--;\n    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0)\n    return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes)\n      return this;\n\n    if (!dest)\n      dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest)\n      dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++)\n      dests[i].emit('unpipe', this);\n    return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1)\n    return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1)\n    state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function(ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  // If listening to data, and it has not explicitly been paused,\n  // then call resume to start the flow of data on the next tick.\n  if (ev === 'data' && false !== this._readableState.flowing) {\n    this.resume();\n  }\n\n  if (ev === 'readable' && this.readable) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        var self = this;\n        process.nextTick(function() {\n          debug('readable nexttick read 0');\n          self.read(0);\n        });\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function() {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    if (!state.reading) {\n      debug('resume read 0');\n      this.read(0);\n    }\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(function() {\n      resume_(stream, state);\n    });\n  }\n}\n\nfunction resume_(stream, state) {\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading)\n    stream.read(0);\n}\n\nReadable.prototype.pause = function() {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  if (state.flowing) {\n    do {\n      var chunk = stream.read();\n    } while (null !== chunk && state.flowing);\n  }\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function() {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length)\n        self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function(chunk) {\n    debug('wrapped data');\n    if (state.decoder)\n      chunk = state.decoder.write(chunk);\n    if (!chunk || !state.objectMode && !chunk.length)\n      return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (util.isFunction(stream[i]) && util.isUndefined(this[i])) {\n      this[i] = function(method) { return function() {\n        return stream[method].apply(stream, arguments);\n      }}(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function(ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function(n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0)\n    return null;\n\n  if (length === 0)\n    ret = null;\n  else if (objectMode)\n    ret = list.shift();\n  else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode)\n      ret = list.join('');\n    else\n      ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode)\n        ret = '';\n      else\n        ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode)\n          ret += buf.slice(0, cpy);\n        else\n          buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length)\n          list[0] = buf.slice(cpy);\n        else\n          list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0)\n    throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(function() {\n      // Check that we didn't get one last unshift.\n      if (!state.endEmitted && state.length === 0) {\n        state.endEmitted = true;\n        stream.readable = false;\n        stream.emit('end');\n      }\n    });\n  }\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf (xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\n\nfunction TransformState(options, stream) {\n  this.afterTransform = function(er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb)\n    return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (!util.isNullOrUndefined(data))\n    stream.push(data);\n\n  if (cb)\n    cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(options, this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  this.once('prefinish', function() {\n    if (util.isFunction(this._flush))\n      this._flush(function(er) {\n        done(stream, er);\n      });\n    else\n      done(stream);\n  });\n}\n\nTransform.prototype.push = function(chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function(chunk, encoding, cb) {\n  throw new Error('not implemented');\n};\n\nTransform.prototype._write = function(chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform ||\n        rs.needReadable ||\n        rs.length < rs.highWaterMark)\n      this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function(n) {\n  var ts = this._transformState;\n\n  if (!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\n\nfunction done(stream, er) {\n  if (er)\n    return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length)\n    throw new Error('calling transform done when ws.length != 0');\n\n  if (ts.transforming)\n    throw new Error('calling transform done when still transforming');\n\n  return stream.push(null);\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, cb), and it'll handle all\n// the drain event emission and buffering.\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Stream = require('stream');\n\nutil.inherits(Writable, Stream);\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n}\n\nfunction WritableState(options, stream) {\n  var Duplex = require('./_stream_duplex');\n\n  options = options || {};\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.buffer = [];\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nfunction Writable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, state, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  process.nextTick(function() {\n    cb(er);\n  });\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  if (!util.isBuffer(chunk) &&\n      !util.isString(chunk) &&\n      !util.isNullOrUndefined(chunk) &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    process.nextTick(function() {\n      cb(er);\n    });\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (util.isFunction(encoding)) {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (util.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (!util.isFunction(cb))\n    cb = function() {};\n\n  if (state.ended)\n    writeAfterEnd(this, state, cb);\n  else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function() {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function() {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing &&\n        !state.corked &&\n        !state.finished &&\n        !state.bufferProcessing &&\n        state.buffer.length)\n      clearBuffer(this, state);\n  }\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      util.isString(chunk)) {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n  if (util.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing || state.corked)\n    state.buffer.push(new WriteReq(chunk, encoding, cb));\n  else\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev)\n    stream._writev(chunk, state.onwrite);\n  else\n    stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  if (sync)\n    process.nextTick(function() {\n      state.pendingcb--;\n      cb(er);\n    });\n  else {\n    state.pendingcb--;\n    cb(er);\n  }\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(stream, state);\n\n    if (!finished &&\n        !state.corked &&\n        !state.bufferProcessing &&\n        state.buffer.length) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(function() {\n        afterWrite(stream, state, finished, cb);\n      });\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n\n  if (stream._writev && state.buffer.length > 1) {\n    // Fast case, write everything using _writev()\n    var cbs = [];\n    for (var c = 0; c < state.buffer.length; c++)\n      cbs.push(state.buffer[c].callback);\n\n    // count the one we are adding, as well.\n    // TODO(isaacs) clean this up\n    state.pendingcb++;\n    doWrite(stream, state, true, state.length, state.buffer, '', function(err) {\n      for (var i = 0; i < cbs.length; i++) {\n        state.pendingcb--;\n        cbs[i](err);\n      }\n    });\n\n    // Clear buffer\n    state.buffer = [];\n  } else {\n    // Slow case, write chunks one-by-one\n    for (var c = 0; c < state.buffer.length; c++) {\n      var entry = state.buffer[c];\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        c++;\n        break;\n      }\n    }\n\n    if (c < state.buffer.length)\n      state.buffer = state.buffer.slice(c);\n    else\n      state.buffer.length = 0;\n  }\n\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (util.isFunction(chunk)) {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (util.isFunction(encoding)) {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (!util.isNullOrUndefined(chunk))\n    this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(stream, state) {\n  return (state.ending &&\n          state.length === 0 &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(stream, state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else\n      prefinish(stream, state);\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      process.nextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nfunction isBuffer(arg) {\n  return Buffer.isBuffer(arg);\n}\nexports.isBuffer = isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}","module.exports = require(\"./lib/_stream_passthrough.js\")\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = require('stream');\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require(\"./lib/_stream_transform.js\")\n","module.exports = require(\"./lib/_stream_writable.js\")\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n","/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 2014-12-17\n *\n * By Eli Grey, http://eligrey.com\n * License: X11/MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs\n  // IE 10+ (native saveAs)\n  || (typeof navigator !== \"undefined\" &&\n      navigator.msSaveOrOpenBlob && navigator.msSaveOrOpenBlob.bind(navigator))\n  // Everyone else\n  || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof navigator !== \"undefined\" &&\n\t    /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = doc.createEvent(\"MouseEvents\");\n\t\t\tevent.initMouseEvent(\n\t\t\t\t\"click\", true, false, view, 0, 0, 0, 0, 0\n\t\t\t\t, false, false, false, false, 0, null\n\t\t\t);\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, webkit_req_fs = view.webkitRequestFileSystem\n\t\t, req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t, fs_min_size = 0\n\t\t// See https://code.google.com/p/chromium/issues/detail?id=375297#c7 and\n\t\t// https://github.com/eligrey/FileSaver.js/commit/485930a#commitcomment-8768047\n\t\t// for the reasoning behind the timeout and revocation flow\n\t\t, arbitrary_revoke_timeout = 500 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (view.chrome) {\n\t\t\t\trevoker();\n\t\t\t} else {\n\t\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t\t}\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, FileSaver = function(blob, name) {\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, blob_changed = false\n\t\t\t\t, object_url\n\t\t\t\t, target_view\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (blob_changed || !object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (target_view) {\n\t\t\t\t\t\ttarget_view.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar new_tab = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (new_tab == undefined && typeof safari !== \"undefined\") {\n\t\t\t\t\t\t\t//Apple do not allow window.open, see http://bit.ly/1kZffRI\n\t\t\t\t\t\t\tview.location.href = object_url\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t\t, abortable = function(func) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif (filesaver.readyState !== filesaver.DONE) {\n\t\t\t\t\t\t\treturn func.apply(this, arguments);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t, create_if_not_found = {create: true, exclusive: false}\n\t\t\t\t, slice\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\tif (!name) {\n\t\t\t\tname = \"download\";\n\t\t\t}\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsave_link.href = object_url;\n\t\t\t\tsave_link.download = name;\n\t\t\t\tclick(save_link);\n\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\tdispatch_all();\n\t\t\t\trevoke(object_url);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Object and web filesystem URLs have a problem saving in Google Chrome when\n\t\t\t// viewed in a tab, so I force save with application/octet-stream\n\t\t\t// http://code.google.com/p/chromium/issues/detail?id=91158\n\t\t\t// Update: Google errantly closed 91158, I submitted it again:\n\t\t\t// https://code.google.com/p/chromium/issues/detail?id=389642\n\t\t\tif (view.chrome && type && type !== force_saveable_type) {\n\t\t\t\tslice = blob.slice || blob.webkitSlice;\n\t\t\t\tblob = slice.call(blob, 0, blob.size, force_saveable_type);\n\t\t\t\tblob_changed = true;\n\t\t\t}\n\t\t\t// Since I can't be sure that the guessed media type will trigger a download\n\t\t\t// in WebKit, I append .download to the filename.\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=65440\n\t\t\tif (webkit_req_fs && name !== \"download\") {\n\t\t\t\tname += \".download\";\n\t\t\t}\n\t\t\tif (type === force_saveable_type || webkit_req_fs) {\n\t\t\t\ttarget_view = view;\n\t\t\t}\n\t\t\tif (!req_fs) {\n\t\t\t\tfs_error();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfs_min_size += blob.size;\n\t\t\treq_fs(view.TEMPORARY, fs_min_size, abortable(function(fs) {\n\t\t\t\tfs.root.getDirectory(\"saved\", create_if_not_found, abortable(function(dir) {\n\t\t\t\t\tvar save = function() {\n\t\t\t\t\t\tdir.getFile(name, create_if_not_found, abortable(function(file) {\n\t\t\t\t\t\t\tfile.createWriter(abortable(function(writer) {\n\t\t\t\t\t\t\t\twriter.onwriteend = function(event) {\n\t\t\t\t\t\t\t\t\ttarget_view.location.href = file.toURL();\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t\tdispatch(filesaver, \"writeend\", event);\n\t\t\t\t\t\t\t\t\trevoke(file);\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\twriter.onerror = function() {\n\t\t\t\t\t\t\t\t\tvar error = writer.error;\n\t\t\t\t\t\t\t\t\tif (error.code !== error.ABORT_ERR) {\n\t\t\t\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\"writestart progress write abort\".split(\" \").forEach(function(event) {\n\t\t\t\t\t\t\t\t\twriter[\"on\" + event] = filesaver[\"on\" + event];\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\twriter.write(blob);\n\t\t\t\t\t\t\t\tfilesaver.abort = function() {\n\t\t\t\t\t\t\t\t\twriter.abort();\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.WRITING;\n\t\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t};\n\t\t\t\t\tdir.getFile(name, {create: false}, abortable(function(file) {\n\t\t\t\t\t\t// delete file if it already exists\n\t\t\t\t\t\tfile.remove();\n\t\t\t\t\t\tsave();\n\t\t\t\t\t}), abortable(function(ex) {\n\t\t\t\t\t\tif (ex.code === ex.NOT_FOUND_ERR) {\n\t\t\t\t\t\t\tsave();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}), fs_error);\n\t\t\t}), fs_error);\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name) {\n\t\t\treturn new FileSaver(blob, name);\n\t\t}\n\t;\n\tFS_proto.abort = function() {\n\t\tvar filesaver = this;\n\t\tfilesaver.readyState = filesaver.DONE;\n\t\tdispatch(filesaver, \"abort\");\n\t};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd != null)) {\n  define([], function() {\n    return saveAs;\n  });\n}\n","//  Ramda v0.13.0\n//  https://github.com/ramda/ramda\n//  (c) 2013-2015 Scott Sauyet, Michael Hurley, and David Chambers\n//  Ramda may be freely distributed under the MIT license.\n\n;(function() {\n\n  'use strict';\n\n  /**\n     * A special placeholder value used to specify \"gaps\" within curried functions,\n     * allowing partial application of any combination of arguments,\n     * regardless of their positions.\n     *\n     * If `g` is a curried ternary function and `_` is `R.__`, the following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2, _)(1, 3)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @constant\n     * @memberOf R\n     * @category Function\n     * @example\n     *\n     *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n     *      greet('Alice'); //=> 'Hello, Alice!'\n     */\n    var __ = { ramda: 'placeholder' };\n\n    var _add = function _add(a, b) {\n        return a + b;\n    };\n\n    var _all = function _all(fn, list) {\n        var idx = -1;\n        while (++idx < list.length) {\n            if (!fn(list[idx])) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    var _any = function _any(fn, list) {\n        var idx = -1;\n        while (++idx < list.length) {\n            if (fn(list[idx])) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    var _assoc = function _assoc(prop, val, obj) {\n        var result = {};\n        for (var p in obj) {\n            result[p] = obj[p];\n        }\n        result[prop] = val;\n        return result;\n    };\n\n    var _cloneRegExp = function _cloneRegExp(pattern) {\n        return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n    };\n\n    var _complement = function _complement(f) {\n        return function () {\n            return !f.apply(this, arguments);\n        };\n    };\n\n    /**\n     * Basic, right-associative composition function. Accepts two functions and returns the\n     * composite function; this composite function represents the operation `var h = f(g(x))`,\n     * where `f` is the first argument, `g` is the second argument, and `x` is whatever\n     * argument(s) are passed to `h`.\n     *\n     * This function's main use is to build the more general `compose` function, which accepts\n     * any number of functions.\n     *\n     * @private\n     * @category Function\n     * @param {Function} f A function.\n     * @param {Function} g A function.\n     * @return {Function} A new function that is the equivalent of `f(g(x))`.\n     * @example\n     *\n     *      var double = function(x) { return x * 2; };\n     *      var square = function(x) { return x * x; };\n     *      var squareThenDouble = _compose(double, square);\n     *\n     *      squareThenDouble(5); //≅ double(square(5)) => 50\n     */\n    var _compose = function _compose(f, g) {\n        return function () {\n            return f.call(this, g.apply(this, arguments));\n        };\n    };\n\n    /**\n     * Private `concat` function to merge two array-like objects.\n     *\n     * @private\n     * @param {Array|Arguments} [set1=[]] An array-like object.\n     * @param {Array|Arguments} [set2=[]] An array-like object.\n     * @return {Array} A new, merged array.\n     * @example\n     *\n     *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     */\n    var _concat = function _concat(set1, set2) {\n        set1 = set1 || [];\n        set2 = set2 || [];\n        var idx;\n        var len1 = set1.length;\n        var len2 = set2.length;\n        var result = [];\n        idx = -1;\n        while (++idx < len1) {\n            result[result.length] = set1[idx];\n        }\n        idx = -1;\n        while (++idx < len2) {\n            result[result.length] = set2[idx];\n        }\n        return result;\n    };\n\n    var _containsWith = function _containsWith(pred, x, list) {\n        var idx = -1, len = list.length;\n        while (++idx < len) {\n            if (pred(x, list[idx])) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    var _createMapEntry = function _createMapEntry(key, val) {\n        var obj = {};\n        obj[key] = val;\n        return obj;\n    };\n\n    /**\n     * Create a function which takes a comparator function and a list\n     * and determines the winning value by a compatator. Used internally\n     * by `R.maxBy` and `R.minBy`\n     *\n     * @private\n     * @param {Function} compatator a function to compare two items\n     * @category Math\n     * @return {Function}\n     */\n    var _createMaxMinBy = function _createMaxMinBy(comparator) {\n        return function (valueComputer, list) {\n            if (!(list && list.length > 0)) {\n                return;\n            }\n            var idx = 0;\n            var winner = list[idx];\n            var computedWinner = valueComputer(winner);\n            var computedCurrent;\n            while (++idx < list.length) {\n                computedCurrent = valueComputer(list[idx]);\n                if (comparator(computedCurrent, computedWinner)) {\n                    computedWinner = computedCurrent;\n                    winner = list[idx];\n                }\n            }\n            return winner;\n        };\n    };\n\n    /**\n     * Optimized internal two-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry1 = function _curry1(fn) {\n        return function f1(a) {\n            if (arguments.length === 0) {\n                return f1;\n            } else if (a === __) {\n                return f1;\n            } else {\n                return fn(a);\n            }\n        };\n    };\n\n    /**\n     * Optimized internal two-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry2 = function _curry2(fn) {\n        return function f2(a, b) {\n            var n = arguments.length;\n            if (n === 0) {\n                return f2;\n            } else if (n === 1 && a === __) {\n                return f2;\n            } else if (n === 1) {\n                return _curry1(function (b) {\n                    return fn(a, b);\n                });\n            } else if (n === 2 && a === __ && b === __) {\n                return f2;\n            } else if (n === 2 && a === __) {\n                return _curry1(function (a) {\n                    return fn(a, b);\n                });\n            } else if (n === 2 && b === __) {\n                return _curry1(function (b) {\n                    return fn(a, b);\n                });\n            } else {\n                return fn(a, b);\n            }\n        };\n    };\n\n    /**\n     * Optimized internal three-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry3 = function _curry3(fn) {\n        return function f3(a, b, c) {\n            var n = arguments.length;\n            if (n === 0) {\n                return f3;\n            } else if (n === 1 && a === __) {\n                return f3;\n            } else if (n === 1) {\n                return _curry2(function (b, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 2 && a === __ && b === __) {\n                return f3;\n            } else if (n === 2 && a === __) {\n                return _curry2(function (a, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 2 && b === __) {\n                return _curry2(function (b, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 2) {\n                return _curry1(function (c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && a === __ && b === __ && c === __) {\n                return f3;\n            } else if (n === 3 && a === __ && b === __) {\n                return _curry2(function (a, b) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && a === __ && c === __) {\n                return _curry2(function (a, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && b === __ && c === __) {\n                return _curry2(function (b, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && a === __) {\n                return _curry1(function (a) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && b === __) {\n                return _curry1(function (b) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && c === __) {\n                return _curry1(function (c) {\n                    return fn(a, b, c);\n                });\n            } else {\n                return fn(a, b, c);\n            }\n        };\n    };\n\n    var _dissoc = function _dissoc(prop, obj) {\n        var result = {};\n        for (var p in obj) {\n            if (p !== prop) {\n                result[p] = obj[p];\n            }\n        }\n        return result;\n    };\n\n    var _filter = function _filter(fn, list) {\n        var idx = -1, len = list.length, result = [];\n        while (++idx < len) {\n            if (fn(list[idx])) {\n                result[result.length] = list[idx];\n            }\n        }\n        return result;\n    };\n\n    var _filterIndexed = function _filterIndexed(fn, list) {\n        var idx = -1, len = list.length, result = [];\n        while (++idx < len) {\n            if (fn(list[idx], idx, list)) {\n                result[result.length] = list[idx];\n            }\n        }\n        return result;\n    };\n\n    // i can't bear not to return *something*\n    var _forEach = function _forEach(fn, list) {\n        var idx = -1, len = list.length;\n        while (++idx < len) {\n            fn(list[idx]);\n        }\n        // i can't bear not to return *something*\n        return list;\n    };\n\n    /**\n     * @private\n     * @param {Function} fn The strategy for extracting function names from an object\n     * @return {Function} A function that takes an object and returns an array of function names.\n     */\n    var _functionsWith = function _functionsWith(fn) {\n        return function (obj) {\n            return _filter(function (key) {\n                return typeof obj[key] === 'function';\n            }, fn(obj));\n        };\n    };\n\n    var _gt = function _gt(a, b) {\n        return a > b;\n    };\n\n    var _has = function _has(prop, obj) {\n        return Object.prototype.hasOwnProperty.call(obj, prop);\n    };\n\n    var _identity = function _identity(x) {\n        return x;\n    };\n\n    /**\n     * Internal implementation of `indexOf`.\n     * Returns the position of the first occurrence of an item in an array\n     * (by strict equality),\n     * or -1 if the item is not included in the array.\n     *\n     * @private\n     * @param {Array} list The array to search\n     * @param {*} item the item to find in the Array\n     * @param {Number} from (optional) the index to start searching the Array\n     * @return {Number} The index of the found item, or -1.\n     */\n    var _indexOf = function _indexOf(list, item, from) {\n        var idx = 0, len = list.length;\n        if (typeof from == 'number') {\n            idx = from < 0 ? Math.max(0, len + from) : from;\n        }\n        while (idx < len) {\n            if (list[idx] === item) {\n                return idx;\n            }\n            ++idx;\n        }\n        return -1;\n    };\n\n    /**\n     * Tests whether or not an object is an array.\n     *\n     * @private\n     * @param {*} val The object to test.\n     * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n     * @example\n     *\n     *      _isArray([]); //=> true\n     *      _isArray(null); //=> false\n     *      _isArray({}); //=> false\n     */\n    var _isArray = Array.isArray || function _isArray(val) {\n        return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n    };\n\n    /**\n     * Determine if the passed argument is an integer.\n     *\n     * @private\n     * @param {*} n\n     * @category Type\n     * @return {Boolean}\n     */\n    var _isInteger = Number.isInteger || function _isInteger(n) {\n        return n << 0 === n;\n    };\n\n    /**\n     * Tests if a value is a thenable (promise).\n     */\n    var _isThenable = function _isThenable(value) {\n        return value != null && value === Object(value) && typeof value.then === 'function';\n    };\n\n    var _isTransformer = function _isTransformer(obj) {\n        return typeof obj.step === 'function' && typeof obj.result === 'function';\n    };\n\n    /**\n     * Internal implementation of `lastIndexOf`.\n     * Returns the position of the last occurrence of an item in an array\n     * (by strict equality),\n     * or -1 if the item is not included in the array.\n     *\n     * @private\n     * @param {Array} list The array to search\n     * @param {*} item the item to find in the Array\n     * @param {Number} from (optional) the index to start searching the Array\n     * @return {Number} The index of the found item, or -1.\n     */\n    var _lastIndexOf = function _lastIndexOf(list, item, from) {\n        var idx = list.length;\n        if (typeof from == 'number') {\n            idx = from < 0 ? idx + from + 1 : Math.min(idx, from + 1);\n        }\n        while (--idx >= 0) {\n            if (list[idx] === item) {\n                return idx;\n            }\n        }\n        return -1;\n    };\n\n    var _lt = function _lt(a, b) {\n        return a < b;\n    };\n\n    var _map = function _map(fn, list) {\n        var idx = -1, len = list.length, result = [];\n        while (++idx < len) {\n            result[idx] = fn(list[idx]);\n        }\n        return result;\n    };\n\n    var _multiply = function _multiply(a, b) {\n        return a * b;\n    };\n\n    var _nth = function _nth(n, list) {\n        return n < 0 ? list[list.length + n] : list[n];\n    };\n\n    /**\n     * internal path function\n     * Takes an array, paths, indicating the deep set of keys\n     * to find.\n     *\n     * @private\n     * @memberOf R\n     * @category Object\n     * @param {Array} paths An array of strings to map to object properties\n     * @param {Object} obj The object to find the path in\n     * @return {Array} The value at the end of the path or `undefined`.\n     * @example\n     *\n     *      _path(['a', 'b'], {a: {b: 2}}); //=> 2\n     */\n    var _path = function _path(paths, obj) {\n        if (obj == null || paths.length === 0) {\n            return;\n        } else {\n            var val = obj;\n            for (var idx = 0, len = paths.length; idx < len && val != null; idx += 1) {\n                val = val[paths[idx]];\n            }\n            return val;\n        }\n    };\n\n    var _prepend = function _prepend(el, list) {\n        return _concat([el], list);\n    };\n\n    var _reduced = function (x) {\n        return x && x.__transducers_reduced__ ? x : {\n            value: x,\n            __transducers_reduced__: true\n        };\n    };\n\n    /**\n     * internal helper for `where`\n     *\n     * @private\n     * @see R.where\n     */\n    var _satisfiesSpec = function _satisfiesSpec(spec, parsedSpec, testObj) {\n        if (spec === testObj) {\n            return true;\n        }\n        if (testObj == null) {\n            return false;\n        }\n        parsedSpec.fn = parsedSpec.fn || [];\n        parsedSpec.obj = parsedSpec.obj || [];\n        var key, val, idx = -1, fnLen = parsedSpec.fn.length, j = -1, objLen = parsedSpec.obj.length;\n        while (++idx < fnLen) {\n            key = parsedSpec.fn[idx];\n            val = spec[key];\n            if (!(key in testObj)) {\n                return false;\n            }\n            if (!val(testObj[key], testObj)) {\n                return false;\n            }\n        }\n        while (++j < objLen) {\n            key = parsedSpec.obj[j];\n            if (spec[key] !== testObj[key]) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * An optimized, private array `slice` implementation.\n     *\n     * @private\n     * @param {Arguments|Array} args The array or arguments object to consider.\n     * @param {Number} [from=0] The array index to slice from, inclusive.\n     * @param {Number} [to=args.length] The array index to slice to, exclusive.\n     * @return {Array} A new, sliced array.\n     * @example\n     *\n     *      _slice([1, 2, 3, 4, 5], 1, 3); //=> [2, 3]\n     *\n     *      var firstThreeArgs = function(a, b, c, d) {\n     *        return _slice(arguments, 0, 3);\n     *      };\n     *      firstThreeArgs(1, 2, 3, 4); //=> [1, 2, 3]\n     */\n    var _slice = function _slice(args, from, to) {\n        switch (arguments.length) {\n        case 1:\n            return _slice(args, 0, args.length);\n        case 2:\n            return _slice(args, from, args.length);\n        default:\n            var length = Math.max(0, to - from), list = [], idx = -1;\n            while (++idx < length) {\n                list[idx] = args[from + idx];\n            }\n            return list;\n        }\n    };\n\n    var _xall = function () {\n        function XAll(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.all = true;\n        }\n        XAll.prototype.init = function () {\n            return this.xf.init();\n        };\n        XAll.prototype.result = function (result) {\n            if (this.all) {\n                result = this.xf.step(result, true);\n            }\n            return this.xf.result(result);\n        };\n        XAll.prototype.step = function (result, input) {\n            if (!this.f(input)) {\n                this.all = false;\n                result = _reduced(this.xf.step(result, false));\n            }\n            return result;\n        };\n        return _curry2(function _xall(f, xf) {\n            return new XAll(f, xf);\n        });\n    }();\n\n    var _xany = function () {\n        function XAny(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.any = false;\n        }\n        XAny.prototype.init = function () {\n            return this.xf.init();\n        };\n        XAny.prototype.result = function (result) {\n            if (!this.any) {\n                result = this.xf.step(result, false);\n            }\n            return this.xf.result(result);\n        };\n        XAny.prototype.step = function (result, input) {\n            if (this.f(input)) {\n                this.any = true;\n                result = _reduced(this.xf.step(result, true));\n            }\n            return result;\n        };\n        return _curry2(function _xany(f, xf) {\n            return new XAny(f, xf);\n        });\n    }();\n\n    var _xdrop = function () {\n        function XDrop(n, xf) {\n            this.xf = xf;\n            this.n = n;\n        }\n        XDrop.prototype.init = function () {\n            return this.xf.init();\n        };\n        XDrop.prototype.result = function (result) {\n            return this.xf.result(result);\n        };\n        XDrop.prototype.step = function (result, input) {\n            if (this.n > 0) {\n                this.n -= 1;\n                return result;\n            }\n            return this.xf.step(result, input);\n        };\n        return _curry2(function _xdrop(n, xf) {\n            return new XDrop(n, xf);\n        });\n    }();\n\n    var _xdropWhile = function () {\n        function XDropWhile(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XDropWhile.prototype.init = function () {\n            return this.xf.init();\n        };\n        XDropWhile.prototype.result = function (result) {\n            return this.xf.result(result);\n        };\n        XDropWhile.prototype.step = function (result, input) {\n            if (this.f) {\n                if (this.f(input)) {\n                    return result;\n                }\n                this.f = null;\n            }\n            return this.xf.step(result, input);\n        };\n        return _curry2(function _xdropWhile(f, xf) {\n            return new XDropWhile(f, xf);\n        });\n    }();\n\n    var _xfilter = function () {\n        function XFilter(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XFilter.prototype.init = function () {\n            return this.xf.init();\n        };\n        XFilter.prototype.result = function (result) {\n            return this.xf.result(result);\n        };\n        XFilter.prototype.step = function (result, input) {\n            return this.f(input) ? this.xf.step(result, input) : result;\n        };\n        return _curry2(function _xfilter(f, xf) {\n            return new XFilter(f, xf);\n        });\n    }();\n\n    var _xfind = function () {\n        function XFind(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.found = false;\n        }\n        XFind.prototype.init = function () {\n            return this.xf.init();\n        };\n        XFind.prototype.result = function (result) {\n            if (!this.found) {\n                result = this.xf.step(result, void 0);\n            }\n            return this.xf.result(result);\n        };\n        XFind.prototype.step = function (result, input) {\n            if (this.f(input)) {\n                this.found = true;\n                result = _reduced(this.xf.step(result, input));\n            }\n            return result;\n        };\n        return _curry2(function _xfind(f, xf) {\n            return new XFind(f, xf);\n        });\n    }();\n\n    var _xfindIndex = function () {\n        function XFindIndex(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.idx = -1;\n            this.found = false;\n        }\n        XFindIndex.prototype.init = function () {\n            return this.xf.init();\n        };\n        XFindIndex.prototype.result = function (result) {\n            if (!this.found) {\n                result = this.xf.step(result, -1);\n            }\n            return this.xf.result(result);\n        };\n        XFindIndex.prototype.step = function (result, input) {\n            this.idx += 1;\n            if (this.f(input)) {\n                this.found = true;\n                result = _reduced(this.xf.step(result, this.idx));\n            }\n            return result;\n        };\n        return _curry2(function _xfindIndex(f, xf) {\n            return new XFindIndex(f, xf);\n        });\n    }();\n\n    var _xfindLast = function () {\n        function XFindLast(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XFindLast.prototype.init = function () {\n            return this.xf.init();\n        };\n        XFindLast.prototype.result = function (result) {\n            return this.xf.result(this.xf.step(result, this.last));\n        };\n        XFindLast.prototype.step = function (result, input) {\n            if (this.f(input)) {\n                this.last = input;\n            }\n            return result;\n        };\n        return _curry2(function _xfindLast(f, xf) {\n            return new XFindLast(f, xf);\n        });\n    }();\n\n    var _xfindLastIndex = function () {\n        function XFindLastIndex(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.idx = -1;\n            this.lastIdx = -1;\n        }\n        XFindLastIndex.prototype.init = function () {\n            return this.xf.init();\n        };\n        XFindLastIndex.prototype.result = function (result) {\n            return this.xf.result(this.xf.step(result, this.lastIdx));\n        };\n        XFindLastIndex.prototype.step = function (result, input) {\n            this.idx += 1;\n            if (this.f(input)) {\n                this.lastIdx = this.idx;\n            }\n            return result;\n        };\n        return _curry2(function _xfindLastIndex(f, xf) {\n            return new XFindLastIndex(f, xf);\n        });\n    }();\n\n    var _xmap = function () {\n        function XMap(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XMap.prototype.init = function () {\n            return this.xf.init();\n        };\n        XMap.prototype.result = function (result) {\n            return this.xf.result(result);\n        };\n        XMap.prototype.step = function (result, input) {\n            return this.xf.step(result, this.f(input));\n        };\n        return _curry2(function _xmap(f, xf) {\n            return new XMap(f, xf);\n        });\n    }();\n\n    var _xtake = function () {\n        function XTake(n, xf) {\n            this.xf = xf;\n            this.n = n;\n        }\n        XTake.prototype.init = function () {\n            return this.xf.init();\n        };\n        XTake.prototype.result = function (result) {\n            return this.xf.result(result);\n        };\n        XTake.prototype.step = function (result, input) {\n            this.n -= 1;\n            return this.n === 0 ? _reduced(this.xf.step(result, input)) : this.xf.step(result, input);\n        };\n        return _curry2(function _xtake(n, xf) {\n            return new XTake(n, xf);\n        });\n    }();\n\n    var _xtakeWhile = function () {\n        function XTakeWhile(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XTakeWhile.prototype.init = function () {\n            return this.xf.init();\n        };\n        XTakeWhile.prototype.result = function (result) {\n            return this.xf.result(result);\n        };\n        XTakeWhile.prototype.step = function (result, input) {\n            return this.f(input) ? this.xf.step(result, input) : _reduced(result);\n        };\n        return _curry2(function _xtakeWhile(f, xf) {\n            return new XTakeWhile(f, xf);\n        });\n    }();\n\n    var _xwrap = function () {\n        function XWrap(fn) {\n            this.f = fn;\n        }\n        XWrap.prototype.init = function () {\n            throw new Error('init not implemented on XWrap');\n        };\n        XWrap.prototype.result = function (acc) {\n            return acc;\n        };\n        XWrap.prototype.step = function (acc, x) {\n            return this.f(acc, x);\n        };\n        return function _xwrap(fn) {\n            return new XWrap(fn);\n        };\n    }();\n\n    /**\n     * Adds two numbers (or strings). Equivalent to `a + b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @sig String -> String -> String\n     * @param {Number|String} a The first value.\n     * @param {Number|String} b The second value.\n     * @return {Number|String} The result of `a + b`.\n     * @example\n     *\n     *      R.add(2, 3);       //=>  5\n     *      R.add(7)(10);      //=> 17\n     */\n    var add = _curry2(_add);\n\n    /**\n     * Returns a function that always returns the given value. Note that for non-primitives the value\n     * returned is a reference to the original value.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> (* -> a)\n     * @param {*} val The value to wrap in a function\n     * @return {Function} A Function :: * -> val.\n     * @example\n     *\n     *      var t = R.always('Tee');\n     *      t(); //=> 'Tee'\n     */\n    var always = _curry1(function always(val) {\n        return function () {\n            return val;\n        };\n    });\n\n    /**\n     * A function that returns the first argument if it's falsy otherwise the second\n     * argument. Note that this is NOT short-circuited, meaning that if expressions\n     * are passed they are both evaluated.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {*} a any value\n     * @param {*} b any other value\n     * @return {*} the first argument if falsy otherwise the second argument.\n     * @example\n     *\n     *      R.and(false, true); //=> true\n     *      R.and(0, []); //=> []\n     *      R.and(null, ''); => false\n     */\n    var and = _curry2(function and(a, b) {\n        return a && b;\n    });\n\n    /**\n     * Returns a new list, composed of n-tuples of consecutive elements\n     * If `n` is greater than the length of the list, an empty list is returned.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @param {Number} n The size of the tuples to create\n     * @param {Array} list The list to split into `n`-tuples\n     * @return {Array} The new list.\n     * @example\n     *\n     *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n     *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n     *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n     */\n    var aperture = _curry2(function aperture(n, list) {\n        var idx = -1;\n        var limit = list.length - (n - 1);\n        var acc = new Array(limit >= 0 ? limit : 0);\n        while (++idx < limit) {\n            acc[idx] = _slice(list, idx, idx + n);\n        }\n        return acc;\n    });\n\n    /**\n     * Applies function `fn` to the argument list `args`. This is useful for\n     * creating a fixed-arity function from a variadic function. `fn` should\n     * be a bound function if context is significant.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (*... -> a) -> [*] -> a\n     * @param {Function} fn\n     * @param {Array} args\n     * @return {*}\n     * @example\n     *\n     *      var nums = [1, 2, 3, -99, 42, 6, 7];\n     *      R.apply(Math.max, nums); //=> 42\n     */\n    var apply = _curry2(function apply(fn, args) {\n        return fn.apply(this, args);\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts exactly `n`\n     * parameters. Unlike `nAry`, which passes only `n` arguments to the wrapped function,\n     * functions produced by `arity` will pass all provided arguments to the wrapped function.\n     *\n     * @func\n     * @memberOf R\n     * @sig (Number, (* -> *)) -> (* -> *)\n     * @category Function\n     * @param {Number} n The desired arity of the returned function.\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is\n     *         guaranteed to be of arity `n`.\n     * @example\n     *\n     *      var takesTwoArgs = function(a, b) {\n     *        return [a, b];\n     *      };\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.arity(1, takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // All arguments are passed through to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, 2]\n     */\n    var arity = _curry2(function (n, fn) {\n        switch (n) {\n        case 0:\n            return function () {\n                return fn.apply(this, arguments);\n            };\n        case 1:\n            return function (a0) {\n                void a0;\n                return fn.apply(this, arguments);\n            };\n        case 2:\n            return function (a0, a1) {\n                void a1;\n                return fn.apply(this, arguments);\n            };\n        case 3:\n            return function (a0, a1, a2) {\n                void a2;\n                return fn.apply(this, arguments);\n            };\n        case 4:\n            return function (a0, a1, a2, a3) {\n                void a3;\n                return fn.apply(this, arguments);\n            };\n        case 5:\n            return function (a0, a1, a2, a3, a4) {\n                void a4;\n                return fn.apply(this, arguments);\n            };\n        case 6:\n            return function (a0, a1, a2, a3, a4, a5) {\n                void a5;\n                return fn.apply(this, arguments);\n            };\n        case 7:\n            return function (a0, a1, a2, a3, a4, a5, a6) {\n                void a6;\n                return fn.apply(this, arguments);\n            };\n        case 8:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                void a7;\n                return fn.apply(this, arguments);\n            };\n        case 9:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                void a8;\n                return fn.apply(this, arguments);\n            };\n        case 10:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                void a9;\n                return fn.apply(this, arguments);\n            };\n        default:\n            throw new Error('First argument to arity must be a non-negative integer no greater than ten');\n        }\n    });\n\n    /**\n     * Makes a shallow clone of an object, setting or overriding the specified\n     * property with the given value.  Note that this copies and flattens\n     * prototype properties onto the new object as well.  All non-primitive\n     * properties are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig String -> a -> {k: v} -> {k: v}\n     * @param {String} prop the property name to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except for the specified property.\n     * @example\n     *\n     *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n     */\n    var assoc = _curry3(_assoc);\n\n    /**\n     * Creates a function that is bound to a context.\n     * Note: `R.bind` does not provide the additional argument-binding capabilities of\n     * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @category Object\n     * @see R.partial\n     * @sig (* -> *) -> {*} -> (* -> *)\n     * @param {Function} fn The function to bind to context\n     * @param {Object} thisObj The context to bind `fn` to\n     * @return {Function} A function that will execute in the context of `thisObj`.\n     */\n    var bind = _curry2(function bind(fn, thisObj) {\n        return arity(fn.length, function () {\n            return fn.apply(thisObj, arguments);\n        });\n    });\n\n    /**\n     * A function wrapping calls to the two functions in an `&&` operation, returning the result of the first\n     * function if it is false-y and the result of the second function otherwise.  Note that this is\n     * short-circuited, meaning that the second function will not be invoked if the first returns a false-y\n     * value.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0 };\n     *      var f = R.both(gt10, even);\n     *      f(100); //=> true\n     *      f(101); //=> false\n     */\n    var both = _curry2(function both(f, g) {\n        return function _both() {\n            return f.apply(this, arguments) && g.apply(this, arguments);\n        };\n    });\n\n    /**\n     * Makes a comparator function out of a function that reports whether the first element is less than the second.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a, b -> Boolean) -> (a, b -> Number)\n     * @param {Function} pred A predicate function of arity two.\n     * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`.\n     * @example\n     *\n     *      var cmp = R.comparator(function(a, b) {\n     *        return a.age < b.age;\n     *      });\n     *      var people = [\n     *        // ...\n     *      ];\n     *      R.sort(cmp, people);\n     */\n    var comparator = _curry1(function comparator(pred) {\n        return function (a, b) {\n            return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n        };\n    });\n\n    /**\n     * Takes a function `f` and returns a function `g` such that:\n     *\n     *   - applying `g` to zero or more arguments will give __true__ if applying\n     *     the same arguments to `f` gives a logical __false__ value; and\n     *\n     *   - applying `g` to zero or more arguments will give __false__ if applying\n     *     the same arguments to `f` gives a logical __true__ value.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> *) -> (*... -> Boolean)\n     * @param {Function} f\n     * @return {Function}\n     * @example\n     *\n     *      var isEven = function(n) { return n % 2 === 0; };\n     *      var isOdd = R.complement(isEven);\n     *      isOdd(21); //=> true\n     *      isOdd(42); //=> false\n     */\n    var complement = _curry1(_complement);\n\n    /**\n     * Returns a function, `fn`, which encapsulates if/else-if/else logic.\n     * Each argument to `R.cond` is a [predicate, transform] pair. All of\n     * the arguments to `fn` are applied to each of the predicates in turn\n     * until one returns a \"truthy\" value, at which point `fn` returns the\n     * result of applying its arguments to the corresponding transformer.\n     * If none of the predicates matches, `fn` returns undefined.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [(*... -> Boolean),(*... -> *)]... -> (*... -> *)\n     * @param {...Function} functions\n     * @return {Function}\n     * @example\n     *\n     *      var fn = R.cond(\n     *        [R.eq(0),   R.always('water freezes at 0°C')],\n     *        [R.eq(100), R.always('water boils at 100°C')],\n     *        [R.T,       function(temp) { return 'nothing special happens at ' + temp + '°C'; }]\n     *      );\n     *      fn(0); //=> 'water freezes at 0°C'\n     *      fn(50); //=> 'nothing special happens at 50°C'\n     *      fn(100); //=> 'water boils at 100°C'\n     */\n    var cond = function cond() {\n        var pairs = arguments;\n        return function () {\n            var idx = -1;\n            while (++idx < pairs.length) {\n                if (pairs[idx][0].apply(this, arguments)) {\n                    return pairs[idx][1].apply(this, arguments);\n                }\n            }\n        };\n    };\n\n    /**\n     * Returns `true` if the `x` is found in the `list`, using `pred` as an\n     * equality predicate for `x`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a, a -> Boolean) -> a -> [a] -> Boolean\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {*} x The item to find\n     * @param {Array} list The list to iterate over\n     * @return {Boolean} `true` if `x` is in `list`, else `false`.\n     * @example\n     *\n     *     var xs = [{x: 12}, {x: 11}, {x: 10}];\n     *     R.containsWith(function(a, b) { return a.x === b.x; }, {x: 10}, xs); //=> true\n     *     R.containsWith(function(a, b) { return a.x === b.x; }, {x: 1}, xs); //=> false\n     */\n    var containsWith = _curry3(_containsWith);\n\n    /**\n     * Counts the elements of a list according to how many match each value\n     * of a key generated by the supplied function. Returns an object\n     * mapping the keys produced by `fn` to the number of occurrences in\n     * the list. Note that all keys are coerced to strings because of how\n     * JavaScript objects work.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a -> String) -> [a] -> {*}\n     * @param {Function} fn The function used to map values to keys.\n     * @param {Array} list The list to count elements from.\n     * @return {Object} An object mapping keys to number of occurrences in the list.\n     * @example\n     *\n     *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n     *      var letters = R.split('', 'abcABCaaaBBc');\n     *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n     *      R.countBy(R.toLower)(letters);   //=> {'a': 5, 'b': 4, 'c': 3}\n     */\n    var countBy = _curry2(function countBy(fn, list) {\n        var counts = {};\n        var len = list.length;\n        var idx = -1;\n        while (++idx < len) {\n            var key = fn(list[idx]);\n            counts[key] = (_has(key, counts) ? counts[key] : 0) + 1;\n        }\n        return counts;\n    });\n\n    /**\n     * Creates an object containing a single key:value pair.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig String -> a -> {String:a}\n     * @param {String} key\n     * @param {*} val\n     * @return {Object}\n     * @example\n     *\n     *      var matchPhrases = R.compose(\n     *        R.createMapEntry('must'),\n     *        R.map(R.createMapEntry('match_phrase'))\n     *      );\n     *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n     */\n    var createMapEntry = _curry2(_createMapEntry);\n\n    /**\n     * Returns a curried equivalent of the provided function, with the\n     * specified arity. The curried function has two unusual capabilities.\n     * First, its arguments needn't be provided one at a time. If `g` is\n     * `R.curryN(3, f)`, the following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`,\n     * the following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curry\n     * @example\n     *\n     *      var addFourNumbers = function() {\n     *        return R.sum([].slice.call(arguments, 0, 4));\n     *      };\n     *\n     *      var curriedAddFourNumbers = R.curryN(4, addFourNumbers);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n    var curryN = _curry2(function curryN(length, fn) {\n        return arity(length, function () {\n            var n = arguments.length;\n            var shortfall = length - n;\n            var idx = n;\n            while (--idx >= 0) {\n                if (arguments[idx] === __) {\n                    shortfall += 1;\n                }\n            }\n            if (shortfall <= 0) {\n                return fn.apply(this, arguments);\n            } else {\n                var initialArgs = _slice(arguments);\n                return curryN(shortfall, function () {\n                    var currentArgs = _slice(arguments);\n                    var combinedArgs = [];\n                    var idx = -1;\n                    while (++idx < n) {\n                        var val = initialArgs[idx];\n                        combinedArgs[idx] = val === __ ? currentArgs.shift() : val;\n                    }\n                    return fn.apply(this, combinedArgs.concat(currentArgs));\n                });\n            }\n        });\n    });\n\n    /**\n     * Decrements its argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @example\n     *\n     *      R.dec(42); //=> 41\n     */\n    var dec = add(-1);\n\n    /**\n     * Returns the second argument if it is not null or undefined. If it is null\n     * or undefined, the first (default) argument is returned.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig a -> b -> a | b\n     * @param {a} val The default value.\n     * @param {b} val The value to return if it is not null or undefined\n     * @return {*} The the second value or the default value\n     * @example\n     *\n     *      var defaultTo42 = defaultTo(42);\n     *\n     *      defaultTo42(null);  //=> 42\n     *      defaultTo42(undefined);  //=> 42\n     *      defaultTo42('Ramda');  //=> 'Ramda'\n     */\n    var defaultTo = _curry2(function defaultTo(d, v) {\n        return v == null ? d : v;\n    });\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not contained in the second list.\n     * Duplication is determined according to the value returned by applying the supplied predicate to two list\n     * elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a,a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @see R.difference\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @example\n     *\n     *      function cmp(x, y) { return x.a === y.a; }\n     *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n     *      var l2 = [{a: 3}, {a: 4}];\n     *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n     */\n    var differenceWith = _curry3(function differenceWith(pred, first, second) {\n        var out = [];\n        var idx = -1;\n        var firstLen = first.length;\n        var containsPred = containsWith(pred);\n        while (++idx < firstLen) {\n            if (!containsPred(first[idx], second) && !containsPred(first[idx], out)) {\n                out[idx] = first[idx];\n            }\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new object that does not contain a `prop` property.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig String -> {k: v} -> {k: v}\n     * @param {String} prop the name of the property to dissociate\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original but without the specified property\n     * @example\n     *\n     *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n     */\n    var dissoc = _curry2(_dissoc);\n\n    /**\n     * Divides two numbers. Equivalent to `a / b`.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a / b`.\n     * @example\n     *\n     *      R.divide(71, 100); //=> 0.71\n     *\n     *      var half = R.divide(R.__, 2);\n     *      half(42); //=> 21\n     *\n     *      var reciprocal = R.divide(1);\n     *      reciprocal(4);   //=> 0.25\n     */\n    var divide = _curry2(function divide(a, b) {\n        return a / b;\n    });\n\n    /**\n     * A function wrapping calls to the two functions in an `||` operation, returning the result of the first\n     * function if it is truth-y and the result of the second function otherwise.  Note that this is\n     * short-circuited, meaning that the second function will not be invoked if the first returns a truth-y\n     * value.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0 };\n     *      var f = R.either(gt10, even);\n     *      f(101); //=> true\n     *      f(8); //=> true\n     */\n    var either = _curry2(function either(f, g) {\n        return function _either() {\n            return f.apply(this, arguments) || g.apply(this, arguments);\n        };\n    });\n\n    /**\n     * Tests if two items are equal.  Equality is strict here, meaning reference equality for objects and\n     * non-coercing equality for primitives.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig a -> b -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      var o = {};\n     *      R.eq(o, o); //=> true\n     *      R.eq(o, {}); //=> false\n     *      R.eq(1, 1); //=> true\n     *      R.eq(1, '1'); //=> false\n     *      R.eq(0, -0); //=> false\n     *      R.eq(NaN, NaN); //=> true\n     */\n    var eq = _curry2(function eq(a, b) {\n        if (a === 0) {\n            return 1 / a === 1 / b;\n        } else {\n            return a === b || a !== a && b !== b;\n        }\n    });\n\n    /**\n     * Reports whether two objects have the same value for the specified property.  Useful as a curried predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig k -> {k: v} -> {k: v} -> Boolean\n     * @param {String} prop The name of the property to compare\n     * @param {Object} obj1\n     * @param {Object} obj2\n     * @return {Boolean}\n     *\n     * @example\n     *\n     *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n     *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n     *      R.eqProps('a', o1, o2); //=> false\n     *      R.eqProps('c', o1, o2); //=> true\n     */\n    var eqProps = _curry3(function eqProps(prop, obj1, obj2) {\n        return obj1[prop] === obj2[prop];\n    });\n\n    /**\n     * Like `filter`, but passes additional parameters to the predicate function. The predicate\n     * function is passed three arguments: *(value, index, list)*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a, i, [a] -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} The new filtered array.\n     * @example\n     *\n     *      var lastTwo = function(val, idx, list) {\n     *        return list.length - idx <= 2;\n     *      };\n     *      R.filterIndexed(lastTwo, [8, 6, 7, 5, 3, 0, 9]); //=> [0, 9]\n     */\n    var filterIndexed = _curry2(_filterIndexed);\n\n    /**\n     * Iterate over an input `list`, calling a provided function `fn` for each element in the\n     * list.\n     *\n     * `fn` receives one argument: *(value)*.\n     *\n     * Note: `R.forEach` does not skip deleted or unassigned indices (sparse arrays), unlike\n     * the native `Array.prototype.forEach` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n     *\n     * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns the original\n     * array. In some libraries this function is named `each`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> *) -> [a] -> [a]\n     * @param {Function} fn The function to invoke. Receives one argument, `value`.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} The original list.\n     * @example\n     *\n     *      var printXPlusFive = function(x) { console.log(x + 5); };\n     *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n     *      //-> 6\n     *      //-> 7\n     *      //-> 8\n     */\n    var forEach = _curry2(_forEach);\n\n    /**\n     * Like `forEach`, but but passes additional parameters to the predicate function.\n     *\n     * `fn` receives three arguments: *(value, index, list)*.\n     *\n     * Note: `R.forEachIndexed` does not skip deleted or unassigned indices (sparse arrays),\n     * unlike the native `Array.prototype.forEach` method. For more details on this behavior,\n     * see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n     *\n     * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns the original\n     * array. In some libraries this function is named `each`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a, i, [a] -> ) -> [a] -> [a]\n     * @param {Function} fn The function to invoke. Receives three arguments:\n     *        (`value`, `index`, `list`).\n     * @param {Array} list The list to iterate over.\n     * @return {Array} The original list.\n     * @example\n     *\n     *      // Note that having access to the original `list` allows for\n     *      // mutation. While you *can* do this, it's very un-functional behavior:\n     *      var plusFive = function(num, idx, list) { list[idx] = num + 5 };\n     *      R.forEachIndexed(plusFive, [1, 2, 3]); //=> [6, 7, 8]\n     */\n    // i can't bear not to return *something*\n    var forEachIndexed = _curry2(function forEachIndexed(fn, list) {\n        var idx = -1, len = list.length;\n        while (++idx < len) {\n            fn(list[idx], idx, list);\n        }\n        // i can't bear not to return *something*\n        return list;\n    });\n\n    /**\n     * Creates a new object out of a list key-value pairs.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [[k,v]] -> {k: v}\n     * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n     * @return {Object} The object made by pairing up `keys` and `values`.\n     * @example\n     *\n     *      R.fromPairs([['a', 1], ['b', 2],  ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n     */\n    var fromPairs = _curry1(function fromPairs(pairs) {\n        var idx = -1, len = pairs.length, out = {};\n        while (++idx < len) {\n            if (_isArray(pairs[idx]) && pairs[idx].length) {\n                out[pairs[idx][0]] = pairs[idx][1];\n            }\n        }\n        return out;\n    });\n\n    /**\n     * Returns true if the first parameter is greater than the second.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean} a > b\n     * @example\n     *\n     *      R.gt(2, 6); //=> false\n     *      R.gt(2, 0); //=> true\n     *      R.gt(2, 2); //=> false\n     *      R.gt(R.__, 2)(10); //=> true\n     *      R.gt(2)(10); //=> false\n     */\n    var gt = _curry2(_gt);\n\n    /**\n     * Returns true if the first parameter is greater than or equal to the second.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean} a >= b\n     * @example\n     *\n     *      R.gte(2, 6); //=> false\n     *      R.gte(2, 0); //=> true\n     *      R.gte(2, 2); //=> true\n     *      R.gte(R.__, 6)(2); //=> false\n     *      R.gte(2)(0); //=> true\n     */\n    var gte = _curry2(function gte(a, b) {\n        return a >= b;\n    });\n\n    /**\n     * Returns whether or not an object has an own property with\n     * the specified name\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      var hasName = R.has('name');\n     *      hasName({name: 'alice'});   //=> true\n     *      hasName({name: 'bob'});     //=> true\n     *      hasName({});                //=> false\n     *\n     *      var point = {x: 0, y: 0};\n     *      var pointHas = R.has(R.__, point);\n     *      pointHas('x');  //=> true\n     *      pointHas('y');  //=> true\n     *      pointHas('z');  //=> false\n     */\n    var has = _curry2(_has);\n\n    /**\n     * Returns whether or not an object or its prototype chain has\n     * a property with the specified name\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      function Rectangle(width, height) {\n     *        this.width = width;\n     *        this.height = height;\n     *      }\n     *      Rectangle.prototype.area = function() {\n     *        return this.width * this.height;\n     *      };\n     *\n     *      var square = new Rectangle(2, 2);\n     *      R.hasIn('width', square);  //=> true\n     *      R.hasIn('area', square);  //=> true\n     */\n    var hasIn = _curry2(function (prop, obj) {\n        return prop in obj;\n    });\n\n    /**\n     * A function that does nothing but return the parameter supplied to it. Good as a default\n     * or placeholder function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> a\n     * @param {*} x The value to return.\n     * @return {*} The input value, `x`.\n     * @example\n     *\n     *      R.identity(1); //=> 1\n     *\n     *      var obj = {};\n     *      R.identity(obj) === obj; //=> true\n     */\n    var identity = _curry1(_identity);\n\n    /**\n     * Creates a function that will process either the `onTrue` or the `onFalse` function depending\n     * upon the result of the `condition` predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n     * @param {Function} condition A predicate function\n     * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n     * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n     * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n     *                    function depending upon the result of the `condition` predicate.\n     * @example\n     *\n     *      // Flatten all arrays in the list but leave other values alone.\n     *      var flattenArrays = R.map(R.ifElse(Array.isArray, R.flatten, R.identity));\n     *\n     *      flattenArrays([[0], [[10], [8]], 1234, {}]); //=> [[0], [10, 8], 1234, {}]\n     *      flattenArrays([[[10], 123], [8, [10]], \"hello\"]); //=> [[10, 123], [8, 10], \"hello\"]\n     */\n    var ifElse = _curry3(function ifElse(condition, onTrue, onFalse) {\n        return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n            return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n        });\n    });\n\n    /**\n     * Increments its argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @example\n     *\n     *      R.inc(42); //=> 43\n     */\n    var inc = add(1);\n\n    /**\n     * Returns the position of the first occurrence of an item in an array\n     * (by strict equality),\n     * or -1 if the item is not included in the array.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} list The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     *\n     * @example\n     *\n     *      R.indexOf(3, [1,2,3,4]); //=> 2\n     *      R.indexOf(10, [1,2,3,4]); //=> -1\n     */\n    var indexOf = _curry2(function indexOf(target, list) {\n        return _indexOf(list, target);\n    });\n\n    /**\n     * Inserts the sub-list into the list, at index `index`.  _Note  that this\n     * is not destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a] -> [a]\n     * @param {Number} index The position to insert the sub-list\n     * @param {Array} elts The sub-list to insert into the Array\n     * @param {Array} list The list to insert the sub-list into\n     * @return {Array} A new Array with `elts` inserted starting at `index`.\n     * @example\n     *\n     *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n     */\n    var insertAll = _curry3(function insertAll(idx, elts, list) {\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\n        return _concat(_concat(_slice(list, 0, idx), elts), _slice(list, idx));\n    });\n\n    /**\n     * See if an object (`val`) is an instance of the supplied constructor.\n     * This function will check up the inheritance chain, if any.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig (* -> {*}) -> a -> Boolean\n     * @param {Object} ctor A constructor\n     * @param {*} val The value to test\n     * @return {Boolean}\n     * @example\n     *\n     *      R.is(Object, {}); //=> true\n     *      R.is(Number, 1); //=> true\n     *      R.is(Object, 1); //=> false\n     *      R.is(String, 's'); //=> true\n     *      R.is(String, new String('')); //=> true\n     *      R.is(Object, new String('')); //=> true\n     *      R.is(Object, 's'); //=> false\n     *      R.is(Number, {}); //=> false\n     */\n    var is = _curry2(function is(Ctor, val) {\n        return val != null && val.constructor === Ctor || val instanceof Ctor;\n    });\n\n    /**\n     * Tests whether or not an object is similar to an array.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @category List\n     * @param {*} x The object to test.\n     * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n     * @example\n     *\n     *      R.isArrayLike([]); //=> true\n     *      R.isArrayLike(true); //=> false\n     *      R.isArrayLike({}); //=> false\n     *      R.isArrayLike({length: 10}); //=> false\n     *      R.isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n     */\n    var isArrayLike = _curry1(function isArrayLike(x) {\n        if (_isArray(x)) {\n            return true;\n        }\n        if (!x) {\n            return false;\n        }\n        if (typeof x !== 'object') {\n            return false;\n        }\n        if (x instanceof String) {\n            return false;\n        }\n        if (x.nodeType === 1) {\n            return !!x.length;\n        }\n        if (x.length === 0) {\n            return true;\n        }\n        if (x.length > 0) {\n            return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n        }\n        return false;\n    });\n\n    /**\n     * Reports whether the list has zero elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [a] -> Boolean\n     * @param {Array} list\n     * @return {Boolean}\n     * @example\n     *\n     *      R.isEmpty([1, 2, 3]); //=> false\n     *      R.isEmpty([]); //=> true\n     *      R.isEmpty(''); //=> true\n     *      R.isEmpty(null); //=> false\n     */\n    var isEmpty = _curry1(function isEmpty(list) {\n        return Object(list).length === 0;\n    });\n\n    /**\n     * Returns `true` if the input value is `NaN`.\n     *\n     * Equivalent to ES6's [`Number.isNaN`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN).\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig * -> Boolean\n     * @param {*} x\n     * @return {Boolean}\n     * @example\n     *\n     *     R.isNaN(NaN);        //=> true\n     *     R.isNaN(undefined);  //=> false\n     *     R.isNaN({});         //=> false\n     */\n    var isNaN = _curry1(function isNaN(x) {\n        return typeof x === 'number' && x !== x;\n    });\n\n    /**\n     * Checks if the input value is `null` or `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig * -> Boolean\n     * @param {*} x The value to test.\n     * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n     * @example\n     *\n     *     R.isNil(null); //=> true\n     *     R.isNil(undefined); //=> true\n     *     R.isNil(0); //=> false\n     *     R.isNil([]); //=> false\n     */\n    var isNil = _curry1(function isNil(x) {\n        return x == null;\n    });\n\n    /**\n     * Returns `true` if all elements are unique, otherwise `false`.\n     * Uniqueness is determined using strict equality (`===`).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> Boolean\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if all elements are unique, else `false`.\n     * @example\n     *\n     *      R.isSet(['1', 1]); //=> true\n     *      R.isSet([1, 1]);   //=> false\n     *      R.isSet([{}, {}]); //=> true\n     */\n    var isSet = _curry1(function isSet(list) {\n        var len = list.length;\n        var idx = -1;\n        while (++idx < len) {\n            if (_indexOf(list, list[idx], idx + 1) >= 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n\n    /**\n     * Returns a list containing the names of all the\n     * properties of the supplied object, including prototype properties.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.keysIn(f); //=> ['x', 'y']\n     */\n    var keysIn = _curry1(function keysIn(obj) {\n        var prop, ks = [];\n        for (prop in obj) {\n            ks[ks.length] = prop;\n        }\n        return ks;\n    });\n\n    /**\n     * Returns the position of the last occurrence of an item (by strict equality) in\n     * an array, or -1 if the item is not included in the array.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} list The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     *\n     * @example\n     *\n     *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n     *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n     */\n    var lastIndexOf = _curry2(function lastIndexOf(target, list) {\n        return _lastIndexOf(list, target);\n    });\n\n    /**\n     * Returns the number of elements in the array by returning `list.length`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> Number\n     * @param {Array} list The array to inspect.\n     * @return {Number} The length of the array.\n     * @example\n     *\n     *      R.length([]); //=> 0\n     *      R.length([1, 2, 3]); //=> 3\n     */\n    var length = _curry1(function length(list) {\n        return list != null && is(Number, list.length) ? list.length : NaN;\n    });\n\n    /**\n     * Creates a lens. Supply a function to `get` values from inside an object, and a `set`\n     * function to change values on an object. (n.b.: This can, and should, be done without\n     * mutating the original object!) The lens is a function wrapped around the input `get`\n     * function, with the `set` function attached as a property on the wrapper. A `map`\n     * function is also attached to the returned function that takes a function to operate\n     * on the specified (`get`) property, which is then `set` before returning. The attached\n     * `set` and `map` functions are curried.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig (k -> v) -> (v -> a -> *) -> (a -> b)\n     * @param {Function} get A function that gets a value by property name\n     * @param {Function} set A function that sets a value by property name\n     * @return {Function} the returned function has `set` and `map` properties that are\n     *         also curried functions.\n     * @example\n     *\n     *     var headLens = R.lens(\n     *       function get(arr) { return arr[0]; },\n     *       function set(val, arr) { return [val].concat(arr.slice(1)); }\n     *     );\n     *     headLens([10, 20, 30, 40]); //=> 10\n     *     headLens.set('mu', [10, 20, 30, 40]); //=> ['mu', 20, 30, 40]\n     *     headLens.map(function(x) { return x + 1; }, [10, 20, 30, 40]); //=> [11, 20, 30, 40]\n     *\n     *     var phraseLens = R.lens(\n     *       function get(obj) { return obj.phrase; },\n     *       function set(val, obj) {\n     *         var out = R.clone(obj);\n     *         out.phrase = val;\n     *         return out;\n     *       }\n     *     );\n     *     var obj1 = { phrase: 'Absolute filth . . . and I LOVED it!'};\n     *     var obj2 = { phrase: \"What's all this, then?\"};\n     *     phraseLens(obj1); // => 'Absolute filth . . . and I LOVED it!'\n     *     phraseLens(obj2); // => \"What's all this, then?\"\n     *     phraseLens.set('Ooh Betty', obj1); //=> { phrase: 'Ooh Betty'}\n     *     phraseLens.map(R.toUpper, obj2); //=> { phrase: \"WHAT'S ALL THIS, THEN?\"}\n     */\n    var lens = _curry2(function lens(get, set) {\n        var lns = function (a) {\n            return get(a);\n        };\n        lns.set = _curry2(set);\n        lns.map = _curry2(function (fn, a) {\n            return set(fn(get(a)), a);\n        });\n        return lns;\n    });\n\n    /**\n     * Returns a lens associated with the provided object.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {} -> ({} -> v) -> (v -> a -> *) -> (a -> b)\n     * @see R.lens\n     * @param {Function} get A function that gets a value by property name\n     * @param {Function} set A function that sets a value by property name\n     * @return {Function} the returned function has `set` and `map` properties that are\n     *         also curried functions.\n     * @example\n     *\n     *     var xo = {x: 1};\n     *     var xoLens = R.lensOn(xo,\n     *                           function get(o) { return o.x; },\n     *                           function set(v) { return {x: v}; });\n     *     xoLens(); //=> 1\n     *     xoLens.set(1000); //=> {x: 1000}\n     *     xoLens.map(R.add(1)); //=> {x: 2}\n     */\n    var lensOn = _curry3(function lensOn(get, set, obj) {\n        var lns = function () {\n            return get(obj);\n        };\n        lns.set = set;\n        lns.map = function (fn) {\n            return set(fn(get(obj)));\n        };\n        return lns;\n    });\n\n    /**\n     * Returns true if the first parameter is less than the second.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean} a < b\n     * @example\n     *\n     *      R.lt(2, 6); //=> true\n     *      R.lt(2, 0); //=> false\n     *      R.lt(2, 2); //=> false\n     *      R.lt(5)(10); //=> true\n     *      R.lt(R.__, 5)(10); //=> false // right-sectioned currying\n     */\n    var lt = _curry2(_lt);\n\n    /**\n     * Returns true if the first parameter is less than or equal to the second.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean} a <= b\n     * @example\n     *\n     *      R.lte(2, 6); //=> true\n     *      R.lte(2, 0); //=> false\n     *      R.lte(2, 2); //=> true\n     *      R.lte(R.__, 2)(1); //=> true\n     *      R.lte(2)(10); //=> true\n     */\n    var lte = _curry2(function lte(a, b) {\n        return a <= b;\n    });\n\n    /**\n     * The mapAccum function behaves like a combination of map and reduce; it applies a\n     * function to each element of a list, passing an accumulating parameter from left to\n     * right, and returning a final value of this accumulator together with the new list.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should return\n     * a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var append = function(a, b) {\n     *        return [a + b, a + b];\n     *      }\n     *\n     *      R.mapAccum(append, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n     */\n    var mapAccum = _curry3(function mapAccum(fn, acc, list) {\n        var idx = -1, len = list.length, result = [], tuple = [acc];\n        while (++idx < len) {\n            tuple = fn(tuple[0], list[idx]);\n            result[idx] = tuple[1];\n        }\n        return [\n            tuple[0],\n            result\n        ];\n    });\n\n    /**\n     * The mapAccumRight function behaves like a combination of map and reduce; it applies a\n     * function to each element of a list, passing an accumulating parameter from right\n     * to left, and returning a final value of this accumulator together with the new list.\n     *\n     * Similar to `mapAccum`, except moves through the input list from the right to the\n     * left.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should return\n     * a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var append = function(a, b) {\n     *        return [a + b, a + b];\n     *      }\n     *\n     *      R.mapAccumRight(append, 0, digits); //=> ['04321', ['04321', '0432', '043', '04']]\n     */\n    var mapAccumRight = _curry3(function mapAccumRight(fn, acc, list) {\n        var idx = list.length, result = [], tuple = [acc];\n        while (--idx >= 0) {\n            tuple = fn(tuple[0], list[idx]);\n            result[idx] = tuple[1];\n        }\n        return [\n            tuple[0],\n            result\n        ];\n    });\n\n    /**\n     * Like `map`, but but passes additional parameters to the mapping function.\n     * `fn` receives three arguments: *(value, index, list)*.\n     *\n     * Note: `R.mapIndexed` does not skip deleted or unassigned indices (sparse arrays), unlike\n     * the native `Array.prototype.map` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map#Description\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,i,[b] -> b) -> [a] -> [b]\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {Array} list The list to be iterated over.\n     * @return {Array} The new list.\n     * @example\n     *\n     *      var squareEnds = function(elt, idx, list) {\n     *        if (idx === 0 || idx === list.length - 1) {\n     *          return elt * elt;\n     *        }\n     *        return elt;\n     *      };\n     *\n     *      R.mapIndexed(squareEnds, [8, 5, 3, 0, 9]); //=> [64, 5, 3, 0, 81]\n     */\n    var mapIndexed = _curry2(function mapIndexed(fn, list) {\n        var idx = -1, len = list.length, result = [];\n        while (++idx < len) {\n            result[idx] = fn(list[idx], idx, list);\n        }\n        return result;\n    });\n\n    /**\n     * mathMod behaves like the modulo operator should mathematically, unlike the `%`\n     * operator (and by extension, R.modulo). So while \"-17 % 5\" is -2,\n     * mathMod(-17, 5) is 3. mathMod requires Integer arguments, and returns NaN\n     * when the modulus is zero or negative.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} m The dividend.\n     * @param {Number} p the modulus.\n     * @return {Number} The result of `b mod a`.\n     * @see R.moduloBy\n     * @example\n     *\n     *      R.mathMod(-17, 5);  //=> 3\n     *      R.mathMod(17, 5);   //=> 2\n     *      R.mathMod(17, -5);  //=> NaN\n     *      R.mathMod(17, 0);   //=> NaN\n     *      R.mathMod(17.2, 5); //=> NaN\n     *      R.mathMod(17, 5.3); //=> NaN\n     *\n     *      var clock = R.mathMod(R.__, 12);\n     *      clock(15); //=> 3\n     *      clock(24); //=> 0\n     *\n     *      var seventeenMod = R.mathMod(17);\n     *      seventeenMod(3);  //=> 2\n     *      seventeenMod(4);  //=> 1\n     *      seventeenMod(10); //=> 7\n     */\n    var mathMod = _curry2(function mathMod(m, p) {\n        if (!_isInteger(m)) {\n            return NaN;\n        }\n        if (!_isInteger(p) || p < 1) {\n            return NaN;\n        }\n        return (m % p + p) % p;\n    });\n\n    /**\n     * Determines the largest of a list of items as determined by pairwise comparisons from the supplied comparator\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig (a -> Number) -> [a] -> a\n     * @param {Function} keyFn A comparator function for elements in the list\n     * @param {Array} list A list of comparable elements\n     * @return {*} The greatest element in the list. `undefined` if the list is empty.\n     * @see R.max\n     * @example\n     *\n     *      function cmp(obj) { return obj.x; }\n     *      var a = {x: 1}, b = {x: 2}, c = {x: 3};\n     *      R.maxBy(cmp, [a, b, c]); //=> {x: 3}\n     */\n    var maxBy = _curry2(_createMaxMinBy(_gt));\n\n    /**\n     * Creates a new function that, when invoked, caches the result of calling `fn` for a given\n     * argument set and returns the result. Subsequent calls to the memoized `fn` with the same\n     * argument set will not result in an additional call to `fn`; instead, the cached result\n     * for that set of arguments will be returned.\n     *\n     * Note that this version of `memoize` should not be applied to functions which\n     * take objects as arguments.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (*... -> a) -> (*... -> a)\n     * @param {Function} fn The function to memoize.\n     * @return {Function} Memoized version of `fn`.\n     * @example\n     *\n     *      var count = 0;\n     *      var factorial = R.memoize(function(n) {\n     *        count += 1;\n     *        return R.product(R.range(1, n + 1));\n     *      });\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      count; //=> 1\n     */\n    // Returns a string representation of the given value suitable for use as\n    // a property name.\n    //\n    // > repr(42)\n    // '42::[object Number]'\n    // Serializes an array-like object. The approach is similar to that taken\n    // by [CANON](https://github.com/davidchambers/CANON), though it does not\n    // differentiate between objects at all (!) and, since it is not applied\n    // recursively, does not distinguish between [[42]] and [['42']].\n    //\n    // > serialize(['foo', 42])\n    // '2:{foo::[object String],42::[object Number]}'\n    var memoize = function () {\n        // Returns a string representation of the given value suitable for use as\n        // a property name.\n        //\n        // > repr(42)\n        // '42::[object Number]'\n        var repr = function (x) {\n            return x + '::' + Object.prototype.toString.call(x);\n        };\n        // Serializes an array-like object. The approach is similar to that taken\n        // by [CANON](https://github.com/davidchambers/CANON), though it does not\n        // differentiate between objects at all (!) and, since it is not applied\n        // recursively, does not distinguish between [[42]] and [['42']].\n        //\n        // > serialize(['foo', 42])\n        // '2:{foo::[object String],42::[object Number]}'\n        var serialize = function (args) {\n            return args.length + ':{' + _map(repr, args).join(',') + '}';\n        };\n        return _curry1(function memoize(fn) {\n            var cache = {};\n            return function () {\n                var key = serialize(arguments);\n                if (!_has(key, cache)) {\n                    cache[key] = fn.apply(this, arguments);\n                }\n                return cache[key];\n            };\n        });\n    }();\n\n    /**\n     * Determines the smallest of a list of items as determined by pairwise comparisons from the supplied comparator\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig (a -> Number) -> [a] -> a\n     * @param {Function} keyFn A comparator function for elements in the list\n     * @param {Array} list A list of comparable elements\n     * @see R.min\n     * @return {*} The greatest element in the list. `undefined` if the list is empty.\n     * @example\n     *\n     *      function cmp(obj) { return obj.x; }\n     *      var a = {x: 1}, b = {x: 2}, c = {x: 3};\n     *      R.minBy(cmp, [a, b, c]); //=> {x: 1}\n     */\n    var minBy = _curry2(_createMaxMinBy(_lt));\n\n    /**\n     * Divides the second parameter by the first and returns the remainder.\n     * Note that this functions preserves the JavaScript-style behavior for\n     * modulo. For mathematical modulo see `mathMod`\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The value to the divide.\n     * @param {Number} b The pseudo-modulus\n     * @return {Number} The result of `b % a`.\n     * @see R.mathMod\n     * @example\n     *\n     *      R.modulo(17, 3); //=> 2\n     *      // JS behavior:\n     *      R.modulo(-17, 3); //=> -2\n     *      R.modulo(17, -3); //=> 2\n     *\n     *      var isOdd = R.modulo(R.__, 2);\n     *      isOdd(42); //=> 0\n     *      isOdd(21); //=> 1\n     */\n    var modulo = _curry2(function modulo(a, b) {\n        return a % b;\n    });\n\n    /**\n     * Multiplies two numbers. Equivalent to `a * b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a * b`.\n     * @example\n     *\n     *      var double = R.multiply(2);\n     *      var triple = R.multiply(3);\n     *      double(3);       //=>  6\n     *      triple(4);       //=> 12\n     *      R.multiply(2, 5);  //=> 10\n     */\n    var multiply = _curry2(_multiply);\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts exactly `n`\n     * parameters. Any extraneous parameters will not be passed to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} n The desired arity of the new function.\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity `n`.\n     * @example\n     *\n     *      var takesTwoArgs = function(a, b) {\n     *        return [a, b];\n     *      };\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.nAry(1, takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only `n` arguments are passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n    var nAry = _curry2(function (n, fn) {\n        switch (n) {\n        case 0:\n            return function () {\n                return fn.call(this);\n            };\n        case 1:\n            return function (a0) {\n                return fn.call(this, a0);\n            };\n        case 2:\n            return function (a0, a1) {\n                return fn.call(this, a0, a1);\n            };\n        case 3:\n            return function (a0, a1, a2) {\n                return fn.call(this, a0, a1, a2);\n            };\n        case 4:\n            return function (a0, a1, a2, a3) {\n                return fn.call(this, a0, a1, a2, a3);\n            };\n        case 5:\n            return function (a0, a1, a2, a3, a4) {\n                return fn.call(this, a0, a1, a2, a3, a4);\n            };\n        case 6:\n            return function (a0, a1, a2, a3, a4, a5) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5);\n            };\n        case 7:\n            return function (a0, a1, a2, a3, a4, a5, a6) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n            };\n        case 8:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n            };\n        case 9:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n            };\n        case 10:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n            };\n        default:\n            throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n        }\n    });\n\n    /**\n     * Negates its argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @example\n     *\n     *      R.negate(42); //=> -42\n     */\n    var negate = _curry1(function negate(n) {\n        return -n;\n    });\n\n    /**\n     * A function that returns the `!` of its argument. It will return `true` when\n     * passed false-y value, and `false` when passed a truth-y one.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig * -> Boolean\n     * @param {*} a any value\n     * @return {Boolean} the logical inverse of passed argument.\n     * @example\n     *\n     *      R.and(false, true); //=> true\n     *      R.and(0, []); //=> []\n     *      R.and(null, ''); => false\n     */\n    var not = _curry1(function not(a) {\n        return !a;\n    });\n\n    /**\n     * Returns the nth element in a list.\n     * If n is negative the element at index length + n is returned.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> a\n     * @param {Number} idx\n     * @param {Array} list\n     * @return {*} The nth element of the list.\n     * @example\n     *\n     *      var list = ['foo', 'bar', 'baz', 'quux'];\n     *      R.nth(1, list); //=> 'bar'\n     *      R.nth(-1, list); //=> 'quux'\n     *      R.nth(-99, list); //=> undefined\n     */\n    var nth = _curry2(_nth);\n\n    /**\n     * Returns a function which returns its nth argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> *... -> *\n     * @param {Number} n\n     * @return {Function}\n     * @example\n     *\n     *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n     *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n     */\n    var nthArg = _curry1(function nthArg(n) {\n        return function () {\n            return _nth(n, arguments);\n        };\n    });\n\n    /**\n     * Returns the nth character of the given string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {String} str\n     * @return {String}\n     * @example\n     *\n     *      R.nthChar(2, 'Ramda'); //=> 'm'\n     *      R.nthChar(-2, 'Ramda'); //=> 'd'\n     */\n    var nthChar = _curry2(function nthChar(n, str) {\n        return str.charAt(n < 0 ? str.length + n : n);\n    });\n\n    /**\n     * Returns the character code of the nth character of the given string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig Number -> String -> Number\n     * @param {Number} n\n     * @param {String} str\n     * @return {Number}\n     * @example\n     *\n     *      R.nthCharCode(2, 'Ramda'); //=> 'm'.charCodeAt(0)\n     *      R.nthCharCode(-2, 'Ramda'); //=> 'd'.charCodeAt(0)\n     */\n    var nthCharCode = _curry2(function nthCharCode(n, str) {\n        return str.charCodeAt(n < 0 ? str.length + n : n);\n    });\n\n    /**\n     * Returns a singleton array containing the value provided.\n     *\n     * Note this `of` is different from the ES6 `of`; See\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> [a]\n     * @param {*} x any value\n     * @return {Array} An array wrapping `x`.\n     * @example\n     *\n     *      R.of(null); //=> [null]\n     *      R.of([42]); //=> [[42]]\n     */\n    var of = _curry1(function of(x) {\n        return [x];\n    });\n\n    /**\n     * Returns a partial copy of an object omitting the keys specified.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> {String: *} -> {String: *}\n     * @param {Array} names an array of String property names to omit from the new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with properties from `names` not on it.\n     * @example\n     *\n     *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n     */\n    var omit = _curry2(function omit(names, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (_indexOf(names, prop) < 0) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Accepts a function `fn` and returns a function that guards invocation of `fn` such that\n     * `fn` can only ever be called once, no matter how many times the returned function is\n     * invoked.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a... -> b) -> (a... -> b)\n     * @param {Function} fn The function to wrap in a call-only-once wrapper.\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var addOneOnce = R.once(function(x){ return x + 1; });\n     *      addOneOnce(10); //=> 11\n     *      addOneOnce(addOneOnce(50)); //=> 11\n     */\n    var once = _curry1(function once(fn) {\n        var called = false, result;\n        return function () {\n            if (called) {\n                return result;\n            }\n            called = true;\n            result = fn.apply(this, arguments);\n            return result;\n        };\n    });\n\n    /**\n     * A function that returns the first truthy of two arguments otherwise the\n     * last argument. Note that this is NOT short-circuited, meaning that if\n     * expressions are passed they are both evaluated.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {*} a any value\n     * @param {*} b any other value\n     * @return {*} the first truthy argument, otherwise the last argument.\n     * @example\n     *\n     *      R.or(false, true); //=> true\n     *      R.or(0, []); //=> []\n     *      R.or(null, ''); => ''\n     */\n    var or = _curry2(function or(a, b) {\n        return a || b;\n    });\n\n    /**\n     * Retrieve the value at a given path.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> {*} -> *\n     * @param {Array} path The path to use.\n     * @return {*} The data at `path`.\n     * @example\n     *\n     *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n     */\n    var path = _curry2(_path);\n\n    /**\n     * Determines whether a nested path on an object has a specific value\n     * according to strict equality ('==='). Most likely used to filter a list:\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [String] -> * -> {String: *} -> Boolean\n     * @param {Array} path The path of the nested property to use\n     * @param {*} val The value to compare the nested property with\n     * @param {Object} obj The object to check the nested property in\n     * @return {Boolean} `true` if the value equals the nested object property,\n     *         `false` otherwise.\n     * @example\n     *\n     *     var user1 = { address: { zipCode: 90210 } };\n     *     var user2 = { address: { zipCode: 55555 } };\n     *     var user3 = { name: 'Bob' };\n     *     var users = [ user1, user2, user3 ];\n     *     var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n     *     R.filter(isFamous, users); //=> [ user1 ]\n     */\n    var pathEq = _curry3(function pathEq(path, val, obj) {\n        return _path(path, obj) === val;\n    });\n\n    /**\n     * Returns a partial copy of an object containing only the keys specified.  If the key does not exist, the\n     * property is ignored.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> {String: *} -> {String: *}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @example\n     *\n     *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n     */\n    var pick = _curry2(function pick(names, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (_indexOf(names, prop) >= 0) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Similar to `pick` except that this one includes a `key: undefined` pair for properties that don't exist.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n     */\n    var pickAll = _curry2(function pickAll(names, obj) {\n        var result = {};\n        var idx = -1;\n        var len = names.length;\n        while (++idx < len) {\n            var name = names[idx];\n            result[name] = obj[name];\n        }\n        return result;\n    });\n\n    /**\n     * Returns a partial copy of an object containing only the keys that\n     * satisfy the supplied predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig (v, k -> Boolean) -> {k: v} -> {k: v}\n     * @param {Function} pred A predicate to determine whether or not a key\n     *        should be included on the output object.\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties that satisfy `pred`\n     *         on it.\n     * @see R.pick\n     * @example\n     *\n     *      var isUpperCase = function(val, key) { return key.toUpperCase() === key; }\n     *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n     */\n    var pickBy = _curry2(function pickBy(test, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (test(obj[prop], prop, obj)) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list with the given element at the front, followed by the contents of the\n     * list.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The item to add to the head of the output list.\n     * @param {Array} list The array to add to the tail of the output list.\n     * @return {Array} A new array.\n     * @example\n     *\n     *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n     */\n    var prepend = _curry2(_prepend);\n\n    /**\n     * Returns a function that when supplied an object returns the indicated property of that object, if it exists.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig s -> {s: a} -> a\n     * @param {String} p The property name\n     * @param {Object} obj The object to query\n     * @return {*} The value at `obj.p`.\n     * @example\n     *\n     *      R.prop('x', {x: 100}); //=> 100\n     *      R.prop('x', {}); //=> undefined\n     */\n    var prop = _curry2(function prop(p, obj) {\n        return obj[p];\n    });\n\n    /**\n     * Determines whether the given property of an object has a specific\n     * value according to strict equality (`===`).  Most likely used to\n     * filter a list:\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig k -> v -> {k: v} -> Boolean\n     * @param {Number|String} name The property name (or index) to use.\n     * @param {*} val The value to compare the property with.\n     * @return {Boolean} `true` if the properties are equal, `false` otherwise.\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n     *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n     *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n     *      var kids = [abby, fred, rusty, alois];\n     *      var hasBrownHair = R.propEq('hair', 'brown');\n     *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n     */\n    var propEq = _curry3(function propEq(name, val, obj) {\n        return obj[name] === val;\n    });\n\n    /**\n     * If the given, non-null object has an own property with the specified name,\n     * returns the value of that property.\n     * Otherwise returns the provided default value.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig a -> String -> Object -> a\n     * @param {*} val The default value.\n     * @param {String} p The name of the property to return.\n     * @param {Object} obj The object to query.\n     * @return {*} The value of given property of the supplied object or the default value.\n     * @example\n     *\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var favorite = R.prop('favoriteLibrary');\n     *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n     *\n     *      favorite(alice);  //=> undefined\n     *      favoriteWithDefault(alice);  //=> 'Ramda'\n     */\n    var propOr = _curry3(function propOr(val, p, obj) {\n        return _has(p, obj) ? obj[p] : val;\n    });\n\n    /**\n     * Acts as multiple `get`: array of keys in, array of values out. Preserves order.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [k] -> {k: v} -> [v]\n     * @param {Array} ps The property names to fetch\n     * @param {Object} obj The object to query\n     * @return {Array} The corresponding values or partially applied function.\n     * @example\n     *\n     *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n     *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n     *\n     *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n     *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n     */\n    var props = _curry2(function props(ps, obj) {\n        var len = ps.length;\n        var out = [];\n        var idx = -1;\n        while (++idx < len) {\n            out[idx] = obj[ps[idx]];\n        }\n        return out;\n    });\n\n    /**\n     * Returns a list of numbers from `from` (inclusive) to `to`\n     * (exclusive).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> Number -> [Number]\n     * @param {Number} from The first number in the list.\n     * @param {Number} to One more than the last number in the list.\n     * @return {Array} The list of numbers in tthe set `[a, b)`.\n     * @example\n     *\n     *      R.range(1, 5);    //=> [1, 2, 3, 4]\n     *      R.range(50, 53);  //=> [50, 51, 52]\n     */\n    var range = _curry2(function range(from, to) {\n        var result = [];\n        var n = from;\n        while (n < to) {\n            result[result.length] = n;\n            n += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Like `reduce`, but passes additional parameters to the predicate function.\n     *\n     * The iterator function receives four values: *(acc, value, index, list)*\n     *\n     * Note: `R.reduceIndexed` does not skip deleted or unassigned indices (sparse arrays),\n     * unlike the native `Array.prototype.reduce` method. For more details on this behavior,\n     * see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,b,i,[b] -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives four values: the accumulator, the\n     *        current element from `list`, that element's index, and the entire `list` itself.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var letters = ['a', 'b', 'c'];\n     *      var objectify = function(accObject, elem, idx, list) {\n     *        accObject[elem] = idx;\n     *        return accObject;\n     *      };\n     *\n     *      R.reduceIndexed(objectify, {}, letters); //=> { 'a': 0, 'b': 1, 'c': 2 }\n     */\n    var reduceIndexed = _curry3(function reduceIndexed(fn, acc, list) {\n        var idx = -1, len = list.length;\n        while (++idx < len) {\n            acc = fn(acc, list[idx], idx, list);\n        }\n        return acc;\n    });\n\n    /**\n     * Returns a single item by iterating through the list, successively calling the iterator\n     * function and passing it an accumulator value and the current value from the array, and\n     * then passing the result to the next call.\n     *\n     * Similar to `reduce`, except moves through the input list from the right to the left.\n     *\n     * The iterator function receives two values: *(acc, value)*\n     *\n     * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse arrays), unlike\n     * the native `Array.prototype.reduce` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var pairs = [ ['a', 1], ['b', 2], ['c', 3] ];\n     *      var flattenPairs = function(acc, pair) {\n     *        return acc.concat(pair);\n     *      };\n     *\n     *      R.reduceRight(flattenPairs, [], pairs); //=> [ 'c', 3, 'b', 2, 'a', 1 ]\n     */\n    var reduceRight = _curry3(function reduceRight(fn, acc, list) {\n        var idx = list.length;\n        while (--idx >= 0) {\n            acc = fn(acc, list[idx]);\n        }\n        return acc;\n    });\n\n    /**\n     * Like `reduceRight`, but passes additional parameters to the predicate function. Moves through\n     * the input list from the right to the left.\n     *\n     * The iterator function receives four values: *(acc, value, index, list)*.\n     *\n     * Note: `R.reduceRightIndexed` does not skip deleted or unassigned indices (sparse arrays),\n     * unlike the native `Array.prototype.reduce` method. For more details on this behavior,\n     * see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,b,i,[b] -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives four values: the accumulator, the\n     *        current element from `list`, that element's index, and the entire `list` itself.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var letters = ['a', 'b', 'c'];\n     *      var objectify = function(accObject, elem, idx, list) {\n     *        accObject[elem] = idx;\n     *        return accObject;\n     *      };\n     *\n     *      R.reduceRightIndexed(objectify, {}, letters); //=> { 'c': 2, 'b': 1, 'a': 0 }\n     */\n    var reduceRightIndexed = _curry3(function reduceRightIndexed(fn, acc, list) {\n        var idx = list.length;\n        while (--idx >= 0) {\n            acc = fn(acc, list[idx], idx, list);\n        }\n        return acc;\n    });\n\n    /**\n     * Like `reject`, but passes additional parameters to the predicate function. The predicate\n     * function is passed three arguments: *(value, index, list)*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a, i, [a] -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} The new filtered array.\n     * @example\n     *\n     *      var lastTwo = function(val, idx, list) {\n     *        return list.length - idx <= 2;\n     *      };\n     *\n     *      R.rejectIndexed(lastTwo, [8, 6, 7, 5, 3, 0, 9]); //=> [8, 6, 7, 5, 3]\n     */\n    var rejectIndexed = _curry2(function rejectIndexed(fn, list) {\n        return _filterIndexed(_complement(fn), list);\n    });\n\n    /**\n     * Removes the sub-list of `list` starting at index `start` and containing\n     * `count` elements.  _Note that this is not destructive_: it returns a\n     * copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @param {Number} start The position to start removing elements\n     * @param {Number} count The number of elements to remove\n     * @param {Array} list The list to remove from\n     * @return {Array} A new Array with `count` elements from `start` removed.\n     * @example\n     *\n     *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n     */\n    var remove = _curry3(function remove(start, count, list) {\n        return _concat(_slice(list, 0, Math.min(start, list.length)), _slice(list, Math.min(list.length, start + count)));\n    });\n\n    /**\n     * Replace a substring or regex match in a string with a replacement.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig RegExp|String -> String -> String -> String\n     * @param {RegExp|String} pattern A regular expression or a substring to match.\n     * @param {String} replacement The string to replace the matches with.\n     * @param {String} str The String to do the search and replacement in.\n     * @return {String} The result.\n     * @example\n     *\n     *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *\n     *      // Use the \"g\" (global) flag to replace all occurrences:\n     *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n     */\n    var replace = _curry3(function replace(regex, replacement, str) {\n        return str.replace(regex, replacement);\n    });\n\n    /**\n     * Returns a new list with the same elements as the original list, just\n     * in the reverse order.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The list to reverse.\n     * @return {Array} A copy of the list in reverse order.\n     * @example\n     *\n     *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n     *      R.reverse([1, 2]);     //=> [2, 1]\n     *      R.reverse([1]);        //=> [1]\n     *      R.reverse([]);         //=> []\n     */\n    var reverse = _curry1(function reverse(list) {\n        return _slice(list).reverse();\n    });\n\n    /**\n     * Scan is similar to reduce, but returns a list of successively reduced values from the left\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> [a]\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} A list of all intermediately reduced values.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n     */\n    var scan = _curry3(function scan(fn, acc, list) {\n        var idx = 0, len = list.length + 1, result = [acc];\n        while (++idx < len) {\n            acc = fn(acc, list[idx - 1]);\n            result[idx] = acc;\n        }\n        return result;\n    });\n\n    /**\n     * Sorts the list according to a key generated by the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a -> String) -> [a] -> [a]\n     * @param {Function} fn The function mapping `list` items to keys.\n     * @param {Array} list The list to sort.\n     * @return {Array} A new list sorted by the keys generated by `fn`.\n     * @example\n     *\n     *      var sortByFirstItem = R.sortBy(prop(0));\n     *      var sortByNameCaseInsensitive = R.sortBy(compose(R.toLower, prop('name')));\n     *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n     *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var bob = {\n     *        name: 'Bob',\n     *        age: -10\n     *      };\n     *      var clara = {\n     *        name: 'clara',\n     *        age: 314.159\n     *      };\n     *      var people = [clara, bob, alice];\n     *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n     */\n    var sortBy = _curry2(function sortBy(fn, list) {\n        return _slice(list).sort(function (a, b) {\n            var aa = fn(a);\n            var bb = fn(b);\n            return aa < bb ? -1 : aa > bb ? 1 : 0;\n        });\n    });\n\n    /**\n     * Finds the first index of a substring in a string, returning -1 if it's not present\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String -> Number\n     * @param {String} c A string to find.\n     * @param {String} str The string to search in\n     * @return {Number} The first index of `c` or -1 if not found.\n     * @example\n     *\n     *      R.strIndexOf('c', 'abcdefg'); //=> 2\n     */\n    var strIndexOf = _curry2(function strIndexOf(c, str) {\n        return str.indexOf(c);\n    });\n\n    /**\n     *\n     * Finds the last index of a substring in a string, returning -1 if it's not present\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String -> Number\n     * @param {String} c A string to find.\n     * @param {String} str The string to search in\n     * @return {Number} The last index of `c` or -1 if not found.\n     * @example\n     *\n     *      R.strLastIndexOf('a', 'banana split'); //=> 5\n     */\n    var strLastIndexOf = _curry2(function (c, str) {\n        return str.lastIndexOf(c);\n    });\n\n    /**\n     * Subtracts two numbers. Equivalent to `a - b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a - b`.\n     * @example\n     *\n     *      R.subtract(10, 8); //=> 2\n     *\n     *      var minus5 = R.subtract(R.__, 5);\n     *      minus5(17); //=> 12\n     *\n     *      var complementaryAngle = R.subtract(90);\n     *      complementaryAngle(30); //=> 60\n     *      complementaryAngle(72); //=> 18\n     */\n    var subtract = _curry2(function subtract(a, b) {\n        return a - b;\n    });\n\n    /**\n     * Runs the given function with the supplied object, then returns the object.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> *) -> a -> a\n     * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n     * @param {*} x\n     * @return {*} `x`.\n     * @example\n     *\n     *      var sayX = function(x) { console.log('x is ' + x); };\n     *      R.tap(sayX, 100); //=> 100\n     *      //-> 'x is 100'\n     */\n    var tap = _curry2(function tap(fn, x) {\n        fn(x);\n        return x;\n    });\n\n    /**\n     * Determines whether a given string matches a given regular expression.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig RegExp -> String -> Boolean\n     * @param {RegExp} pattern\n     * @param {String} str\n     * @return {Boolean}\n     * @example\n     *\n     *      R.test(/^x/, 'xyz'); //=> true\n     *      R.test(/^y/, 'xyz'); //=> false\n     */\n    var test = _curry2(function test(pattern, str) {\n        return _cloneRegExp(pattern).test(str);\n    });\n\n    /**\n     * Calls an input function `n` times, returning an array containing the results of those\n     * function calls.\n     *\n     * `fn` is passed one argument: The current value of `n`, which begins at `0` and is\n     * gradually incremented to `n - 1`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (i -> a) -> i -> [a]\n     * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n     * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n     * @return {Array} An array containing the return values of all calls to `fn`.\n     * @example\n     *\n     *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n     */\n    var times = _curry2(function times(fn, n) {\n        var len = Number(n);\n        var list = new Array(len);\n        var idx = 0;\n        while (idx < len) {\n            list[idx] = fn(idx);\n            idx += 1;\n        }\n        return list;\n    });\n\n    /**\n     * Converts an object into an array of key, value arrays.\n     * Only the object's own properties are used.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own properties.\n     * @example\n     *\n     *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n     */\n    var toPairs = _curry1(function toPairs(obj) {\n        var pairs = [];\n        for (var prop in obj) {\n            if (_has(prop, obj)) {\n                pairs[pairs.length] = [\n                    prop,\n                    obj[prop]\n                ];\n            }\n        }\n        return pairs;\n    });\n\n    /**\n     * Converts an object into an array of key, value arrays.\n     * The object's own properties and prototype properties are used.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own\n     *         and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n     */\n    var toPairsIn = _curry1(function toPairsIn(obj) {\n        var pairs = [];\n        for (var prop in obj) {\n            pairs[pairs.length] = [\n                prop,\n                obj[prop]\n            ];\n        }\n        return pairs;\n    });\n\n    /**\n     * Removes (strips) whitespace from both ends of the string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to trim.\n     * @return {String} Trimmed version of `str`.\n     * @example\n     *\n     *      R.trim('   xyz  '); //=> 'xyz'\n     *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n     */\n    var trim = function () {\n        var ws = '\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\n        var zeroWidth = '\\u200B';\n        var hasProtoTrim = typeof String.prototype.trim === 'function';\n        if (!hasProtoTrim || (ws.trim() || !zeroWidth.trim())) {\n            return _curry1(function trim(str) {\n                var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n                var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n                return str.replace(beginRx, '').replace(endRx, '');\n            });\n        } else {\n            return _curry1(function trim(str) {\n                return str.trim();\n            });\n        }\n    }();\n\n    /**\n     * Gives a single-word string description of the (native) type of a value, returning such\n     * answers as 'Object', 'Number', 'Array', or 'Null'.  Does not attempt to distinguish user\n     * Object types any further, reporting them all as 'Object'.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig (* -> {*}) -> String\n     * @param {*} val The value to test\n     * @return {String}\n     * @example\n     *\n     *      R.type({}); //=> \"Object\"\n     *      R.type(1); //=> \"Number\"\n     *      R.type(false); //=> \"Boolean\"\n     *      R.type('s'); //=> \"String\"\n     *      R.type(null); //=> \"Null\"\n     *      R.type([]); //=> \"Array\"\n     *      R.type(/[A-z]/); //=> \"RegExp\"\n     */\n    var type = _curry1(function type(val) {\n        return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n    });\n\n    /**\n     * Takes a function `fn`, which takes a single array argument, and returns\n     * a function which:\n     *\n     *   - takes any number of positional arguments;\n     *   - passes these arguments to `fn` as an array; and\n     *   - returns the result.\n     *\n     * In other words, R.unapply derives a variadic function from a function\n     * which takes an array. R.unapply is the inverse of R.apply.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ([*...] -> a) -> (*... -> a)\n     * @param {Function} fn\n     * @return {Function}\n     * @see R.apply\n     * @example\n     *\n     *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n     */\n    var unapply = _curry1(function unapply(fn) {\n        return function () {\n            return fn(_slice(arguments));\n        };\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts exactly 1\n     * parameter. Any extraneous parameters will not be passed to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> b) -> (a -> b)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 1.\n     * @example\n     *\n     *      var takesTwoArgs = function(a, b) {\n     *        return [a, b];\n     *      };\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.unary(takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only 1 argument is passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n    var unary = _curry1(function unary(fn) {\n        return nAry(1, fn);\n    });\n\n    /**\n     * Builds a list from a seed value. Accepts an iterator function, which returns either false\n     * to stop iteration or an array of length 2 containing the value to add to the resulting\n     * list and the seed to be used in the next call to the iterator function.\n     *\n     * The iterator function receives one argument: *(seed)*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> [b]) -> * -> [b]\n     * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n     *        either false to quit iteration or an array of length two to proceed. The element\n     *        at index 0 of this array will be added to the resulting array, and the element\n     *        at index 1 will be passed to the next call to `fn`.\n     * @param {*} seed The seed value.\n     * @return {Array} The final list.\n     * @example\n     *\n     *      var f = function(n) { return n > 50 ? false : [-n, n + 10] };\n     *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n     */\n    var unfold = _curry2(function unfold(fn, seed) {\n        var pair = fn(seed);\n        var result = [];\n        while (pair && pair.length) {\n            result[result.length] = pair[0];\n            pair = fn(pair[1]);\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list containing only one copy of each element in the original list, based\n     * upon the value returned by applying the supplied predicate to two list elements. Prefers\n     * the first item if two items compare equal based on the predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      var strEq = function(a, b) { return String(a) === String(b); };\n     *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n     *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n     *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n     *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n     */\n    var uniqWith = _curry2(function uniqWith(pred, list) {\n        var idx = -1, len = list.length;\n        var result = [], item;\n        while (++idx < len) {\n            item = list[idx];\n            if (!_containsWith(pred, item, result)) {\n                result[result.length] = item;\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns a list of all the properties, including prototype properties,\n     * of the supplied object.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.valuesIn(f); //=> ['X', 'Y']\n     */\n    var valuesIn = _curry1(function valuesIn(obj) {\n        var prop, vs = [];\n        for (prop in obj) {\n            vs[vs.length] = obj[prop];\n        }\n        return vs;\n    });\n\n    /**\n     * Wrap a function inside another to allow you to make adjustments to the parameters, or do\n     * other processing either before the internal function is called or with its results.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a... -> b) -> ((a... -> b) -> a... -> c) -> (a... -> c)\n     * @param {Function} fn The function to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var greet = function(name) {return 'Hello ' + name;};\n     *\n     *      var shoutedGreet = R.wrap(greet, function(gr, name) {\n     *        return gr(name).toUpperCase();\n     *      });\n     *      shoutedGreet(\"Kathy\"); //=> \"HELLO KATHY\"\n     *\n     *      var shortenedGreet = R.wrap(greet, function(gr, name) {\n     *        return gr(name.substring(0, 3));\n     *      });\n     *      shortenedGreet(\"Robert\"); //=> \"Hello Rob\"\n     */\n    var wrap = _curry2(function wrap(fn, wrapper) {\n        return curryN(fn.length, function () {\n            return wrapper.apply(this, _concat([fn], arguments));\n        });\n    });\n\n    /**\n     * Creates a new list out of the two supplied by creating each possible\n     * pair from the lists.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The list made by combining each possible pair from\n     *         `as` and `bs` into pairs (`[a, b]`).\n     * @example\n     *\n     *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n     */\n    // = xprodWith(prepend); (takes about 3 times as long...)\n    var xprod = _curry2(function xprod(a, b) {\n        // = xprodWith(prepend); (takes about 3 times as long...)\n        var idx = -1;\n        var ilen = a.length;\n        var j;\n        var jlen = b.length;\n        var result = [];\n        while (++idx < ilen) {\n            j = -1;\n            while (++j < jlen) {\n                result[result.length] = [\n                    a[idx],\n                    b[j]\n                ];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Creates a new list out of the two supplied by pairing up\n     * equally-positioned items from both lists.  The returned list is\n     * truncated to the length of the shorter of the two input lists.\n     * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n     * @example\n     *\n     *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n     */\n    var zip = _curry2(function zip(a, b) {\n        var rv = [];\n        var idx = -1;\n        var len = Math.min(a.length, b.length);\n        while (++idx < len) {\n            rv[idx] = [\n                a[idx],\n                b[idx]\n            ];\n        }\n        return rv;\n    });\n\n    /**\n     * Creates a new object out of a list of keys and a list of values.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [String] -> [*] -> {String: *}\n     * @param {Array} keys The array that will be properties on the output object.\n     * @param {Array} values The list of values on the output object.\n     * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n     * @example\n     *\n     *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n     */\n    var zipObj = _curry2(function zipObj(keys, values) {\n        var idx = -1, len = keys.length, out = {};\n        while (++idx < len) {\n            out[keys[idx]] = values[idx];\n        }\n        return out;\n    });\n\n    /**\n     * Creates a new list out of the two supplied by applying the function to\n     * each equally-positioned pair in the lists. The returned list is\n     * truncated to the length of the shorter of the two input lists.\n     *\n     * @function\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> c) -> [a] -> [b] -> [c]\n     * @param {Function} fn The function used to combine the two elements into one value.\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n     *         using `fn`.\n     * @example\n     *\n     *      var f = function(x, y) {\n     *        // ...\n     *      };\n     *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n     *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n     */\n    var zipWith = _curry3(function zipWith(fn, a, b) {\n        var rv = [], idx = -1, len = Math.min(a.length, b.length);\n        while (++idx < len) {\n            rv[idx] = fn(a[idx], b[idx]);\n        }\n        return rv;\n    });\n\n    /**\n     * A function that always returns `false`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig * -> false\n     * @see R.always\n     * @return {Boolean} false\n     * @example\n     *\n     *      R.F(); //=> false\n     */\n    var F = always(false);\n\n    /**\n     * A function that always returns `true`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig * -> true\n     * @see R.always\n     * @return {Boolean} `true`.\n     * @example\n     *\n     *      R.T(); //=> true\n     */\n    var T = always(true);\n\n    var _append = function _append(el, list) {\n        return _concat(list, [el]);\n    };\n\n    var _assocPath = function _assocPath(path, val, obj) {\n        switch (path.length) {\n        case 0:\n            return obj;\n        case 1:\n            return _assoc(path[0], val, obj);\n        default:\n            return _assoc(path[0], _assocPath(_slice(path, 1), val, Object(obj[path[0]])), obj);\n        }\n    };\n\n    /**\n     * Copies an object.\n     *\n     * @private\n     * @param {*} value The value to be copied\n     * @param {Array} refFrom Array containing the source references\n     * @param {Array} refTo Array containing the copied source references\n     * @return {*} The copied value.\n     */\n    var _baseCopy = function _baseCopy(value, refFrom, refTo) {\n        var copy = function copy(copiedValue) {\n            var len = refFrom.length;\n            var idx = -1;\n            while (++idx < len) {\n                if (value === refFrom[idx]) {\n                    return refTo[idx];\n                }\n            }\n            refFrom[idx + 1] = value;\n            refTo[idx + 1] = copiedValue;\n            for (var key in value) {\n                copiedValue[key] = _baseCopy(value[key], refFrom, refTo);\n            }\n            return copiedValue;\n        };\n        switch (type(value)) {\n        case 'Object':\n            return copy({});\n        case 'Array':\n            return copy([]);\n        case 'Date':\n            return new Date(value);\n        case 'RegExp':\n            return _cloneRegExp(value);\n        default:\n            return value;\n        }\n    };\n\n    /**\n     * Similar to hasMethod, this checks whether a function has a [methodname]\n     * function. If it isn't an array it will execute that function otherwise it will\n     * default to the ramda implementation.\n     *\n     * @private\n     * @param {Function} fn ramda implemtation\n     * @param {String} methodname property to check for a custom implementation\n     * @return {Object} Whatever the return value of the method is.\n     */\n    var _checkForMethod = function _checkForMethod(methodname, fn) {\n        return function () {\n            var length = arguments.length;\n            if (length === 0) {\n                return fn();\n            }\n            var obj = arguments[length - 1];\n            return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, _slice(arguments, 0, length - 1));\n        };\n    };\n\n    /**\n     * A right-associative two-argument composition function like `_compose`\n     * but with automatic handling of promises (or, more precisely,\n     * \"thenables\"). This function is used to construct a more general\n     * `composeP` function, which accepts any number of arguments.\n     *\n     * @private\n     * @category Function\n     * @param {Function} f A function.\n     * @param {Function} g A function.\n     * @return {Function} A new function that is the equivalent of `f(g(x))`.\n     * @example\n     *\n     *      var Q = require('q');\n     *      var double = function(x) { return x * 2; };\n     *      var squareAsync = function(x) { return Q.when(x * x); };\n     *      var squareAsyncThenDouble = _composeP(double, squareAsync);\n     *\n     *      squareAsyncThenDouble(5)\n     *        .then(function(result) {\n     *          // the result is now 50.\n     *        });\n     */\n    var _composeP = function _composeP(f, g) {\n        return function () {\n            var context = this;\n            var value = g.apply(this, arguments);\n            if (_isThenable(value)) {\n                return value.then(function (result) {\n                    return f.call(context, result);\n                });\n            } else {\n                return f.call(this, value);\n            }\n        };\n    };\n\n    var _contains = function _contains(a, list) {\n        return _indexOf(list, a) >= 0;\n    };\n\n    /*\n     * Returns a function that makes a multi-argument version of compose from\n     * either _compose or _composeP.\n     */\n    var _createComposer = function _createComposer(composeFunction) {\n        return function () {\n            var idx = arguments.length - 1;\n            var fn = arguments[idx];\n            var length = fn.length;\n            while (--idx >= 0) {\n                fn = composeFunction(arguments[idx], fn);\n            }\n            return arity(length, fn);\n        };\n    };\n\n    /**\n     * Create a function which takes a list\n     * and determines the winning value by a comparator. Used internally\n     * by `R.max` and `R.min`\n     *\n     * @private\n     * @param {Function} compatator a function to compare two items\n     * @param {*} intialVal, default value if nothing else wins\n     * @category Math\n     * @return {Function}\n     */\n    var _createMaxMin = function _createMaxMin(comparator, initialVal) {\n        return _curry1(function (list) {\n            var idx = -1, winner = initialVal, computed;\n            while (++idx < list.length) {\n                computed = +list[idx];\n                if (comparator(computed, winner)) {\n                    winner = computed;\n                }\n            }\n            return winner;\n        });\n    };\n\n    var _createPartialApplicator = function _createPartialApplicator(concat) {\n        return function (fn) {\n            var args = _slice(arguments, 1);\n            return arity(Math.max(0, fn.length - args.length), function () {\n                return fn.apply(this, concat(args, arguments));\n            });\n        };\n    };\n\n    /**\n     * Returns a function that dispatches with different strategies based on the\n     * object in list position (last argument). If it is an array, executes [fn].\n     * Otherwise, if it has a  function with [methodname], it will execute that\n     * function (functor case). Otherwise, if it is a transformer, uses transducer\n     * [xf] to return a new transformer (transducer case). Otherwise, it will\n     * default to executing [fn].\n     *\n     * @private\n     * @param {String} methodname property to check for a custom implementation\n     * @param {Function} xf transducer to initialize if object is transformer\n     * @param {Function} fn default ramda implementation\n     * @return {Function} A function that dispatches on object in list position\n     */\n    var _dispatchable = function _dispatchable(methodname, xf, fn) {\n        return function () {\n            var length = arguments.length;\n            if (length === 0) {\n                return fn();\n            }\n            var obj = arguments[length - 1];\n            if (!_isArray(obj)) {\n                var args = _slice(arguments, 0, length - 1);\n                if (typeof obj[methodname] === 'function') {\n                    return obj[methodname].apply(obj, args);\n                }\n                if (_isTransformer(obj)) {\n                    var transducer = xf.apply(null, args);\n                    return transducer(obj);\n                }\n            }\n            return fn.apply(this, arguments);\n        };\n    };\n\n    var _dissocPath = function _dissocPath(path, obj) {\n        switch (path.length) {\n        case 0:\n            return obj;\n        case 1:\n            return _dissoc(path[0], obj);\n        default:\n            var head = path[0];\n            var tail = _slice(path, 1);\n            return obj[head] == null ? obj : _assoc(head, _dissocPath(tail, obj[head]), obj);\n        }\n    };\n\n    /**\n     * Private function that determines whether or not a provided object has a given method.\n     * Does not ignore methods stored on the object's prototype chain. Used for dynamically\n     * dispatching Ramda methods to non-Array objects.\n     *\n     * @private\n     * @param {String} methodName The name of the method to check for.\n     * @param {Object} obj The object to test.\n     * @return {Boolean} `true` has a given method, `false` otherwise.\n     * @example\n     *\n     *      var person = { name: 'John' };\n     *      person.shout = function() { alert(this.name); };\n     *\n     *      _hasMethod('shout', person); //=> true\n     *      _hasMethod('foo', person); //=> false\n     */\n    var _hasMethod = function _hasMethod(methodName, obj) {\n        return obj != null && !_isArray(obj) && typeof obj[methodName] === 'function';\n    };\n\n    /**\n     * `_makeFlat` is a helper function that returns a one-level or fully recursive function\n     * based on the flag passed in.\n     *\n     * @private\n     */\n    var _makeFlat = function _makeFlat(recursive) {\n        return function flatt(list) {\n            var value, result = [], idx = -1, j, ilen = list.length, jlen;\n            while (++idx < ilen) {\n                if (isArrayLike(list[idx])) {\n                    value = recursive ? flatt(list[idx]) : list[idx];\n                    j = -1;\n                    jlen = value.length;\n                    while (++j < jlen) {\n                        result[result.length] = value[j];\n                    }\n                } else {\n                    result[result.length] = list[idx];\n                }\n            }\n            return result;\n        };\n    };\n\n    var _pluck = function _pluck(p, list) {\n        return _map(prop(p), list);\n    };\n\n    var _reduce = function () {\n        function _arrayReduce(xf, acc, list) {\n            var idx = -1, len = list.length;\n            while (++idx < len) {\n                acc = xf.step(acc, list[idx]);\n                if (acc && acc.__transducers_reduced__) {\n                    acc = acc.value;\n                    break;\n                }\n            }\n            return xf.result(acc);\n        }\n        function _iterableReduce(xf, acc, iter) {\n            var step = iter.next();\n            while (!step.done) {\n                acc = xf.step(acc, step.value);\n                if (acc && acc.__transducers_reduced__) {\n                    acc = acc.value;\n                    break;\n                }\n                step = iter.next();\n            }\n            return xf.result(acc);\n        }\n        function _methodReduce(xf, acc, obj) {\n            return xf.result(obj.reduce(bind(xf.step, xf), acc));\n        }\n        var symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n        return function _reduce(fn, acc, list) {\n            if (typeof fn === 'function') {\n                fn = _xwrap(fn);\n            }\n            if (isArrayLike(list)) {\n                return _arrayReduce(fn, acc, list);\n            }\n            if (typeof list.reduce === 'function') {\n                return _methodReduce(fn, acc, list);\n            }\n            if (list[symIterator] != null) {\n                return _iterableReduce(fn, acc, list[symIterator]());\n            }\n            if (typeof list.next === 'function') {\n                return _iterableReduce(fn, acc, list);\n            }\n            throw new TypeError('reduce: list must be array or iterable');\n        };\n    }();\n\n    var _xgroupBy = function () {\n        function XGroupBy(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.inputs = {};\n        }\n        XGroupBy.prototype.init = function () {\n            return this.xf.init();\n        };\n        XGroupBy.prototype.result = function (result) {\n            var key;\n            for (key in this.inputs) {\n                if (_has(key, this.inputs)) {\n                    result = this.xf.step(result, this.inputs[key]);\n                    if (result.__transducers_reduced__) {\n                        result = result.value;\n                        break;\n                    }\n                }\n            }\n            return this.xf.result(result);\n        };\n        XGroupBy.prototype.step = function (result, input) {\n            var key = this.f(input);\n            this.inputs[key] = this.inputs[key] || [\n                key,\n                []\n            ];\n            this.inputs[key][1] = _append(input, this.inputs[key][1]);\n            return result;\n        };\n        return _curry2(function _xgroupBy(f, xf) {\n            return new XGroupBy(f, xf);\n        });\n    }();\n\n    /**\n     * Returns `true` if all elements of the list match the predicate, `false` if there are any\n     * that don't.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n     *         otherwise.\n     * @example\n     *\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      var lessThan3 = R.flip(R.lt)(3);\n     *      R.all(lessThan2)([1, 2]); //=> false\n     *      R.all(lessThan3)([1, 2]); //=> true\n     */\n    var all = _curry2(_dispatchable('all', _xall, _all));\n\n    /**\n     * Returns `true` if at least one of elements of the list match the predicate, `false`\n     * otherwise.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n     *         otherwise.\n     * @example\n     *\n     *      var lessThan0 = R.flip(R.lt)(0);\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      R.any(lessThan0)([1, 2]); //=> false\n     *      R.any(lessThan2)([1, 2]); //=> true\n     */\n    var any = _curry2(_dispatchable('any', _xany, _any));\n\n    /**\n     * Returns a new list containing the contents of the given list, followed by the given\n     * element.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The element to add to the end of the new list.\n     * @param {Array} list The list whose contents will be added to the beginning of the output\n     *        list.\n     * @return {Array} A new list containing the contents of the old list followed by `el`.\n     * @example\n     *\n     *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n     *      R.append('tests', []); //=> ['tests']\n     *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n     */\n    var append = _curry2(_append);\n\n    /**\n     * Makes a shallow clone of an object, setting or overriding the nodes\n     * required to create the given path, and placing the specific value at the\n     * tail end of that path.  Note that this copies and flattens prototype\n     * properties onto the new object as well.  All non-primitive properties\n     * are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> a -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except along the specified path.\n     * @example\n     *\n     *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n     */\n    var assocPath = _curry3(_assocPath);\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts exactly 2\n     * parameters. Any extraneous parameters will not be passed to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> c) -> (a, b -> c)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 2.\n     * @example\n     *\n     *      var takesThreeArgs = function(a, b, c) {\n     *        return [a, b, c];\n     *      };\n     *      takesThreeArgs.length; //=> 3\n     *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      var takesTwoArgs = R.binary(takesThreeArgs);\n     *      takesTwoArgs.length; //=> 2\n     *      // Only 2 arguments are passed to the wrapped function\n     *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n     */\n    var binary = _curry1(function binary(fn) {\n        return nAry(2, fn);\n    });\n\n    /**\n     * Creates a deep copy of the value which may contain (nested) `Array`s and\n     * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n     * not copied, but assigned by their reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {*} -> {*}\n     * @param {*} value The object or array to clone\n     * @return {*} A new object or array.\n     * @example\n     *\n     *      var objects = [{}, {}, {}];\n     *      var objectsClone = R.clone(objects);\n     *      objects[0] === objectsClone[0]; //=> false\n     */\n    var clone = _curry1(function clone(value) {\n        return _baseCopy(value, [], []);\n    });\n\n    /**\n     * Creates a new function that runs each of the functions supplied as parameters in turn,\n     * passing the return value of each function invocation to the next function invocation,\n     * beginning with whatever arguments were passed to the initial invocation.\n     *\n     * Note that `compose` is a right-associative function, which means the functions provided\n     * will be invoked in order from right to left. In the example `var h = compose(f, g)`,\n     * the function `h` is equivalent to `f( g(x) )`, where `x` represents the arguments\n     * originally passed to `h`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ((y -> z), (x -> y), ..., (b -> c), (a... -> b)) -> (a... -> z)\n     * @param {...Function} functions A variable number of functions.\n     * @return {Function} A new function which represents the result of calling each of the\n     *         input `functions`, passing the result of each function call to the next, from\n     *         right to left.\n     * @example\n     *\n     *      var triple = function(x) { return x * 3; };\n     *      var double = function(x) { return x * 2; };\n     *      var square = function(x) { return x * x; };\n     *      var squareThenDoubleThenTriple = R.compose(triple, double, square);\n     *\n     *      //≅ triple(double(square(5)))\n     *      squareThenDoubleThenTriple(5); //=> 150\n     */\n    var compose = _createComposer(_compose);\n\n    /**\n     * Similar to `compose` but with automatic handling of promises (or, more\n     * precisely, \"thenables\"). The behavior is identical  to that of\n     * compose() if all composed functions return something other than\n     * promises (i.e., objects with a .then() method). If one of the function\n     * returns a promise, however, then the next function in the composition\n     * is called asynchronously, in the success callback of the promise, using\n     * the resolved value as an input. Note that `composeP` is a right-\n     * associative function, just like `compose`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ((y -> z), (x -> y), ..., (b -> c), (a... -> b)) -> (a... -> z)\n     * @param {...Function} functions A variable number of functions.\n     * @return {Function} A new function which represents the result of calling each of the\n     *         input `functions`, passing either the returned result or the asynchronously\n     *         resolved value) of each function call to the next, from right to left.\n     * @example\n     *\n     *      var Q = require('q');\n     *      var triple = function(x) { return x * 3; };\n     *      var double = function(x) { return x * 2; };\n     *      var squareAsync = function(x) { return Q.when(x * x); };\n     *      var squareAsyncThenDoubleThenTriple = R.composeP(triple, double, squareAsync);\n     *\n     *      //≅ squareAsync(5).then(function(x) { return triple(double(x)) };\n     *      squareAsyncThenDoubleThenTriple(5)\n     *        .then(function(result) {\n     *          // result is 150\n     *        });\n     */\n    var composeP = _createComposer(_composeP);\n\n    /**\n     * Returns a new list consisting of the elements of the first list followed by the elements\n     * of the second.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The first list to merge.\n     * @param {Array} list2 The second set to merge.\n     * @return {Array} A new array consisting of the contents of `list1` followed by the\n     *         contents of `list2`. If, instead of an Array for `list1`, you pass an\n     *         object with a `concat` method on it, `concat` will call `list1.concat`\n     *         and pass it the value of `list2`.\n     *\n     * @example\n     *\n     *      R.concat([], []); //=> []\n     *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n     */\n    var concat = _curry2(function (set1, set2) {\n        if (_isArray(set2)) {\n            return _concat(set1, set2);\n        } else if (_hasMethod('concat', set1)) {\n            return set1.concat(set2);\n        } else {\n            throw new TypeError('can\\'t concat ' + typeof set1);\n        }\n    });\n\n    /**\n     * Returns `true` if the specified item is somewhere in the list, `false` otherwise.\n     * Equivalent to `indexOf(a)(list) > -1`. Uses strict (`===`) equality checking.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> Boolean\n     * @param {Object} a The item to compare against.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the item is in the list, `false` otherwise.\n     *\n     * @example\n     *\n     *      R.contains(3)([1, 2, 3]); //=> true\n     *      R.contains(4)([1, 2, 3]); //=> false\n     *      R.contains({})([{}, {}]); //=> false\n     *      var obj = {};\n     *      R.contains(obj)([{}, obj, {}]); //=> true\n     */\n    var contains = _curry2(_contains);\n\n    /**\n     * Accepts at least three functions and returns a new function. When invoked, this new\n     * function will invoke the first function, `after`, passing as its arguments the\n     * results of invoking the subsequent functions with whatever arguments are passed to\n     * the new function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ((*... -> c) -> (((* -> a), (* -> b), ...) -> c)\n     * @param {Function} after A function. `after` will be invoked with the return values of\n     *        `fn1` and `fn2` as its arguments.\n     * @param {...Function} functions A variable number of functions.\n     * @return {Function} A new function.\n     * @example\n     *\n     *      var add = function(a, b) { return a + b; };\n     *      var multiply = function(a, b) { return a * b; };\n     *      var subtract = function(a, b) { return a - b; };\n     *\n     *      //≅ multiply( add(1, 2), subtract(1, 2) );\n     *      R.converge(multiply, add, subtract)(1, 2); //=> -3\n     *\n     *      var add3 = function(a, b, c) { return a + b + c; };\n     *      R.converge(add3, multiply, add, subtract)(1, 2); //=> 4\n     */\n    var converge = curryN(3, function (after) {\n        var fns = _slice(arguments, 1);\n        return function () {\n            var args = arguments;\n            return after.apply(this, _map(function (fn) {\n                return fn.apply(this, args);\n            }, fns));\n        };\n    });\n\n    /**\n     * Returns a curried equivalent of the provided function. The curried\n     * function has two unusual capabilities. First, its arguments needn't\n     * be provided one at a time. If `f` is a ternary function and `g` is\n     * `R.curry(f)`, the following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`,\n     * the following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> a) -> (* -> a)\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curryN\n     * @example\n     *\n     *      var addFourNumbers = function(a, b, c, d) {\n     *        return a + b + c + d;\n     *      };\n     *\n     *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n    var curry = _curry1(function curry(fn) {\n        return curryN(fn.length, fn);\n    });\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not contained in the second list.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @see R.differenceWith\n     * @example\n     *\n     *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n     *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n     */\n    var difference = _curry2(function difference(first, second) {\n        var out = [];\n        var idx = -1;\n        var firstLen = first.length;\n        while (++idx < firstLen) {\n            if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n                out[out.length] = first[idx];\n            }\n        }\n        return out;\n    });\n\n    /**\n     * Makes a shallow clone of an object, omitting the property at the\n     * given path. Note that this copies and flattens prototype properties\n     * onto the new object as well.  All non-primitive properties are copied\n     * by reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object without the property at path\n     * @example\n     *\n     *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n     */\n    var dissocPath = _curry2(_dissocPath);\n\n    /**\n     * Returns a new list containing all but the first `n` elements of the given `list`.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @param {Number} n The number of elements of `list` to skip.\n     * @param {Array} list The array to consider.\n     * @return {Array} The last `n` elements of `list`.\n     * @example\n     *\n     *     R.drop(3, [1,2,3,4,5,6,7]); //=> [4,5,6,7]\n     */\n    var drop = _curry2(_dispatchable('drop', _xdrop, function drop(n, list) {\n        return n < list.length ? _slice(list, n) : [];\n    }));\n\n    /**\n     * Returns a new list containing the last `n` elements of a given list, passing each value\n     * to the supplied predicate function, skipping elements while the predicate function returns\n     * `true`. The predicate function is passed one argument: *(value)*.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @example\n     *\n     *      var lteTwo = function(x) {\n     *        return x <= 2;\n     *      };\n     *\n     *      R.dropWhile(lteTwo, [1, 2, 3, 4]); //=> [3, 4]\n     */\n    var dropWhile = _curry2(_dispatchable('dropWhile', _xdropWhile, function dropWhile(pred, list) {\n        var idx = -1, len = list.length;\n        while (++idx < len && pred(list[idx])) {\n        }\n        return _slice(list, idx);\n    }));\n\n    /**\n     * `empty` wraps any object in an array. This implementation is compatible with the\n     * Fantasy-land Monoid spec, and will work with types that implement that spec.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig * -> []\n     * @return {Array} An empty array.\n     * @example\n     *\n     *      R.empty([1,2,3,4,5]); //=> []\n     */\n    var empty = _curry1(function empty(x) {\n        return _hasMethod('empty', x) ? x.empty() : [];\n    });\n\n    /**\n     * Returns a new list containing only those items that match a given predicate function.\n     * The predicate function is passed one argument: *(value)*.\n     *\n     * Note that `R.filter` does not skip deleted or unassigned indices, unlike the native\n     * `Array.prototype.filter` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter#Description\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} The new filtered array.\n     * @example\n     *\n     *      var isEven = function(n) {\n     *        return n % 2 === 0;\n     *      };\n     *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n     */\n    var filter = _curry2(_dispatchable('filter', _xfilter, _filter));\n\n    /**\n     * Returns the first element of the list which matches the predicate, or `undefined` if no\n     * element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     *        desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n     *      R.find(R.propEq('a', 4))(xs); //=> undefined\n     */\n    var find = _curry2(_dispatchable('find', _xfind, function find(fn, list) {\n        var idx = -1;\n        var len = list.length;\n        while (++idx < len) {\n            if (fn(list[idx])) {\n                return list[idx];\n            }\n        }\n    }));\n\n    /**\n     * Returns the index of the first element of the list which matches the predicate, or `-1`\n     * if no element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n     *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n    var findIndex = _curry2(_dispatchable('findIndex', _xfindIndex, function findIndex(fn, list) {\n        var idx = -1;\n        var len = list.length;\n        while (++idx < len) {\n            if (fn(list[idx])) {\n                return idx;\n            }\n        }\n        return -1;\n    }));\n\n    /**\n     * Returns the last element of the list which matches the predicate, or `undefined` if no\n     * element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n     *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n     */\n    var findLast = _curry2(_dispatchable('findLast', _xfindLast, function findLast(fn, list) {\n        var idx = list.length;\n        while (--idx >= 0) {\n            if (fn(list[idx])) {\n                return list[idx];\n            }\n        }\n    }));\n\n    /**\n     * Returns the index of the last element of the list which matches the predicate, or\n     * `-1` if no element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n     *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n    var findLastIndex = _curry2(_dispatchable('findLastIndex', _xfindLastIndex, function findLastIndex(fn, list) {\n        var idx = list.length;\n        while (--idx >= 0) {\n            if (fn(list[idx])) {\n                return idx;\n            }\n        }\n        return -1;\n    }));\n\n    /**\n     * Returns a new list by pulling every item out of it (and all its sub-arrays) and putting\n     * them in a new array, depth-first.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b]\n     * @param {Array} list The array to consider.\n     * @return {Array} The flattened list.\n     * @example\n     *\n     *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n     *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n     */\n    var flatten = _curry1(_makeFlat(true));\n\n    /**\n     * Returns a new function much like the supplied one, except that the first two arguments'\n     * order is reversed.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)\n     * @param {Function} fn The function to invoke with its first two parameters reversed.\n     * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n     * @example\n     *\n     *      var mergeThree = function(a, b, c) {\n     *        return ([]).concat(a, b, c);\n     *      };\n     *\n     *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n     */\n    var flip = _curry1(function flip(fn) {\n        return curry(function (a, b) {\n            var args = _slice(arguments);\n            args[0] = b;\n            args[1] = a;\n            return fn.apply(this, args);\n        });\n    });\n\n    /**\n     * Calls the specified function on the supplied object. Any additional arguments\n     * after `fn` and `obj` are passed in to `fn`. If no additional arguments are passed to `func`,\n     * `fn` is invoked with no arguments.\n     *\n     * @deprecated since v0.12.0\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig k -> {k : v} -> v(*)\n     * @param {String} funcName The name of the property mapped to the function to invoke\n     * @param {Object} obj The object\n     * @return {*} The value of invoking `obj.fn`.\n     * @see R.invoke\n     * @example\n     *\n     *      R.func('add', R, 1, 2); //=> 3\n     *\n     *      var obj = { f: function() { return 'f called'; } };\n     *      R.func('f', obj); //=> 'f called'\n     */\n    var func = curry(function func(funcName, obj) {\n        return obj[funcName].apply(obj, _slice(arguments, 2));\n    });\n\n    /**\n     * Returns a list of function names of object's own and prototype functions\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {*} -> [String]\n     * @param {Object} obj The objects with functions in it\n     * @return {Array} A list of the object's own properties and prototype\n     *         properties that map to functions.\n     * @example\n     *\n     *      R.functionsIn(R); // returns list of ramda's own and prototype function names\n     *\n     *      var F = function() { this.x = function(){}; this.y = 1; }\n     *      F.prototype.z = function() {};\n     *      F.prototype.a = 100;\n     *      R.functionsIn(new F()); //=> [\"x\", \"z\"]\n     */\n    var functionsIn = _curry1(_functionsWith(keysIn));\n\n    /**\n     * Splits a list into sub-lists stored in an object, based on the result of calling a String-returning function\n     * on each element, and grouping the results according to values returned.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> String) -> [a] -> {String: [a]}\n     * @param {Function} fn Function :: a -> String\n     * @param {Array} list The array to group\n     * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n     *         that produced that key when passed to `fn`.\n     * @example\n     *\n     *     var byGrade = R.groupBy(function(student) {\n     *       var score = student.score;\n     *       return score < 65 ? 'F' :\n     *              score < 70 ? 'D' :\n     *              score < 80 ? 'C' :\n     *              score < 90 ? 'B' : 'A';\n     *     });\n     *     var students = [{name: 'Abby', score: 84},\n     *                     {name: 'Eddy', score: 58},\n     *                     // ...\n     *                     {name: 'Jack', score: 69}];\n     *     byGrade(students);\n     *     // {\n     *     //   'A': [{name: 'Dianne', score: 99}],\n     *     //   'B': [{name: 'Abby', score: 84}]\n     *     //   // ...,\n     *     //   'F': [{name: 'Eddy', score: 58}]\n     *     // }\n     */\n    var groupBy = _curry2(_dispatchable('groupBy', _xgroupBy, function groupBy(fn, list) {\n        return _reduce(function (acc, elt) {\n            var key = fn(elt);\n            acc[key] = _append(elt, acc[key] || (acc[key] = []));\n            return acc;\n        }, {}, list);\n    }));\n\n    /**\n     * Returns the first element in a list.\n     * In some libraries this function is named `first`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> a\n     * @param {Array} list The array to consider.\n     * @return {*} The first element of the list, or `undefined` if the list is empty.\n     * @example\n     *\n     *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n     */\n    var head = nth(0);\n\n    /**\n     * Inserts the supplied element into the list, at index `index`.  _Note\n     * that this is not destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} index The position to insert the element\n     * @param {*} elt The element to insert into the Array\n     * @param {Array} list The list to insert into\n     * @return {Array} A new Array with `elt` inserted at `index`.\n     * @example\n     *\n     *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n     */\n    var insert = _curry3(function insert(idx, elt, list) {\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\n        return _concat(_append(elt, _slice(list, 0, idx)), _slice(list, idx));\n    });\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those\n     * elements common to both lists.  Duplication is determined according\n     * to the value returned by applying the supplied predicate to two list\n     * elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a,a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate function that determines whether\n     *        the two supplied elements are equal.\n     * @param {Array} list1 One list of items to compare\n     * @param {Array} list2 A second list of items to compare\n     * @see R.intersection\n     * @return {Array} A new list containing those elements common to both lists.\n     * @example\n     *\n     *      var buffaloSpringfield = [\n     *        {id: 824, name: 'Richie Furay'},\n     *        {id: 956, name: 'Dewey Martin'},\n     *        {id: 313, name: 'Bruce Palmer'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *      var csny = [\n     *        {id: 204, name: 'David Crosby'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 539, name: 'Graham Nash'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *\n     *      var sameId = function(o1, o2) {return o1.id === o2.id;};\n     *\n     *      R.intersectionWith(sameId, buffaloSpringfield, csny);\n     *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n     */\n    var intersectionWith = _curry3(function intersectionWith(pred, list1, list2) {\n        var results = [], idx = -1;\n        while (++idx < list1.length) {\n            if (_containsWith(pred, list1[idx], list2)) {\n                results[results.length] = list1[idx];\n            }\n        }\n        return uniqWith(pred, results);\n    });\n\n    /**\n     * Returns the result of applying `obj[methodName]` to `args`.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig String -> [*] -> Object -> *\n     * @param {String} methodName\n     * @param {Array} args\n     * @param {Object} obj\n     * @return {*}\n     * @example\n     *\n     *      //  toBinary :: Number -> String\n     *      var toBinary = R.invoke('toString', [2])\n     *\n     *      toBinary(42); //=> '101010'\n     *      toBinary(63); //=> '111111'\n     */\n    var invoke = curry(function invoke(methodName, args, obj) {\n        return obj[methodName].apply(obj, args);\n    });\n\n    /**\n     * Turns a named method with a specified arity into a function\n     * that can be called directly supplied with arguments and a target object.\n     *\n     * The returned function is curried and accepts `len + 1` parameters where\n     * the final parameter is the target object.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (Number, String) -> (a... -> c -> b)\n     * @param {Number} len Number of arguments the returned function should take\n     *        before the target object.\n     * @param {Function} method Name of the method to call.\n     * @return {Function} A new curried function.\n     * @example\n     *\n     *      var sliceFrom = R.invoker(1, 'slice');\n     *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n     *      var sliceFrom6 = R.invoker(2, 'slice', 6);\n     *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n     */\n    var invoker = curry(function invoker(arity, method) {\n        var initialArgs = _slice(arguments, 2);\n        var len = arity - initialArgs.length;\n        return curryN(len + 1, function () {\n            var target = arguments[len];\n            var args = initialArgs.concat(_slice(arguments, 0, len));\n            return target[method].apply(target, args);\n        });\n    });\n\n    /**\n     * Returns a string made by inserting the `separator` between each\n     * element and concatenating all the elements into a single string.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig String -> [a] -> String\n     * @param {Number|String} separator The string used to separate the elements.\n     * @param {Array} xs The elements to join into a string.\n     * @return {String} str The string made by concatenating `xs` with `separator`.\n     * @example\n     *\n     *      var spacer = R.join(' ');\n     *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n     *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n     */\n    var join = invoker(1, 'join');\n\n    /**\n     * Returns a list containing the names of all the enumerable own\n     * properties of the supplied object.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own properties.\n     * @example\n     *\n     *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n     */\n    // cover IE < 9 keys issues\n    var keys = function () {\n        // cover IE < 9 keys issues\n        var hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');\n        var nonEnumerableProps = [\n            'constructor',\n            'valueOf',\n            'isPrototypeOf',\n            'toString',\n            'propertyIsEnumerable',\n            'hasOwnProperty',\n            'toLocaleString'\n        ];\n        return _curry1(function keys(obj) {\n            if (Object(obj) !== obj) {\n                return [];\n            }\n            if (Object.keys) {\n                return Object.keys(obj);\n            }\n            var prop, ks = [], nIdx;\n            for (prop in obj) {\n                if (_has(prop, obj)) {\n                    ks[ks.length] = prop;\n                }\n            }\n            if (hasEnumBug) {\n                nIdx = nonEnumerableProps.length;\n                while (--nIdx >= 0) {\n                    prop = nonEnumerableProps[nIdx];\n                    if (_has(prop, obj) && !_contains(prop, ks)) {\n                        ks[ks.length] = prop;\n                    }\n                }\n            }\n            return ks;\n        });\n    }();\n\n    /**\n     * Returns the last element from a list.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> a\n     * @param {Array} list The array to consider.\n     * @return {*} The last element of the list, or `undefined` if the list is empty.\n     * @example\n     *\n     *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n     */\n    var last = nth(-1);\n\n    /**\n     * Returns a new list, constructed by applying the supplied function to every element of the\n     * supplied list.\n     *\n     * Note: `R.map` does not skip deleted or unassigned indices (sparse arrays), unlike the\n     * native `Array.prototype.map` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map#Description\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> b) -> [a] -> [b]\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {Array} list The list to be iterated over.\n     * @return {Array} The new list.\n     * @example\n     *\n     *      var double = function(x) {\n     *        return x * 2;\n     *      };\n     *\n     *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n     */\n    var map = _curry2(_dispatchable('map', _xmap, _map));\n\n    /**\n     * Map, but for objects. Creates an object with the same keys as `obj` and values\n     * generated by running each property of `obj` through `fn`. `fn` is passed one argument:\n     * *(value)*.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig (v -> v) -> {k: v} -> {k: v}\n     * @param {Function} fn A function called for each property in `obj`. Its return value will\n     * become a new property on the return object.\n     * @param {Object} obj The object to iterate over.\n     * @return {Object} A new object with the same keys as `obj` and values that are the result\n     *         of running each property through `fn`.\n     * @example\n     *\n     *      var values = { x: 1, y: 2, z: 3 };\n     *      var double = function(num) {\n     *        return num * 2;\n     *      };\n     *\n     *      R.mapObj(double, values); //=> { x: 2, y: 4, z: 6 }\n     */\n    var mapObj = _curry2(function mapObject(fn, obj) {\n        return _reduce(function (acc, key) {\n            acc[key] = fn(obj[key]);\n            return acc;\n        }, {}, keys(obj));\n    });\n\n    /**\n     * Like `mapObj`, but but passes additional arguments to the predicate function. The\n     * predicate function is passed three arguments: *(value, key, obj)*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (v, k, {k: v} -> v) -> {k: v} -> {k: v}\n     * @param {Function} fn A function called for each property in `obj`. Its return value will\n     *        become a new property on the return object.\n     * @param {Object} obj The object to iterate over.\n     * @return {Object} A new object with the same keys as `obj` and values that are the result\n     *         of running each property through `fn`.\n     * @example\n     *\n     *      var values = { x: 1, y: 2, z: 3 };\n     *      var prependKeyAndDouble = function(num, key, obj) {\n     *        return key + (num * 2);\n     *      };\n     *\n     *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n     */\n    var mapObjIndexed = _curry2(function mapObjectIndexed(fn, obj) {\n        return _reduce(function (acc, key) {\n            acc[key] = fn(obj[key], key, obj);\n            return acc;\n        }, {}, keys(obj));\n    });\n\n    /**\n     * Tests a regular expression against a String\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig RegExp -> String -> [String] | null\n     * @param {RegExp} rx A regular expression.\n     * @param {String} str The string to match against\n     * @return {Array} The list of matches, or null if no matches found.\n     * @see R.invoker\n     * @example\n     *\n     *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n     */\n    var match = invoker(1, 'match');\n\n    /**\n     * Determines the largest of a list of numbers (or elements that can be cast to numbers)\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @see R.maxBy\n     * @param {Array} list A list of numbers\n     * @return {Number} The greatest number in the list.\n     * @example\n     *\n     *      R.max([7, 3, 9, 2, 4, 9, 3]); //=> 9\n     */\n    var max = _createMaxMin(_gt, -Infinity);\n\n    /**\n     * Determines the smallest of a list of numbers (or elements that can be cast to numbers)\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list A list of numbers\n     * @return {Number} The greatest number in the list.\n     * @see R.minBy\n     * @example\n     *\n     *      R.min([7, 3, 9, 2, 4, 9, 3]); //=> 2\n     */\n    var min = _createMaxMin(_lt, Infinity);\n\n    /**\n     * Returns `true` if no elements of the list match the predicate,\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n     * @example\n     *\n     *      R.none(R.isNaN, [1, 2, 3]); //=> true\n     *      R.none(R.isNaN, [1, 2, 3, NaN]); //=> false\n     */\n    var none = _curry2(_complement(_dispatchable('any', _xany, _any)));\n\n    /**\n     * Accepts as its arguments a function and any number of values and returns a function that,\n     * when invoked, calls the original function with all of the values prepended to the\n     * original function's arguments list. In some libraries this function is named `applyLeft`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> b -> ... -> i -> j -> ... -> m -> n) -> a -> b-> ... -> i -> (j -> ... -> m -> n)\n     * @param {Function} fn The function to invoke.\n     * @param {...*} [args] Arguments to prepend to `fn` when the returned function is invoked.\n     * @return {Function} A new function wrapping `fn`. When invoked, it will call `fn`\n     *         with `args` prepended to `fn`'s arguments list.\n     * @example\n     *\n     *      var multiply = function(a, b) { return a * b; };\n     *      var double = R.partial(multiply, 2);\n     *      double(2); //=> 4\n     *\n     *      var greet = function(salutation, title, firstName, lastName) {\n     *        return salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *      };\n     *      var sayHello = R.partial(greet, 'Hello');\n     *      var sayHelloToMs = R.partial(sayHello, 'Ms.');\n     *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n     */\n    var partial = curry(_createPartialApplicator(_concat));\n\n    /**\n     * Accepts as its arguments a function and any number of values and returns a function that,\n     * when invoked, calls the original function with all of the values appended to the original\n     * function's arguments list.\n     *\n     * Note that `partialRight` is the opposite of `partial`: `partialRight` fills `fn`'s arguments\n     * from the right to the left.  In some libraries this function is named `applyRight`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> b-> ... -> i -> j -> ... -> m -> n) -> j -> ... -> m -> n -> (a -> b-> ... -> i)\n     * @param {Function} fn The function to invoke.\n     * @param {...*} [args] Arguments to append to `fn` when the returned function is invoked.\n     * @return {Function} A new function wrapping `fn`. When invoked, it will call `fn` with\n     *         `args` appended to `fn`'s arguments list.\n     * @example\n     *\n     *      var greet = function(salutation, title, firstName, lastName) {\n     *        return salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *      };\n     *      var greetMsJaneJones = R.partialRight(greet, 'Ms.', 'Jane', 'Jones');\n     *\n     *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n     */\n    var partialRight = curry(_createPartialApplicator(flip(_concat)));\n\n    /**\n     * Takes a predicate and a list and returns the pair of lists of\n     * elements which do and do not satisfy the predicate, respectively.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [[a],[a]]\n     * @param {Function} pred A predicate to determine which array the element belongs to.\n     * @param {Array} list The array to partition.\n     * @return {Array} A nested array, containing first an array of elements that satisfied the predicate,\n     *         and second an array of elements that did not satisfy.\n     * @example\n     *\n     *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n     *      //=> [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n     */\n    var partition = _curry2(function partition(pred, list) {\n        return _reduce(function (acc, elt) {\n            var xs = acc[pred(elt) ? 0 : 1];\n            xs[xs.length] = elt;\n            return acc;\n        }, [\n            [],\n            []\n        ], list);\n    });\n\n    /**\n     * Creates a new function that runs each of the functions supplied as parameters in turn,\n     * passing the return value of each function invocation to the next function invocation,\n     * beginning with whatever arguments were passed to the initial invocation.\n     *\n     * `pipe` is the mirror version of `compose`. `pipe` is left-associative, which means that\n     * each of the functions provided is executed in order from left to right.\n     *\n     * In some libraries this function is named `sequence`.\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ((a... -> b), (b -> c), ..., (x -> y), (y -> z)) -> (a... -> z)\n     * @param {...Function} functions A variable number of functions.\n     * @return {Function} A new function which represents the result of calling each of the\n     *         input `functions`, passing the result of each function call to the next, from\n     *         left to right.\n     * @example\n     *\n     *      var triple = function(x) { return x * 3; };\n     *      var double = function(x) { return x * 2; };\n     *      var square = function(x) { return x * x; };\n     *      var squareThenDoubleThenTriple = R.pipe(square, double, triple);\n     *\n     *      //≅ triple(double(square(5)))\n     *      squareThenDoubleThenTriple(5); //=> 150\n     */\n    var pipe = function pipe() {\n        return compose.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Creates a new function that runs each of the functions supplied as parameters in turn,\n     * passing to the next function invocation either the value returned by the previous\n     * function or the resolved value if the returned value is a promise. In other words,\n     * if some of the functions in the sequence return promises, `pipeP` pipes the values\n     * asynchronously. If none of the functions return promises, the behavior is the same as\n     * that of `pipe`.\n     *\n     * `pipeP` is the mirror version of `composeP`. `pipeP` is left-associative, which means that\n     * each of the functions provided is executed in order from left to right.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ((a... -> b), (b -> c), ..., (x -> y), (y -> z)) -> (a... -> z)\n     * @param {...Function} functions A variable number of functions.\n     * @return {Function} A new function which represents the result of calling each of the\n     *         input `functions`, passing either the returned result or the asynchronously\n     *         resolved value) of each function call to the next, from left to right.\n     * @example\n     *\n     *      var Q = require('q');\n     *      var triple = function(x) { return x * 3; };\n     *      var double = function(x) { return x * 2; };\n     *      var squareAsync = function(x) { return Q.when(x * x); };\n     *      var squareAsyncThenDoubleThenTriple = R.pipeP(squareAsync, double, triple);\n     *\n     *      //≅ squareAsync(5).then(function(x) { return triple(double(x)) };\n     *      squareAsyncThenDoubleThenTriple(5)\n     *        .then(function(result) {\n     *          // result is 150\n     *        });\n     */\n    var pipeP = function pipeP() {\n        return composeP.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Returns a new list by plucking the same named property off all objects in the list supplied.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig String -> {*} -> [*]\n     * @param {Number|String} key The key name to pluck off of each object.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of values for the given key.\n     * @example\n     *\n     *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n     *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n     */\n    var pluck = _curry2(_pluck);\n\n    /**\n     * Returns a single item by iterating through the list, successively calling the iterator\n     * function and passing it an accumulator value and the current value from the array, and\n     * then passing the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*\n     *\n     * Note: `R.reduce` does not skip deleted or unassigned indices (sparse arrays), unlike\n     * the native `Array.prototype.reduce` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3];\n     *      var add = function(a, b) {\n     *        return a + b;\n     *      };\n     *\n     *      R.reduce(add, 10, numbers); //=> 16\n     */\n    var reduce = _curry3(_reduce);\n\n    /**\n     * Similar to `filter`, except that it keeps only values for which the given predicate\n     * function returns falsy. The predicate function is passed one argument: *(value)*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} The new filtered array.\n     * @example\n     *\n     *      var isOdd = function(n) {\n     *        return n % 2 === 1;\n     *      };\n     *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n     */\n    var reject = _curry2(function reject(fn, list) {\n        return filter(_complement(fn), list);\n    });\n\n    /**\n     * Returns a fixed list of size `n` containing a specified identical value.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> n -> [a]\n     * @param {*} value The value to repeat.\n     * @param {Number} n The desired size of the output list.\n     * @return {Array} A new array containing `n` `value`s.\n     * @example\n     *\n     *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n     *\n     *      var obj = {};\n     *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n     *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n     */\n    var repeat = _curry2(function repeat(value, n) {\n        return times(always(value), n);\n    });\n\n    /**\n     * Returns a list containing the elements of `xs` from `fromIndex` (inclusive)\n     * to `toIndex` (exclusive).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @param {Number} fromIndex The start index (inclusive).\n     * @param {Number} toIndex The end index (exclusive).\n     * @param {Array} xs The list to take elements from.\n     * @return {Array} The slice of `xs` from `fromIndex` to `toIndex`.\n     * @example\n     *\n     *      var xs = R.range(0, 10);\n     *      R.slice(2, 5)(xs); //=> [2, 3, 4]\n     */\n    var slice = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, xs) {\n        return Array.prototype.slice.call(xs, fromIndex, toIndex);\n    }));\n\n    /**\n     * Returns a copy of the list, sorted according to the comparator function, which should accept two values at a\n     * time and return a negative number if the first value is smaller, a positive number if it's larger, and zero\n     * if they are equal.  Please note that this is a **copy** of the list.  It does not modify the original.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,a -> Number) -> [a] -> [a]\n     * @param {Function} comparator A sorting function :: a -> b -> Int\n     * @param {Array} list The list to sort\n     * @return {Array} a new array with its elements sorted by the comparator function.\n     * @example\n     *\n     *      var diff = function(a, b) { return a - b; };\n     *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n     */\n    var sort = _curry2(function sort(comparator, list) {\n        return clone(list).sort(comparator);\n    });\n\n    /**\n     * Splits a string into an array of strings based on the given\n     * separator.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String -> [String]\n     * @param {String} sep The separator string.\n     * @param {String} str The string to separate into an array.\n     * @return {Array} The array of strings from `str` separated by `str`.\n     * @example\n     *\n     *      var pathComponents = R.split('/');\n     *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n     *\n     *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n     */\n    var split = invoker(1, 'split');\n\n    /**\n     * Returns a string containing the characters of `str` from `fromIndex`\n     * (inclusive) to `toIndex` (exclusive).\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig Number -> Number -> String -> String\n     * @param {Number} fromIndex The start index (inclusive).\n     * @param {Number} toIndex The end index (exclusive).\n     * @param {String} str The string to slice.\n     * @return {String}\n     * @see R.slice\n     * @example\n     *\n     *      R.substring(2, 5, 'abcdefghijklm'); //=> 'cde'\n     */\n    var substring = slice;\n\n    /**\n     * Returns a string containing the characters of `str` from `fromIndex`\n     * (inclusive) to the end of `str`.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig Number -> String -> String\n     * @param {Number} fromIndex\n     * @param {String} str\n     * @return {String}\n     * @example\n     *\n     *      R.substringFrom(3, 'Ramda'); //=> 'da'\n     *      R.substringFrom(-2, 'Ramda'); //=> 'da'\n     */\n    var substringFrom = substring(__, Infinity);\n\n    /**\n     * Returns a string containing the first `toIndex` characters of `str`.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig Number -> String -> String\n     * @param {Number} toIndex\n     * @param {String} str\n     * @return {String}\n     * @example\n     *\n     *      R.substringTo(3, 'Ramda'); //=> 'Ram'\n     *      R.substringTo(-2, 'Ramda'); //=> 'Ram'\n     */\n    var substringTo = substring(0);\n\n    /**\n     * Adds together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The sum of all the numbers in the list.\n     * @see reduce\n     * @example\n     *\n     *      R.sum([2,4,6,8,100,1]); //=> 121\n     */\n    var sum = reduce(_add, 0);\n\n    /**\n     * Returns all but the first element of a list. If the list provided has the `tail` method,\n     * it will instead return `list.tail()`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} A new array containing all but the first element of the input list, or an\n     *         empty list if the input list is empty.\n     * @example\n     *\n     *      R.tail(['fi', 'fo', 'fum']); //=> ['fo', 'fum']\n     */\n    var tail = _checkForMethod('tail', function (list) {\n        return _slice(list, 1);\n    });\n\n    /**\n     * Returns a new list containing the first `n` elements of the given list.  If\n     * `n > * list.length`, returns a list of `list.length` elements.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @param {Number} n The number of elements to return.\n     * @param {Array} list The array to query.\n     * @return {Array} A new array containing the first elements of `list`.\n     * @example\n     *\n     *      R.take(3,[1,2,3,4,5]); //=> [1,2,3]\n     *\n     *      var members= [ \"Paul Desmond\",\"Bob Bates\",\"Joe Dodge\",\"Ron Crotty\",\"Lloyd Davis\",\"Joe Morello\",\"Norman Bates\",\n     *                     \"Eugene Wright\",\"Gerry Mulligan\",\"Jack Six\",\"Alan Dawson\",\"Darius Brubeck\",\"Chris Brubeck\",\n     *                     \"Dan Brubeck\",\"Bobby Militello\",\"Michael Moore\",\"Randy Jones\"];\n     *      var takeFive = R.take(5);\n     *      takeFive(members); //=> [\"Paul Desmond\",\"Bob Bates\",\"Joe Dodge\",\"Ron Crotty\",\"Lloyd Davis\"]\n     */\n    var take = _curry2(_dispatchable('take', _xtake, function take(n, list) {\n        return _slice(list, 0, Math.min(n, list.length));\n    }));\n\n    /**\n     * Returns a new list containing the first `n` elements of a given list, passing each value\n     * to the supplied predicate function, and terminating when the predicate function returns\n     * `false`. Excludes the element that caused the predicate function to fail. The predicate\n     * function is passed one argument: *(value)*.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @example\n     *\n     *      var isNotFour = function(x) {\n     *        return !(x === 4);\n     *      };\n     *\n     *      R.takeWhile(isNotFour, [1, 2, 3, 4]); //=> [1, 2, 3]\n     */\n    var takeWhile = _curry2(_dispatchable('takeWhile', _xtakeWhile, function takeWhile(fn, list) {\n        var idx = -1, len = list.length;\n        while (++idx < len && fn(list[idx])) {\n        }\n        return _slice(list, 0, idx);\n    }));\n\n    /**\n     * The lower case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to lower case.\n     * @return {String} The lower case version of `str`.\n     * @example\n     *\n     *      R.toLower('XYZ'); //=> 'xyz'\n     */\n    var toLower = invoker(0, 'toLowerCase');\n\n    /**\n     * The upper case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to upper case.\n     * @return {String} The upper case version of `str`.\n     * @example\n     *\n     *      R.toUpper('abc'); //=> 'ABC'\n     */\n    var toUpper = invoker(0, 'toUpperCase');\n\n    /**\n     * Initializes a transducer using supplied iterator function. Returns a single item by\n     * iterating through the list, successively calling the transformed iterator function and\n     * passing it an accumulator value and the current value from the array, and then passing\n     * the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*. It will be wrapped as a\n     * transformer to initialize the transducer. A transformer can be passed directly in place\n     * of an iterator function.\n     *\n     * A transducer is a function that accepts a transformer and returns a transformer and can\n     * be composed directly.\n     *\n     * A transformer is an an object that provides a 2-arity reducing iterator function, step,\n     * 0-arity initial value function, init, and 1-arity result extraction function, result.\n     * The step function is used as the iterator function in reduce. The result function is used\n     * to convert the final accumulator into the return type and in most cases is R.identity.\n     * The init function can be used to provide an initial accumulator, but is ignored by transduce.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (c -> c) -> (a,b -> a) -> a -> [b] -> a\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array. Wrapped as transformer, if necessary, and used to\n     *        initialize the transducer\n     * @param {*} acc The initial accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @see R.into\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n     */\n    var transduce = curryN(4, function (xf, fn, acc, list) {\n        return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n    });\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the elements of each list.  Duplication is\n     * determined according to the value returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a,a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @see R.union\n     * @example\n     *\n     *      function cmp(x, y) { return x.a === y.a; }\n     *      var l1 = [{a: 1}, {a: 2}];\n     *      var l2 = [{a: 1}, {a: 4}];\n     *      R.unionWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n     */\n    var unionWith = _curry3(function unionWith(pred, list1, list2) {\n        return uniqWith(pred, _concat(list1, list2));\n    });\n\n    /**\n     * Returns a new list containing only one copy of each element in the original list.\n     * Equality is strict here, meaning reference equality for objects and non-coercing equality\n     * for primitives.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n     *      R.uniq([{}, {}]);     //=> [{}, {}]\n     *      R.uniq([1, '1']);     //=> [1, '1']\n     */\n    var uniq = _curry1(function uniq(list) {\n        var idx = -1, len = list.length;\n        var result = [], item;\n        while (++idx < len) {\n            item = list[idx];\n            if (!_contains(item, result)) {\n                result[result.length] = item;\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list by pulling every item at the first level of nesting out, and putting\n     * them in a new array.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b]\n     * @param {Array} list The array to consider.\n     * @return {Array} The flattened list.\n     * @example\n     *\n     *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n     *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n     */\n    var unnest = _curry1(_makeFlat(false));\n\n    /**\n     * Accepts a function `fn` and any number of transformer functions and returns a new\n     * function. When the new function is invoked, it calls the function `fn` with parameters\n     * consisting of the result of calling each supplied handler on successive arguments to the\n     * new function.\n     *\n     * If more arguments are passed to the returned function than transformer functions, those\n     * arguments are passed directly to `fn` as additional parameters. If you expect additional\n     * arguments that don't need to be transformed, although you can ignore them, it's best to\n     * pass an identity function so that the new function reports the correct arity.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ((* -> *), (* -> *)...) -> (* -> *)\n     * @param {Function} fn The function to wrap.\n     * @param {...Function} transformers A variable number of transformer functions\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      // Example 1:\n     *\n     *      // Number -> [Person] -> [Person]\n     *      var byAge = R.useWith(R.filter, R.propEq('age'), R.identity);\n     *\n     *      var kids = [\n     *        {name: 'Abbie', age: 6},\n     *        {name: 'Brian', age: 5},\n     *        {name: 'Chris', age: 6},\n     *        {name: 'David', age: 4},\n     *        {name: 'Ellie', age: 5}\n     *      ];\n     *\n     *      byAge(5, kids); //=> [{name: 'Brian', age: 5}, {name: 'Ellie', age: 5}]\n     *\n     *      // Example 2:\n     *\n     *      var double = function(y) { return y * 2; };\n     *      var square = function(x) { return x * x; };\n     *      var add = function(a, b) { return a + b; };\n     *      // Adds any number of arguments together\n     *      var addAll = function() {\n     *        return R.reduce(add, 0, arguments);\n     *      };\n     *\n     *      // Basic example\n     *      var addDoubleAndSquare = R.useWith(addAll, double, square);\n     *\n     *      //≅ addAll(double(10), square(5));\n     *      addDoubleAndSquare(10, 5); //=> 45\n     *\n     *      // Example of passing more arguments than transformers\n     *      //≅ addAll(double(10), square(5), 100);\n     *      addDoubleAndSquare(10, 5, 100); //=> 145\n     *\n     *      // If there are extra _expected_ arguments that don't need to be transformed, although\n     *      // you can ignore them, it might be best to pass in the identity function so that the new\n     *      // function correctly reports arity.\n     *      var addDoubleAndSquareWithExtraParams = R.useWith(addAll, double, square, R.identity);\n     *      // addDoubleAndSquareWithExtraParams.length //=> 3\n     *      //≅ addAll(double(10), square(5), R.identity(100));\n     *      addDoubleAndSquare(10, 5, 100); //=> 145\n     */\n    /*, transformers */\n    var useWith = curry(function useWith(fn) {\n        var transformers = _slice(arguments, 1);\n        var tlen = transformers.length;\n        return curry(arity(tlen, function () {\n            var args = [], idx = -1;\n            while (++idx < tlen) {\n                args[idx] = transformers[idx](arguments[idx]);\n            }\n            return fn.apply(this, args.concat(_slice(arguments, tlen)));\n        }));\n    });\n\n    /**\n     * Returns a list of all the enumerable own properties of the supplied object.\n     * Note that the order of the output array is not guaranteed across\n     * different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own properties.\n     * @example\n     *\n     *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n     */\n    var values = _curry1(function values(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var vals = [];\n        var idx = -1;\n        while (++idx < len) {\n            vals[idx] = obj[props[idx]];\n        }\n        return vals;\n    });\n\n    /**\n     * Takes a spec object and a test object and returns true if the test satisfies the spec.\n     * Any property on the spec that is not a function is interpreted as an equality\n     * relation.\n     *\n     * If the spec has a property mapped to a function, then `where` evaluates the function, passing in\n     * the test object's value for the property in question, as well as the whole test object.\n     *\n     * `where` is well suited to declaratively expressing constraints for other functions, e.g.,\n     * `filter`, `find`, `pickBy`, etc.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> {k: v} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @example\n     *\n     *      var spec = {x: 2};\n     *      R.where(spec, {w: 10, x: 2, y: 300}); //=> true\n     *      R.where(spec, {x: 1, y: 'moo', z: true}); //=> false\n     *\n     *      var spec2 = {x: function(val, obj) { return  val + obj.y > 10; }};\n     *      R.where(spec2, {x: 2, y: 7}); //=> false\n     *      R.where(spec2, {x: 3, y: 8}); //=> true\n     *\n     *      var xs = [{x: 2, y: 1}, {x: 10, y: 2}, {x: 8, y: 3}, {x: 10, y: 4}];\n     *      R.filter(R.where({x: 10}), xs); // ==> [{x: 10, y: 2}, {x: 10, y: 4}]\n     */\n    var where = _curry2(function where(spec, testObj) {\n        var parsedSpec = groupBy(function (key) {\n            return typeof spec[key] === 'function' ? 'fn' : 'obj';\n        }, keys(spec));\n        return _satisfiesSpec(spec, parsedSpec, testObj);\n    });\n\n    // The algorithm used to handle cyclic structures is\n    // inspired by underscore's isEqual\n    // RegExp equality algorithm: http://stackoverflow.com/a/10776635\n    var _eqDeep = function _eqDeep(a, b, stackA, stackB) {\n        var typeA = type(a);\n        if (typeA !== type(b)) {\n            return false;\n        }\n        if (eq(a, b)) {\n            return true;\n        }\n        if (typeA == 'RegExp') {\n            // RegExp equality algorithm: http://stackoverflow.com/a/10776635\n            return a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode;\n        }\n        if (Object(a) === a) {\n            if (typeA === 'Date' && a.getTime() != b.getTime()) {\n                return false;\n            }\n            var keysA = keys(a);\n            if (keysA.length !== keys(b).length) {\n                return false;\n            }\n            var idx = stackA.length;\n            while (--idx >= 0) {\n                if (stackA[idx] === a) {\n                    return stackB[idx] === b;\n                }\n            }\n            stackA[stackA.length] = a;\n            stackB[stackB.length] = b;\n            idx = keysA.length;\n            while (--idx >= 0) {\n                var key = keysA[idx];\n                if (!_has(key, b) || !_eqDeep(b[key], a[key], stackA, stackB)) {\n                    return false;\n                }\n            }\n            stackA.pop();\n            stackB.pop();\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * Assigns own enumerable properties of the other object to the destination\n     * object preferring items in other.\n     *\n     * @private\n     * @memberOf R\n     * @category Object\n     * @param {Object} destination The destination object.\n     * @param {Object} other The other object to merge with destination.\n     * @return {Object} The destination object.\n     * @example\n     *\n     *      _extend({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n     *      //=> { 'name': 'fred', 'age': 40 }\n     */\n    var _extend = function _extend(destination, other) {\n        var props = keys(other);\n        var idx = -1, length = props.length;\n        while (++idx < length) {\n            destination[props[idx]] = other[props[idx]];\n        }\n        return destination;\n    };\n\n    /**\n     * Create a predicate wrapper which will call a pick function (all/any) for each predicate\n     *\n     * @private\n     * @see R.all\n     * @see R.any\n     */\n    // Call function immediately if given arguments\n    // Return a function which will call the predicates with the provided arguments\n    var _predicateWrap = function _predicateWrap(predPicker) {\n        return function (preds) {\n            var predIterator = function () {\n                var args = arguments;\n                return predPicker(function (predicate) {\n                    return predicate.apply(null, args);\n                }, preds);\n            };\n            return arguments.length > 1 ? // Call function immediately if given arguments\n            predIterator.apply(null, _slice(arguments, 1)) : // Return a function which will call the predicates with the provided arguments\n            arity(max(_pluck('length', preds)), predIterator);\n        };\n    };\n\n    /**\n     * Given a list of predicates, returns a new predicate that will be true exactly when all of them are.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} list An array of predicate functions\n     * @param {*} optional Any arguments to pass into the predicates\n     * @return {Function} a function that applies its arguments to each of\n     *         the predicates, returning `true` if all are satisfied.\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0};\n     *      var f = R.allPass([gt10, even]);\n     *      f(11); //=> false\n     *      f(12); //=> true\n     */\n    var allPass = curry(_predicateWrap(_all));\n\n    /**\n     * Given a list of predicates returns a new predicate that will be true exactly when any one of them is.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} list An array of predicate functions\n     * @param {*} optional Any arguments to pass into the predicates\n     * @return {Function} A function that applies its arguments to each of the predicates, returning\n     *         `true` if all are satisfied.\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0};\n     *      var f = R.anyPass([gt10, even]);\n     *      f(11); //=> true\n     *      f(8); //=> true\n     *      f(9); //=> false\n     */\n    var anyPass = curry(_predicateWrap(_any));\n\n    /**\n     * ap applies a list of functions to a list of values.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig [f] -> [a] -> [f a]\n     * @param {Array} fns An array of functions\n     * @param {Array} vs An array of values\n     * @return {Array} An array of results of applying each of `fns` to all of `vs` in turn.\n     * @example\n     *\n     *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n     */\n    var ap = _curry2(function ap(fns, vs) {\n        return _hasMethod('ap', fns) ? fns.ap(vs) : _reduce(function (acc, fn) {\n            return _concat(acc, map(fn, vs));\n        }, [], fns);\n    });\n\n    /**\n     * Returns the result of calling its first argument with the remaining\n     * arguments. This is occasionally useful as a converging function for\n     * `R.converge`: the left branch can produce a function while the right\n     * branch produces a value to be passed to that function as an argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (*... -> a),*... -> a\n     * @param {Function} fn The function to apply to the remaining arguments.\n     * @param {...*} args Any number of positional arguments.\n     * @return {*}\n     * @example\n     *\n     *      var indentN = R.pipe(R.times(R.always(' ')),\n     *                           R.join(''),\n     *                           R.replace(/^(?!$)/gm));\n     *\n     *      var format = R.converge(R.call,\n     *                              R.pipe(R.prop('indent'), indentN),\n     *                              R.prop('value'));\n     *\n     *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n     */\n    var call = curry(function call(fn) {\n        return fn.apply(this, _slice(arguments, 1));\n    });\n\n    /**\n     * `chain` maps a function over a list and concatenates the results.\n     * This implementation is compatible with the\n     * Fantasy-land Chain spec, and will work with types that implement that spec.\n     * `chain` is also known as `flatMap` in some libraries\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> [b]) -> [a] -> [b]\n     * @param {Function} fn\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      var duplicate = function(n) {\n     *        return [n, n];\n     *      };\n     *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n     */\n    var chain = _curry2(_checkForMethod('chain', function chain(f, list) {\n        return unnest(_map(f, list));\n    }));\n\n    /**\n     * The character at the nth position in a String:\n     *\n     * @deprecated since v0.12.0\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig Number -> String -> String\n     * @param {Number} index An integer between 0 and the length of the string.\n     * @param {String} str The string to extract a char from\n     * @return {String} The character at `index` of `str`.\n     * @see R.nthChar\n     * @example\n     *\n     *      R.charAt(8, 'abcdefghijklm'); //=> 'i'\n     */\n    var charAt = invoker(1, 'charAt');\n\n    /**\n     * The ascii code of the character at the nth position in a String:\n     *\n     * @deprecated since v0.12.0\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig Number -> String -> Number\n     * @param {Number} index An integer between 0 and the length of the string.\n     * @param {String} str The string to extract a charCode from\n     * @return {Number} The code of the character at `index` of `str`.\n     * @see R.nthCharCode\n     * @example\n     *\n     *      R.charCodeAt(8, 'abcdefghijklm'); //=> 105\n     *      // (... 'a' ~ 97, 'b' ~ 98, ... 'i' ~ 105)\n     */\n    var charCodeAt = invoker(1, 'charCodeAt');\n\n    /**\n     * Turns a list of Functors into a Functor of a list, applying\n     * a mapping function to the elements of the list along the way.\n     *\n     * Note: `commuteMap` may be more useful to convert a list of non-Array Functors (e.g.\n     * Maybe, Either, etc.) to Functor of a list.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.commute\n     * @sig (a -> (b -> c)) -> (x -> [x]) -> [[*]...]\n     * @param {Function} fn The transformation function\n     * @param {Function} of A function that returns the data type to return\n     * @param {Array} list An Array (or other Functor) of Arrays (or other Functors)\n     * @return {Array}\n     * @example\n     *\n     *     var plus10map = R.map(function(x) { return x + 10; });\n     *     var as = [[1], [3, 4]];\n     *     R.commuteMap(R.map(function(x) { return x + 10; }), R.of, as); //=> [[11, 13], [11, 14]]\n     *\n     *     var bs = [[1, 2], [3]];\n     *     R.commuteMap(plus10map, R.of, bs); //=> [[11, 13], [12, 13]]\n     *\n     *     var cs = [[1, 2], [3, 4]];\n     *     R.commuteMap(plus10map, R.of, cs); //=> [[11, 13], [12, 13], [11, 14], [12, 14]]\n     */\n    var commuteMap = _curry3(function commuteMap(fn, of, list) {\n        function consF(acc, ftor) {\n            return ap(map(append, fn(ftor)), acc);\n        }\n        return _reduce(consF, of([]), list);\n    });\n\n    /**\n     * Wraps a constructor function inside a curried function that can be called with the same\n     * arguments and returns the same type. The arity of the function returned is specified\n     * to allow using variadic constructor functions.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (* -> {*}) -> (* -> {*})\n     * @param {Number} n The arity of the constructor function.\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Variadic constructor function\n     *      var Widget = function() {\n     *        this.children = Array.prototype.slice.call(arguments);\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = {\n     *        // ...\n     *      };\n     *      R.map(R.constructN(1, Widget), allConfigs); // a list of Widgets\n     */\n    var constructN = _curry2(function constructN(n, Fn) {\n        if (n > 10) {\n            throw new Error('Constructor with greater than ten arguments');\n        }\n        if (n === 0) {\n            return function () {\n                return new Fn();\n            };\n        }\n        return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n            switch (arguments.length) {\n            case 1:\n                return new Fn($0);\n            case 2:\n                return new Fn($0, $1);\n            case 3:\n                return new Fn($0, $1, $2);\n            case 4:\n                return new Fn($0, $1, $2, $3);\n            case 5:\n                return new Fn($0, $1, $2, $3, $4);\n            case 6:\n                return new Fn($0, $1, $2, $3, $4, $5);\n            case 7:\n                return new Fn($0, $1, $2, $3, $4, $5, $6);\n            case 8:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n            case 9:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n            case 10:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n            }\n        }));\n    });\n\n    /**\n     * Performs a deep test on whether two items are equal.\n     * Equality implies the two items are semmatically equivalent.\n     * Cyclic structures are handled as expected\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig a -> b -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      var o = {};\n     *      R.eqDeep(o, o); //=> true\n     *      R.eqDeep(o, {}); //=> true\n     *      R.eqDeep(1, 1); //=> true\n     *      R.eqDeep(1, '1'); //=> false\n     *\n     *      var a = {}; a.v = a;\n     *      var b = {}; b.v = b;\n     *      R.eqDeep(a, b); //=> true\n     */\n    var eqDeep = _curry2(function eqDeep(a, b) {\n        return _eqDeep(a, b, [], []);\n    });\n\n    /**\n     * Creates a new object by evolving a shallow copy of `object`, according to the\n     * `transformation` functions.  All non-primitive properties are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n     * @param {Object} transformations The object specifying transformation functions to apply\n     *        to the object.\n     * @param {Object} object The object to be transformed.\n     * @return {Object} The transformed object.\n     * @example\n     *\n     *      R.evolve({ elapsed: R.add(1), remaining: R.add(-1) }, { name: 'Tomato', elapsed: 100, remaining: 1400 }); //=> { name: 'Tomato', elapsed: 101, remaining: 1399 }\n     */\n    var evolve = _curry2(function evolve(transformations, object) {\n        return _extend(_extend({}, object), mapObjIndexed(function (fn, key) {\n            return fn(object[key]);\n        }, transformations));\n    });\n\n    /**\n     * Returns a list of function names of object's own functions\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {*} -> [String]\n     * @param {Object} obj The objects with functions in it\n     * @return {Array} A list of the object's own properties that map to functions.\n     * @example\n     *\n     *      R.functions(R); // returns list of ramda's own function names\n     *\n     *      var F = function() { this.x = function(){}; this.y = 1; }\n     *      F.prototype.z = function() {};\n     *      F.prototype.a = 100;\n     *      R.functions(new F()); //=> [\"x\"]\n     */\n    var functions = _curry1(_functionsWith(keys));\n\n    /**\n     * Returns all but the last element of a list.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} A new array containing all but the last element of the input list, or an\n     *         empty list if the input list is empty.\n     * @example\n     *\n     *      R.init(['fi', 'fo', 'fum']); //=> ['fi', 'fo']\n     */\n    var init = slice(0, -1);\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those elements common to both lists.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @see R.intersectionWith\n     * @return {Array} The list of elements found in both `list1` and `list2`.\n     * @example\n     *\n     *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n     */\n    var intersection = _curry2(function intersection(list1, list2) {\n        return uniq(_filter(flip(_contains)(list1), list2));\n    });\n\n    /**\n     * Same as R.invertObj, however this accounts for objects\n     * with duplicate values by putting the values into an\n     * array.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {s: x} -> {x: [ s, ... ]}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object with keys\n     * in an array.\n     * @example\n     *\n     *      var raceResultsByFirstName = {\n     *        first: 'alice',\n     *        second: 'jake',\n     *        third: 'alice',\n     *      };\n     *      R.invert(raceResultsByFirstName);\n     *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n     */\n    var invert = _curry1(function invert(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var idx = -1;\n        var out = {};\n        while (++idx < len) {\n            var key = props[idx];\n            var val = obj[key];\n            var list = _has(val, out) ? out[val] : out[val] = [];\n            list[list.length] = key;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new object with the keys of the given object\n     * as values, and the values of the given object as keys.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {s: x} -> {x: s}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object\n     * @example\n     *\n     *      var raceResults = {\n     *        first: 'alice',\n     *        second: 'jake'\n     *      };\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': 'first', 'jake':'second' }\n     *\n     *      // Alternatively:\n     *      var raceResults = ['alice', 'jake'];\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': '0', 'jake':'1' }\n     */\n    var invertObj = _curry1(function invertObj(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var idx = -1;\n        var out = {};\n        while (++idx < len) {\n            var key = props[idx];\n            out[obj[key]] = key;\n        }\n        return out;\n    });\n\n    /**\n     * \"lifts\" a function to be the specified arity, so that it may \"map over\" that many\n     * lists (or other Functors).\n     *\n     * @func\n     * @memberOf R\n     * @see R.lift\n     * @category Function\n     * @sig Number -> (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The function `fn` applicable to mappable objects.\n     * @example\n     *\n     *     var madd3 = R.liftN(3, R.curryN(3, function() {\n     *       return R.reduce(R.add, 0, arguments);\n     *     }));\n     *     madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     */\n    var liftN = _curry2(function liftN(arity, fn) {\n        var lifted = curryN(arity, fn);\n        return curryN(arity, function () {\n            return _reduce(ap, map(lifted, arguments[0]), _slice(arguments, 1));\n        });\n    });\n\n    /**\n     * Create a new object with the own properties of a\n     * merged with the own properties of object b.\n     * This function will *not* mutate passed-in objects.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> {k: v} -> {k: v}\n     * @param {Object} a source object\n     * @param {Object} b object with higher precedence in output\n     * @return {Object} The destination object.\n     * @example\n     *\n     *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n     *      //=> { 'name': 'fred', 'age': 40 }\n     *\n     *      var resetToDefault = R.merge(R.__, {x: 0});\n     *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n     */\n    var merge = _curry2(function merge(a, b) {\n        return _extend(_extend({}, a), b);\n    });\n\n    /**\n     * Merges a list of objects together into one object.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [{k: v}] -> {k: v}\n     * @param {Array} list An array of objects\n     * @return {Object} A merged object.\n     * @see reduce\n     * @example\n     *\n     *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n     *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n     */\n    var mergeAll = _curry1(function mergeAll(list) {\n        return reduce(merge, {}, list);\n    });\n\n    /**\n     * Multiplies together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The product of all the numbers in the list.\n     * @see reduce\n     * @example\n     *\n     *      R.product([2,4,6,8,100,1]); //=> 38400\n     */\n    var product = reduce(_multiply, 1);\n\n    /**\n     * Reasonable analog to SQL `select` statement.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @category Relation\n     * @sig [k] -> [{k: v}] -> [{k: v}]\n     * @param {Array} props The property names to project\n     * @param {Array} objs The objects to query\n     * @return {Array} An array of objects with just the `props` properties.\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n     *      var kids = [abby, fred];\n     *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n     */\n    // passing `identity` gives correct arity\n    var project = useWith(_map, pickAll, identity);\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the\n     * elements of each list.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @example\n     *\n     *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n     */\n    var union = _curry2(compose(uniq, _concat));\n\n    var _stepCat = function () {\n        var _stepCatArray = {\n            init: Array,\n            step: function (xs, x) {\n                return _concat(xs, [x]);\n            },\n            result: _identity\n        };\n        var _stepCatString = {\n            init: String,\n            step: _add,\n            result: _identity\n        };\n        var _stepCatObject = {\n            init: Object,\n            step: function (result, input) {\n                return merge(result, isArrayLike(input) ? _createMapEntry(input[0], input[1]) : input);\n            },\n            result: _identity\n        };\n        return function _stepCat(obj) {\n            if (_isTransformer(obj)) {\n                return obj;\n            }\n            if (isArrayLike(obj)) {\n                return _stepCatArray;\n            }\n            if (typeof obj === 'string') {\n                return _stepCatString;\n            }\n            if (typeof obj === 'object') {\n                return _stepCatObject;\n            }\n            throw new Error('Cannot create transformer for ' + obj);\n        };\n    }();\n\n    /**\n     * Turns a list of Functors into a Functor of a list.\n     *\n     * Note: `commute` may be more useful to convert a list of non-Array Functors (e.g.\n     * Maybe, Either, etc.) to Functor of a list.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.commuteMap\n     * @sig (x -> [x]) -> [[*]...]\n     * @param {Function} of A function that returns the data type to return\n     * @param {Array} list An Array (or other Functor) of Arrays (or other Functors)\n     * @return {Array}\n     * @example\n     *\n     *     var as = [[1], [3, 4]];\n     *     R.commute(R.of, as); //=> [[1, 3], [1, 4]]\n     *\n     *     var bs = [[1, 2], [3]];\n     *     R.commute(R.of, bs); //=> [[1, 3], [2, 3]]\n     *\n     *     var cs = [[1, 2], [3, 4]];\n     *     R.commute(R.of, cs); //=> [[1, 3], [2, 3], [1, 4], [2, 4]]\n     */\n    var commute = commuteMap(map(identity));\n\n    /**\n     * Wraps a constructor function inside a curried function that can be called with the same\n     * arguments and returns the same type.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> {*}) -> (* -> {*})\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Constructor function\n     *      var Widget = function(config) {\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = {\n     *        // ...\n     *      };\n     *      R.map(R.construct(Widget), allConfigs); // a list of Widgets\n     */\n    var construct = _curry1(function construct(Fn) {\n        return constructN(Fn.length, Fn);\n    });\n\n    /**\n     * Transforms the items of the list with the transducer and appends the transformed items to\n     * the accumulator using an appropriate iterator function based on the accumulator type.\n     *\n     * The accumulator can be an array, string, object or a transformer. Iterated items will\n     * be appended to arrays and concatenated to strings. Objects will be merged directly or 2-item\n     * arrays will be merged as key, value pairs.\n     *\n     * The accumulator can also be a transformer object that provides a 2-arity reducing iterator\n     * function, step, 0-arity initial value function, init, and 1-arity result extraction function\n     * result. The step function is used as the iterator function in reduce. The result function is\n     * used to convert the final accumulator into the return type and in most cases is R.identity.\n     * The init function is used to provide the initial accumulator.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> (b -> b) -> [c] -> a\n     * @param {*} acc The initial accumulator value.\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.into([], transducer, numbers); //=> [2, 3]\n     *\n     *      var intoArray = R.into([]);\n     *      intoArray(transducer, numbers); //=> [2, 3]\n     */\n    var into = _curry3(function into(acc, xf, list) {\n        return _isTransformer(acc) ? _reduce(xf(acc), acc.init(), list) : _reduce(xf(_stepCat(acc)), acc, list);\n    });\n\n    /**\n     * \"lifts\" a function of arity > 1 so that it may \"map over\" an Array or\n     * other Functor.\n     *\n     * @func\n     * @memberOf R\n     * @see R.liftN\n     * @category Function\n     * @sig (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The function `fn` applicable to mappable objects.\n     * @example\n     *\n     *     var madd3 = R.lift(R.curry(function(a, b, c) {\n     *       return a + b + c;\n     *     }));\n     *     madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     *\n     *     var madd5 = R.lift(R.curry(function(a, b, c, d, e) {\n     *       return a + b + c + d + e;\n     *     }));\n     *     madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n     */\n    var lift = _curry1(function lift(fn) {\n        return liftN(fn.length, fn);\n    });\n\n    var R = {\n        F: F,\n        T: T,\n        __: __,\n        add: add,\n        all: all,\n        allPass: allPass,\n        always: always,\n        and: and,\n        any: any,\n        anyPass: anyPass,\n        ap: ap,\n        aperture: aperture,\n        append: append,\n        apply: apply,\n        arity: arity,\n        assoc: assoc,\n        assocPath: assocPath,\n        binary: binary,\n        bind: bind,\n        both: both,\n        call: call,\n        chain: chain,\n        charAt: charAt,\n        charCodeAt: charCodeAt,\n        clone: clone,\n        commute: commute,\n        commuteMap: commuteMap,\n        comparator: comparator,\n        complement: complement,\n        compose: compose,\n        composeP: composeP,\n        concat: concat,\n        cond: cond,\n        construct: construct,\n        constructN: constructN,\n        contains: contains,\n        containsWith: containsWith,\n        converge: converge,\n        countBy: countBy,\n        createMapEntry: createMapEntry,\n        curry: curry,\n        curryN: curryN,\n        dec: dec,\n        defaultTo: defaultTo,\n        difference: difference,\n        differenceWith: differenceWith,\n        dissoc: dissoc,\n        dissocPath: dissocPath,\n        divide: divide,\n        drop: drop,\n        dropWhile: dropWhile,\n        either: either,\n        empty: empty,\n        eq: eq,\n        eqDeep: eqDeep,\n        eqProps: eqProps,\n        evolve: evolve,\n        filter: filter,\n        filterIndexed: filterIndexed,\n        find: find,\n        findIndex: findIndex,\n        findLast: findLast,\n        findLastIndex: findLastIndex,\n        flatten: flatten,\n        flip: flip,\n        forEach: forEach,\n        forEachIndexed: forEachIndexed,\n        fromPairs: fromPairs,\n        func: func,\n        functions: functions,\n        functionsIn: functionsIn,\n        groupBy: groupBy,\n        gt: gt,\n        gte: gte,\n        has: has,\n        hasIn: hasIn,\n        head: head,\n        identity: identity,\n        ifElse: ifElse,\n        inc: inc,\n        indexOf: indexOf,\n        init: init,\n        insert: insert,\n        insertAll: insertAll,\n        intersection: intersection,\n        intersectionWith: intersectionWith,\n        into: into,\n        invert: invert,\n        invertObj: invertObj,\n        invoke: invoke,\n        invoker: invoker,\n        is: is,\n        isArrayLike: isArrayLike,\n        isEmpty: isEmpty,\n        isNaN: isNaN,\n        isNil: isNil,\n        isSet: isSet,\n        join: join,\n        keys: keys,\n        keysIn: keysIn,\n        last: last,\n        lastIndexOf: lastIndexOf,\n        length: length,\n        lens: lens,\n        lensOn: lensOn,\n        lift: lift,\n        liftN: liftN,\n        lt: lt,\n        lte: lte,\n        map: map,\n        mapAccum: mapAccum,\n        mapAccumRight: mapAccumRight,\n        mapIndexed: mapIndexed,\n        mapObj: mapObj,\n        mapObjIndexed: mapObjIndexed,\n        match: match,\n        mathMod: mathMod,\n        max: max,\n        maxBy: maxBy,\n        memoize: memoize,\n        merge: merge,\n        mergeAll: mergeAll,\n        min: min,\n        minBy: minBy,\n        modulo: modulo,\n        multiply: multiply,\n        nAry: nAry,\n        negate: negate,\n        none: none,\n        not: not,\n        nth: nth,\n        nthArg: nthArg,\n        nthChar: nthChar,\n        nthCharCode: nthCharCode,\n        of: of,\n        omit: omit,\n        once: once,\n        or: or,\n        partial: partial,\n        partialRight: partialRight,\n        partition: partition,\n        path: path,\n        pathEq: pathEq,\n        pick: pick,\n        pickAll: pickAll,\n        pickBy: pickBy,\n        pipe: pipe,\n        pipeP: pipeP,\n        pluck: pluck,\n        prepend: prepend,\n        product: product,\n        project: project,\n        prop: prop,\n        propEq: propEq,\n        propOr: propOr,\n        props: props,\n        range: range,\n        reduce: reduce,\n        reduceIndexed: reduceIndexed,\n        reduceRight: reduceRight,\n        reduceRightIndexed: reduceRightIndexed,\n        reject: reject,\n        rejectIndexed: rejectIndexed,\n        remove: remove,\n        repeat: repeat,\n        replace: replace,\n        reverse: reverse,\n        scan: scan,\n        slice: slice,\n        sort: sort,\n        sortBy: sortBy,\n        split: split,\n        strIndexOf: strIndexOf,\n        strLastIndexOf: strLastIndexOf,\n        substring: substring,\n        substringFrom: substringFrom,\n        substringTo: substringTo,\n        subtract: subtract,\n        sum: sum,\n        tail: tail,\n        take: take,\n        takeWhile: takeWhile,\n        tap: tap,\n        test: test,\n        times: times,\n        toLower: toLower,\n        toPairs: toPairs,\n        toPairsIn: toPairsIn,\n        toUpper: toUpper,\n        transduce: transduce,\n        trim: trim,\n        type: type,\n        unapply: unapply,\n        unary: unary,\n        unfold: unfold,\n        union: union,\n        unionWith: unionWith,\n        uniq: uniq,\n        uniqWith: uniqWith,\n        unnest: unnest,\n        useWith: useWith,\n        values: values,\n        valuesIn: valuesIn,\n        where: where,\n        wrap: wrap,\n        xprod: xprod,\n        zip: zip,\n        zipObj: zipObj,\n        zipWith: zipWith\n    };\n\n  /* TEST_ENTRY_POINT */\n\n  if (typeof exports === 'object') {\n    module.exports = R;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function() { return R; });\n  } else {\n    this.R = R;\n  }\n\n}.call(this));\n","\nvar rng;\n\nif (global.crypto && crypto.getRandomValues) {\n  // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n  // Moderately fast, high quality\n  var _rnds8 = new Uint8Array(16);\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(_rnds8);\n    return _rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var  _rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return _rnds;\n  };\n}\n\nmodule.exports = rng;\n\n","//     uuid.js\n//\n//     Copyright (c) 2010-2012 Robert Kieffer\n//     MIT License - http://opensource.org/licenses/mit-license.php\n\n// Unique ID creation requires a high quality random # generator.  We feature\n// detect to determine the best RNG source, normalizing to a function that\n// returns 128-bits of randomness, since that's what's usually required\nvar _rng = require('./rng');\n\n// Maps for number <-> hex string conversion\nvar _byteToHex = [];\nvar _hexToByte = {};\nfor (var i = 0; i < 256; i++) {\n  _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n  _hexToByte[_byteToHex[i]] = i;\n}\n\n// **`parse()` - Parse a UUID into it's component bytes**\nfunction parse(s, buf, offset) {\n  var i = (buf && offset) || 0, ii = 0;\n\n  buf = buf || [];\n  s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n    if (ii < 16) { // Don't overflow!\n      buf[i + ii++] = _hexToByte[oct];\n    }\n  });\n\n  // Zero out remaining bytes if string was short\n  while (ii < 16) {\n    buf[i + ii++] = 0;\n  }\n\n  return buf;\n}\n\n// **`unparse()` - Convert UUID byte array (ala parse()) into a string**\nfunction unparse(buf, offset) {\n  var i = offset || 0, bth = _byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = _rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; n++) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : unparse(b);\n}\n\n// **`v4()` - Generate random UUID**\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v4(options, buf, offset) {\n  // Deprecated - 'format' argument, as supported in v1.2\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || _rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ii++) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || unparse(rnds);\n}\n\n// Export public API\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\nuuid.parse = parse;\nuuid.unparse = unparse;\n\nmodule.exports = uuid;\n","var createElement = require(\"./vdom/create-element.js\")\n\nmodule.exports = createElement\n","var diff = require(\"./vtree/diff.js\")\n\nmodule.exports = diff\n","var h = require(\"./virtual-hyperscript/index.js\")\n\nmodule.exports = h\n","var diff = require(\"./diff.js\")\r\nvar patch = require(\"./patch.js\")\r\nvar h = require(\"./h.js\")\r\nvar create = require(\"./create-element.js\")\r\nvar VNode = require('./vnode/vnode.js')\r\nvar VText = require('./vnode/vtext.js')\r\n\r\nmodule.exports = {\r\n    diff: diff,\r\n    patch: patch,\r\n    h: h,\r\n    create: create,\r\n    VNode: VNode,\r\n    VText: VText\r\n}\r\n","/*!\n * Cross-Browser Split 1.1.1\n * Copyright 2007-2012 Steven Levithan <stevenlevithan.com>\n * Available under the MIT License\n * ECMAScript compliant, uniform cross-browser split method\n */\n\n/**\n * Splits a string into an array of strings using a regex or string separator. Matches of the\n * separator are not included in the result array. However, if `separator` is a regex that contains\n * capturing groups, backreferences are spliced into the result each time `separator` is matched.\n * Fixes browser bugs compared to the native `String.prototype.split` and can be used reliably\n * cross-browser.\n * @param {String} str String to split.\n * @param {RegExp|String} separator Regex or string to use for separating the string.\n * @param {Number} [limit] Maximum number of items to include in the result array.\n * @returns {Array} Array of substrings.\n * @example\n *\n * // Basic use\n * split('a b c d', ' ');\n * // -> ['a', 'b', 'c', 'd']\n *\n * // With limit\n * split('a b c d', ' ', 2);\n * // -> ['a', 'b']\n *\n * // Backreferences in result array\n * split('..word1 word2..', /([a-z]+)(\\d+)/i);\n * // -> ['..', 'word', '1', ' ', 'word', '2', '..']\n */\nmodule.exports = (function split(undef) {\n\n  var nativeSplit = String.prototype.split,\n    compliantExecNpcg = /()??/.exec(\"\")[1] === undef,\n    // NPCG: nonparticipating capturing group\n    self;\n\n  self = function(str, separator, limit) {\n    // If `separator` is not a regex, use `nativeSplit`\n    if (Object.prototype.toString.call(separator) !== \"[object RegExp]\") {\n      return nativeSplit.call(str, separator, limit);\n    }\n    var output = [],\n      flags = (separator.ignoreCase ? \"i\" : \"\") + (separator.multiline ? \"m\" : \"\") + (separator.extended ? \"x\" : \"\") + // Proposed for ES6\n      (separator.sticky ? \"y\" : \"\"),\n      // Firefox 3+\n      lastLastIndex = 0,\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      separator = new RegExp(separator.source, flags + \"g\"),\n      separator2, match, lastIndex, lastLength;\n    str += \"\"; // Type-convert\n    if (!compliantExecNpcg) {\n      // Doesn't need flags gy, but they don't hurt\n      separator2 = new RegExp(\"^\" + separator.source + \"$(?!\\\\s)\", flags);\n    }\n    /* Values for `limit`, per the spec:\n     * If undefined: 4294967295 // Math.pow(2, 32) - 1\n     * If 0, Infinity, or NaN: 0\n     * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\n     * If negative number: 4294967296 - Math.floor(Math.abs(limit))\n     * If other: Type-convert, then use the above rules\n     */\n    limit = limit === undef ? -1 >>> 0 : // Math.pow(2, 32) - 1\n    limit >>> 0; // ToUint32(limit)\n    while (match = separator.exec(str)) {\n      // `separator.lastIndex` is not reliable cross-browser\n      lastIndex = match.index + match[0].length;\n      if (lastIndex > lastLastIndex) {\n        output.push(str.slice(lastLastIndex, match.index));\n        // Fix browsers whose `exec` methods don't consistently return `undefined` for\n        // nonparticipating capturing groups\n        if (!compliantExecNpcg && match.length > 1) {\n          match[0].replace(separator2, function() {\n            for (var i = 1; i < arguments.length - 2; i++) {\n              if (arguments[i] === undef) {\n                match[i] = undef;\n              }\n            }\n          });\n        }\n        if (match.length > 1 && match.index < str.length) {\n          Array.prototype.push.apply(output, match.slice(1));\n        }\n        lastLength = match[0].length;\n        lastLastIndex = lastIndex;\n        if (output.length >= limit) {\n          break;\n        }\n      }\n      if (separator.lastIndex === match.index) {\n        separator.lastIndex++; // Avoid an infinite loop\n      }\n    }\n    if (lastLastIndex === str.length) {\n      if (lastLength || !separator.test(\"\")) {\n        output.push(\"\");\n      }\n    } else {\n      output.push(str.slice(lastLastIndex));\n    }\n    return output.length > limit ? output.slice(0, limit) : output;\n  };\n\n  return self;\n})();\n","'use strict';\n\nvar OneVersionConstraint = require('individual/one-version');\n\nvar MY_VERSION = '7';\nOneVersionConstraint('ev-store', MY_VERSION);\n\nvar hashKey = '__EV_STORE_KEY@' + MY_VERSION;\n\nmodule.exports = EvStore;\n\nfunction EvStore(elem) {\n    var hash = elem[hashKey];\n\n    if (!hash) {\n        hash = elem[hashKey] = {};\n    }\n\n    return hash;\n}\n","'use strict';\n\n/*global window, global*/\n\nvar root = typeof window !== 'undefined' ?\n    window : typeof global !== 'undefined' ?\n    global : {};\n\nmodule.exports = Individual;\n\nfunction Individual(key, value) {\n    if (key in root) {\n        return root[key];\n    }\n\n    root[key] = value;\n\n    return value;\n}\n","'use strict';\n\nvar Individual = require('./index.js');\n\nmodule.exports = OneVersion;\n\nfunction OneVersion(moduleName, version, defaultValue) {\n    var key = '__INDIVIDUAL_ONE_VERSION_' + moduleName;\n    var enforceKey = key + '_ENFORCE_SINGLETON';\n\n    var versionValue = Individual(enforceKey, version);\n\n    if (versionValue !== version) {\n        throw new Error('Can only have one copy of ' +\n            moduleName + '.\\n' +\n            'You already have version ' + versionValue +\n            ' installed.\\n' +\n            'This means you cannot install version ' + version);\n    }\n\n    return Individual(key, defaultValue);\n}\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nif (typeof document !== 'undefined') {\n    module.exports = document;\n} else {\n    var doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n\n    module.exports = doccy;\n}\n","\"use strict\";\n\nmodule.exports = function isObject(x) {\n\treturn typeof x === \"object\" && x !== null;\n};\n","var nativeIsArray = Array.isArray\nvar toString = Object.prototype.toString\n\nmodule.exports = nativeIsArray || isArray\n\nfunction isArray(obj) {\n    return toString.call(obj) === \"[object Array]\"\n}\n","var patch = require(\"./vdom/patch.js\")\n\nmodule.exports = patch\n","var isObject = require(\"is-object\")\nvar isHook = require(\"../vnode/is-vhook.js\")\n\nmodule.exports = applyProperties\n\nfunction applyProperties(node, props, previous) {\n    for (var propName in props) {\n        var propValue = props[propName]\n\n        if (propValue === undefined) {\n            removeProperty(node, propName, propValue, previous);\n        } else if (isHook(propValue)) {\n            removeProperty(node, propName, propValue, previous)\n            if (propValue.hook) {\n                propValue.hook(node,\n                    propName,\n                    previous ? previous[propName] : undefined)\n            }\n        } else {\n            if (isObject(propValue)) {\n                patchObject(node, props, previous, propName, propValue);\n            } else {\n                node[propName] = propValue\n            }\n        }\n    }\n}\n\nfunction removeProperty(node, propName, propValue, previous) {\n    if (previous) {\n        var previousValue = previous[propName]\n\n        if (!isHook(previousValue)) {\n            if (propName === \"attributes\") {\n                for (var attrName in previousValue) {\n                    node.removeAttribute(attrName)\n                }\n            } else if (propName === \"style\") {\n                for (var i in previousValue) {\n                    node.style[i] = \"\"\n                }\n            } else if (typeof previousValue === \"string\") {\n                node[propName] = \"\"\n            } else {\n                node[propName] = null\n            }\n        } else if (previousValue.unhook) {\n            previousValue.unhook(node, propName, propValue)\n        }\n    }\n}\n\nfunction patchObject(node, props, previous, propName, propValue) {\n    var previousValue = previous ? previous[propName] : undefined\n\n    // Set attributes\n    if (propName === \"attributes\") {\n        for (var attrName in propValue) {\n            var attrValue = propValue[attrName]\n\n            if (attrValue === undefined) {\n                node.removeAttribute(attrName)\n            } else {\n                node.setAttribute(attrName, attrValue)\n            }\n        }\n\n        return\n    }\n\n    if(previousValue && isObject(previousValue) &&\n        getPrototype(previousValue) !== getPrototype(propValue)) {\n        node[propName] = propValue\n        return\n    }\n\n    if (!isObject(node[propName])) {\n        node[propName] = {}\n    }\n\n    var replacer = propName === \"style\" ? \"\" : undefined\n\n    for (var k in propValue) {\n        var value = propValue[k]\n        node[propName][k] = (value === undefined) ? replacer : value\n    }\n}\n\nfunction getPrototype(value) {\n    if (Object.getPrototypeOf) {\n        return Object.getPrototypeOf(value)\n    } else if (value.__proto__) {\n        return value.__proto__\n    } else if (value.constructor) {\n        return value.constructor.prototype\n    }\n}\n","var document = require(\"global/document\")\n\nvar applyProperties = require(\"./apply-properties\")\n\nvar isVNode = require(\"../vnode/is-vnode.js\")\nvar isVText = require(\"../vnode/is-vtext.js\")\nvar isWidget = require(\"../vnode/is-widget.js\")\nvar handleThunk = require(\"../vnode/handle-thunk.js\")\n\nmodule.exports = createElement\n\nfunction createElement(vnode, opts) {\n    var doc = opts ? opts.document || document : document\n    var warn = opts ? opts.warn : null\n\n    vnode = handleThunk(vnode).a\n\n    if (isWidget(vnode)) {\n        return vnode.init()\n    } else if (isVText(vnode)) {\n        return doc.createTextNode(vnode.text)\n    } else if (!isVNode(vnode)) {\n        if (warn) {\n            warn(\"Item is not a valid virtual dom node\", vnode)\n        }\n        return null\n    }\n\n    var node = (vnode.namespace === null) ?\n        doc.createElement(vnode.tagName) :\n        doc.createElementNS(vnode.namespace, vnode.tagName)\n\n    var props = vnode.properties\n    applyProperties(node, props)\n\n    var children = vnode.children\n\n    for (var i = 0; i < children.length; i++) {\n        var childNode = createElement(children[i], opts)\n        if (childNode) {\n            node.appendChild(childNode)\n        }\n    }\n\n    return node\n}\n","// Maps a virtual DOM tree onto a real DOM tree in an efficient manner.\n// We don't want to read all of the DOM nodes in the tree so we use\n// the in-order tree indexing to eliminate recursion down certain branches.\n// We only recurse into a DOM node if we know that it contains a child of\n// interest.\n\nvar noChild = {}\n\nmodule.exports = domIndex\n\nfunction domIndex(rootNode, tree, indices, nodes) {\n    if (!indices || indices.length === 0) {\n        return {}\n    } else {\n        indices.sort(ascending)\n        return recurse(rootNode, tree, indices, nodes, 0)\n    }\n}\n\nfunction recurse(rootNode, tree, indices, nodes, rootIndex) {\n    nodes = nodes || {}\n\n\n    if (rootNode) {\n        if (indexInRange(indices, rootIndex, rootIndex)) {\n            nodes[rootIndex] = rootNode\n        }\n\n        var vChildren = tree.children\n\n        if (vChildren) {\n\n            var childNodes = rootNode.childNodes\n\n            for (var i = 0; i < tree.children.length; i++) {\n                rootIndex += 1\n\n                var vChild = vChildren[i] || noChild\n                var nextIndex = rootIndex + (vChild.count || 0)\n\n                // skip recursion down the tree if there are no nodes down here\n                if (indexInRange(indices, rootIndex, nextIndex)) {\n                    recurse(childNodes[i], vChild, indices, nodes, rootIndex)\n                }\n\n                rootIndex = nextIndex\n            }\n        }\n    }\n\n    return nodes\n}\n\n// Binary search for an index in the interval [left, right]\nfunction indexInRange(indices, left, right) {\n    if (indices.length === 0) {\n        return false\n    }\n\n    var minIndex = 0\n    var maxIndex = indices.length - 1\n    var currentIndex\n    var currentItem\n\n    while (minIndex <= maxIndex) {\n        currentIndex = ((maxIndex + minIndex) / 2) >> 0\n        currentItem = indices[currentIndex]\n\n        if (minIndex === maxIndex) {\n            return currentItem >= left && currentItem <= right\n        } else if (currentItem < left) {\n            minIndex = currentIndex + 1\n        } else  if (currentItem > right) {\n            maxIndex = currentIndex - 1\n        } else {\n            return true\n        }\n    }\n\n    return false;\n}\n\nfunction ascending(a, b) {\n    return a > b ? 1 : -1\n}\n","var applyProperties = require(\"./apply-properties\")\n\nvar isWidget = require(\"../vnode/is-widget.js\")\nvar VPatch = require(\"../vnode/vpatch.js\")\n\nvar render = require(\"./create-element\")\nvar updateWidget = require(\"./update-widget\")\n\nmodule.exports = applyPatch\n\nfunction applyPatch(vpatch, domNode, renderOptions) {\n    var type = vpatch.type\n    var vNode = vpatch.vNode\n    var patch = vpatch.patch\n\n    switch (type) {\n        case VPatch.REMOVE:\n            return removeNode(domNode, vNode)\n        case VPatch.INSERT:\n            return insertNode(domNode, patch, renderOptions)\n        case VPatch.VTEXT:\n            return stringPatch(domNode, vNode, patch, renderOptions)\n        case VPatch.WIDGET:\n            return widgetPatch(domNode, vNode, patch, renderOptions)\n        case VPatch.VNODE:\n            return vNodePatch(domNode, vNode, patch, renderOptions)\n        case VPatch.ORDER:\n            reorderChildren(domNode, patch)\n            return domNode\n        case VPatch.PROPS:\n            applyProperties(domNode, patch, vNode.properties)\n            return domNode\n        case VPatch.THUNK:\n            return replaceRoot(domNode,\n                renderOptions.patch(domNode, patch, renderOptions))\n        default:\n            return domNode\n    }\n}\n\nfunction removeNode(domNode, vNode) {\n    var parentNode = domNode.parentNode\n\n    if (parentNode) {\n        parentNode.removeChild(domNode)\n    }\n\n    destroyWidget(domNode, vNode);\n\n    return null\n}\n\nfunction insertNode(parentNode, vNode, renderOptions) {\n    var newNode = render(vNode, renderOptions)\n\n    if (parentNode) {\n        parentNode.appendChild(newNode)\n    }\n\n    return parentNode\n}\n\nfunction stringPatch(domNode, leftVNode, vText, renderOptions) {\n    var newNode\n\n    if (domNode.nodeType === 3) {\n        domNode.replaceData(0, domNode.length, vText.text)\n        newNode = domNode\n    } else {\n        var parentNode = domNode.parentNode\n        newNode = render(vText, renderOptions)\n\n        if (parentNode && newNode !== domNode) {\n            parentNode.replaceChild(newNode, domNode)\n        }\n    }\n\n    return newNode\n}\n\nfunction widgetPatch(domNode, leftVNode, widget, renderOptions) {\n    var updating = updateWidget(leftVNode, widget)\n    var newNode\n\n    if (updating) {\n        newNode = widget.update(leftVNode, domNode) || domNode\n    } else {\n        newNode = render(widget, renderOptions)\n    }\n\n    var parentNode = domNode.parentNode\n\n    if (parentNode && newNode !== domNode) {\n        parentNode.replaceChild(newNode, domNode)\n    }\n\n    if (!updating) {\n        destroyWidget(domNode, leftVNode)\n    }\n\n    return newNode\n}\n\nfunction vNodePatch(domNode, leftVNode, vNode, renderOptions) {\n    var parentNode = domNode.parentNode\n    var newNode = render(vNode, renderOptions)\n\n    if (parentNode && newNode !== domNode) {\n        parentNode.replaceChild(newNode, domNode)\n    }\n\n    return newNode\n}\n\nfunction destroyWidget(domNode, w) {\n    if (typeof w.destroy === \"function\" && isWidget(w)) {\n        w.destroy(domNode)\n    }\n}\n\nfunction reorderChildren(domNode, moves) {\n    var childNodes = domNode.childNodes\n    var keyMap = {}\n    var node\n    var remove\n    var insert\n\n    for (var i = 0; i < moves.removes.length; i++) {\n        remove = moves.removes[i]\n        node = childNodes[remove.from]\n        if (remove.key) {\n            keyMap[remove.key] = node\n        }\n        domNode.removeChild(node)\n    }\n\n    var length = childNodes.length\n    for (var j = 0; j < moves.inserts.length; j++) {\n        insert = moves.inserts[j]\n        node = keyMap[insert.key]\n        // this is the weirdest bug i've ever seen in webkit\n        domNode.insertBefore(node, insert.to >= length++ ? null : childNodes[insert.to])\n    }\n}\n\nfunction replaceRoot(oldRoot, newRoot) {\n    if (oldRoot && newRoot && oldRoot !== newRoot && oldRoot.parentNode) {\n        oldRoot.parentNode.replaceChild(newRoot, oldRoot)\n    }\n\n    return newRoot;\n}\n","var document = require(\"global/document\")\nvar isArray = require(\"x-is-array\")\n\nvar domIndex = require(\"./dom-index\")\nvar patchOp = require(\"./patch-op\")\nmodule.exports = patch\n\nfunction patch(rootNode, patches) {\n    return patchRecursive(rootNode, patches)\n}\n\nfunction patchRecursive(rootNode, patches, renderOptions) {\n    var indices = patchIndices(patches)\n\n    if (indices.length === 0) {\n        return rootNode\n    }\n\n    var index = domIndex(rootNode, patches.a, indices)\n    var ownerDocument = rootNode.ownerDocument\n\n    if (!renderOptions) {\n        renderOptions = { patch: patchRecursive }\n        if (ownerDocument !== document) {\n            renderOptions.document = ownerDocument\n        }\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n        var nodeIndex = indices[i]\n        rootNode = applyPatch(rootNode,\n            index[nodeIndex],\n            patches[nodeIndex],\n            renderOptions)\n    }\n\n    return rootNode\n}\n\nfunction applyPatch(rootNode, domNode, patchList, renderOptions) {\n    if (!domNode) {\n        return rootNode\n    }\n\n    var newNode\n\n    if (isArray(patchList)) {\n        for (var i = 0; i < patchList.length; i++) {\n            newNode = patchOp(patchList[i], domNode, renderOptions)\n\n            if (domNode === rootNode) {\n                rootNode = newNode\n            }\n        }\n    } else {\n        newNode = patchOp(patchList, domNode, renderOptions)\n\n        if (domNode === rootNode) {\n            rootNode = newNode\n        }\n    }\n\n    return rootNode\n}\n\nfunction patchIndices(patches) {\n    var indices = []\n\n    for (var key in patches) {\n        if (key !== \"a\") {\n            indices.push(Number(key))\n        }\n    }\n\n    return indices\n}\n","var isWidget = require(\"../vnode/is-widget.js\")\n\nmodule.exports = updateWidget\n\nfunction updateWidget(a, b) {\n    if (isWidget(a) && isWidget(b)) {\n        if (\"name\" in a && \"name\" in b) {\n            return a.id === b.id\n        } else {\n            return a.init === b.init\n        }\n    }\n\n    return false\n}\n","'use strict';\n\nvar EvStore = require('ev-store');\n\nmodule.exports = EvHook;\n\nfunction EvHook(value) {\n    if (!(this instanceof EvHook)) {\n        return new EvHook(value);\n    }\n\n    this.value = value;\n}\n\nEvHook.prototype.hook = function (node, propertyName) {\n    var es = EvStore(node);\n    var propName = propertyName.substr(3);\n\n    es[propName] = this.value;\n};\n\nEvHook.prototype.unhook = function(node, propertyName) {\n    var es = EvStore(node);\n    var propName = propertyName.substr(3);\n\n    es[propName] = undefined;\n};\n","'use strict';\n\nmodule.exports = SoftSetHook;\n\nfunction SoftSetHook(value) {\n    if (!(this instanceof SoftSetHook)) {\n        return new SoftSetHook(value);\n    }\n\n    this.value = value;\n}\n\nSoftSetHook.prototype.hook = function (node, propertyName) {\n    if (node[propertyName] !== this.value) {\n        node[propertyName] = this.value;\n    }\n};\n","'use strict';\n\nvar isArray = require('x-is-array');\n\nvar VNode = require('../vnode/vnode.js');\nvar VText = require('../vnode/vtext.js');\nvar isVNode = require('../vnode/is-vnode');\nvar isVText = require('../vnode/is-vtext');\nvar isWidget = require('../vnode/is-widget');\nvar isHook = require('../vnode/is-vhook');\nvar isVThunk = require('../vnode/is-thunk');\n\nvar parseTag = require('./parse-tag.js');\nvar softSetHook = require('./hooks/soft-set-hook.js');\nvar evHook = require('./hooks/ev-hook.js');\n\nmodule.exports = h;\n\nfunction h(tagName, properties, children) {\n    var childNodes = [];\n    var tag, props, key, namespace;\n\n    if (!children && isChildren(properties)) {\n        children = properties;\n        props = {};\n    }\n\n    props = props || properties || {};\n    tag = parseTag(tagName, props);\n\n    // support keys\n    if (props.hasOwnProperty('key')) {\n        key = props.key;\n        props.key = undefined;\n    }\n\n    // support namespace\n    if (props.hasOwnProperty('namespace')) {\n        namespace = props.namespace;\n        props.namespace = undefined;\n    }\n\n    // fix cursor bug\n    if (tag === 'INPUT' &&\n        !namespace &&\n        props.hasOwnProperty('value') &&\n        props.value !== undefined &&\n        !isHook(props.value)\n    ) {\n        props.value = softSetHook(props.value);\n    }\n\n    transformProperties(props);\n\n    if (children !== undefined && children !== null) {\n        addChild(children, childNodes, tag, props);\n    }\n\n\n    return new VNode(tag, props, childNodes, key, namespace);\n}\n\nfunction addChild(c, childNodes, tag, props) {\n    if (typeof c === 'string') {\n        childNodes.push(new VText(c));\n    } else if (isChild(c)) {\n        childNodes.push(c);\n    } else if (isArray(c)) {\n        for (var i = 0; i < c.length; i++) {\n            addChild(c[i], childNodes, tag, props);\n        }\n    } else if (c === null || c === undefined) {\n        return;\n    } else {\n        throw UnexpectedVirtualElement({\n            foreignObject: c,\n            parentVnode: {\n                tagName: tag,\n                properties: props\n            }\n        });\n    }\n}\n\nfunction transformProperties(props) {\n    for (var propName in props) {\n        if (props.hasOwnProperty(propName)) {\n            var value = props[propName];\n\n            if (isHook(value)) {\n                continue;\n            }\n\n            if (propName.substr(0, 3) === 'ev-') {\n                // add ev-foo support\n                props[propName] = evHook(value);\n            }\n        }\n    }\n}\n\nfunction isChild(x) {\n    return isVNode(x) || isVText(x) || isWidget(x) || isVThunk(x);\n}\n\nfunction isChildren(x) {\n    return typeof x === 'string' || isArray(x) || isChild(x);\n}\n\nfunction UnexpectedVirtualElement(data) {\n    var err = new Error();\n\n    err.type = 'virtual-hyperscript.unexpected.virtual-element';\n    err.message = 'Unexpected virtual child passed to h().\\n' +\n        'Expected a VNode / Vthunk / VWidget / string but:\\n' +\n        'got:\\n' +\n        errorString(data.foreignObject) +\n        '.\\n' +\n        'The parent vnode is:\\n' +\n        errorString(data.parentVnode)\n        '\\n' +\n        'Suggested fix: change your `h(..., [ ... ])` callsite.';\n    err.foreignObject = data.foreignObject;\n    err.parentVnode = data.parentVnode;\n\n    return err;\n}\n\nfunction errorString(obj) {\n    try {\n        return JSON.stringify(obj, null, '    ');\n    } catch (e) {\n        return String(obj);\n    }\n}\n","'use strict';\n\nvar split = require('browser-split');\n\nvar classIdSplit = /([\\.#]?[a-zA-Z0-9_:-]+)/;\nvar notClassId = /^\\.|#/;\n\nmodule.exports = parseTag;\n\nfunction parseTag(tag, props) {\n    if (!tag) {\n        return 'DIV';\n    }\n\n    var noId = !(props.hasOwnProperty('id'));\n\n    var tagParts = split(tag, classIdSplit);\n    var tagName = null;\n\n    if (notClassId.test(tagParts[1])) {\n        tagName = 'DIV';\n    }\n\n    var classes, part, type, i;\n\n    for (i = 0; i < tagParts.length; i++) {\n        part = tagParts[i];\n\n        if (!part) {\n            continue;\n        }\n\n        type = part.charAt(0);\n\n        if (!tagName) {\n            tagName = part;\n        } else if (type === '.') {\n            classes = classes || [];\n            classes.push(part.substring(1, part.length));\n        } else if (type === '#' && noId) {\n            props.id = part.substring(1, part.length);\n        }\n    }\n\n    if (classes) {\n        if (props.className) {\n            classes.push(props.className);\n        }\n\n        props.className = classes.join(' ');\n    }\n\n    return props.namespace ? tagName : tagName.toUpperCase();\n}\n","var isVNode = require(\"./is-vnode\")\nvar isVText = require(\"./is-vtext\")\nvar isWidget = require(\"./is-widget\")\nvar isThunk = require(\"./is-thunk\")\n\nmodule.exports = handleThunk\n\nfunction handleThunk(a, b) {\n    var renderedA = a\n    var renderedB = b\n\n    if (isThunk(b)) {\n        renderedB = renderThunk(b, a)\n    }\n\n    if (isThunk(a)) {\n        renderedA = renderThunk(a, null)\n    }\n\n    return {\n        a: renderedA,\n        b: renderedB\n    }\n}\n\nfunction renderThunk(thunk, previous) {\n    var renderedThunk = thunk.vnode\n\n    if (!renderedThunk) {\n        renderedThunk = thunk.vnode = thunk.render(previous)\n    }\n\n    if (!(isVNode(renderedThunk) ||\n            isVText(renderedThunk) ||\n            isWidget(renderedThunk))) {\n        throw new Error(\"thunk did not return a valid node\");\n    }\n\n    return renderedThunk\n}\n","module.exports = isThunk\r\n\r\nfunction isThunk(t) {\r\n    return t && t.type === \"Thunk\"\r\n}\r\n","module.exports = isHook\n\nfunction isHook(hook) {\n    return hook &&\n      (typeof hook.hook === \"function\" && !hook.hasOwnProperty(\"hook\") ||\n       typeof hook.unhook === \"function\" && !hook.hasOwnProperty(\"unhook\"))\n}\n","var version = require(\"./version\")\n\nmodule.exports = isVirtualNode\n\nfunction isVirtualNode(x) {\n    return x && x.type === \"VirtualNode\" && x.version === version\n}\n","var version = require(\"./version\")\n\nmodule.exports = isVirtualText\n\nfunction isVirtualText(x) {\n    return x && x.type === \"VirtualText\" && x.version === version\n}\n","module.exports = isWidget\n\nfunction isWidget(w) {\n    return w && w.type === \"Widget\"\n}\n","module.exports = \"2\"\n","var version = require(\"./version\")\nvar isVNode = require(\"./is-vnode\")\nvar isWidget = require(\"./is-widget\")\nvar isThunk = require(\"./is-thunk\")\nvar isVHook = require(\"./is-vhook\")\n\nmodule.exports = VirtualNode\n\nvar noProperties = {}\nvar noChildren = []\n\nfunction VirtualNode(tagName, properties, children, key, namespace) {\n    this.tagName = tagName\n    this.properties = properties || noProperties\n    this.children = children || noChildren\n    this.key = key != null ? String(key) : undefined\n    this.namespace = (typeof namespace === \"string\") ? namespace : null\n\n    var count = (children && children.length) || 0\n    var descendants = 0\n    var hasWidgets = false\n    var hasThunks = false\n    var descendantHooks = false\n    var hooks\n\n    for (var propName in properties) {\n        if (properties.hasOwnProperty(propName)) {\n            var property = properties[propName]\n            if (isVHook(property) && property.unhook) {\n                if (!hooks) {\n                    hooks = {}\n                }\n\n                hooks[propName] = property\n            }\n        }\n    }\n\n    for (var i = 0; i < count; i++) {\n        var child = children[i]\n        if (isVNode(child)) {\n            descendants += child.count || 0\n\n            if (!hasWidgets && child.hasWidgets) {\n                hasWidgets = true\n            }\n\n            if (!hasThunks && child.hasThunks) {\n                hasThunks = true\n            }\n\n            if (!descendantHooks && (child.hooks || child.descendantHooks)) {\n                descendantHooks = true\n            }\n        } else if (!hasWidgets && isWidget(child)) {\n            if (typeof child.destroy === \"function\") {\n                hasWidgets = true\n            }\n        } else if (!hasThunks && isThunk(child)) {\n            hasThunks = true;\n        }\n    }\n\n    this.count = count + descendants\n    this.hasWidgets = hasWidgets\n    this.hasThunks = hasThunks\n    this.hooks = hooks\n    this.descendantHooks = descendantHooks\n}\n\nVirtualNode.prototype.version = version\nVirtualNode.prototype.type = \"VirtualNode\"\n","var version = require(\"./version\")\n\nVirtualPatch.NONE = 0\nVirtualPatch.VTEXT = 1\nVirtualPatch.VNODE = 2\nVirtualPatch.WIDGET = 3\nVirtualPatch.PROPS = 4\nVirtualPatch.ORDER = 5\nVirtualPatch.INSERT = 6\nVirtualPatch.REMOVE = 7\nVirtualPatch.THUNK = 8\n\nmodule.exports = VirtualPatch\n\nfunction VirtualPatch(type, vNode, patch) {\n    this.type = Number(type)\n    this.vNode = vNode\n    this.patch = patch\n}\n\nVirtualPatch.prototype.version = version\nVirtualPatch.prototype.type = \"VirtualPatch\"\n","var version = require(\"./version\")\n\nmodule.exports = VirtualText\n\nfunction VirtualText(text) {\n    this.text = String(text)\n}\n\nVirtualText.prototype.version = version\nVirtualText.prototype.type = \"VirtualText\"\n","var isObject = require(\"is-object\")\nvar isHook = require(\"../vnode/is-vhook\")\n\nmodule.exports = diffProps\n\nfunction diffProps(a, b) {\n    var diff\n\n    for (var aKey in a) {\n        if (!(aKey in b)) {\n            diff = diff || {}\n            diff[aKey] = undefined\n        }\n\n        var aValue = a[aKey]\n        var bValue = b[aKey]\n\n        if (aValue === bValue) {\n            continue\n        } else if (isObject(aValue) && isObject(bValue)) {\n            if (getPrototype(bValue) !== getPrototype(aValue)) {\n                diff = diff || {}\n                diff[aKey] = bValue\n            } else if (isHook(bValue)) {\n                 diff = diff || {}\n                 diff[aKey] = bValue\n            } else {\n                var objectDiff = diffProps(aValue, bValue)\n                if (objectDiff) {\n                    diff = diff || {}\n                    diff[aKey] = objectDiff\n                }\n            }\n        } else {\n            diff = diff || {}\n            diff[aKey] = bValue\n        }\n    }\n\n    for (var bKey in b) {\n        if (!(bKey in a)) {\n            diff = diff || {}\n            diff[bKey] = b[bKey]\n        }\n    }\n\n    return diff\n}\n\nfunction getPrototype(value) {\n  if (Object.getPrototypeOf) {\n    return Object.getPrototypeOf(value)\n  } else if (value.__proto__) {\n    return value.__proto__\n  } else if (value.constructor) {\n    return value.constructor.prototype\n  }\n}\n","var isArray = require(\"x-is-array\")\n\nvar VPatch = require(\"../vnode/vpatch\")\nvar isVNode = require(\"../vnode/is-vnode\")\nvar isVText = require(\"../vnode/is-vtext\")\nvar isWidget = require(\"../vnode/is-widget\")\nvar isThunk = require(\"../vnode/is-thunk\")\nvar handleThunk = require(\"../vnode/handle-thunk\")\n\nvar diffProps = require(\"./diff-props\")\n\nmodule.exports = diff\n\nfunction diff(a, b) {\n    var patch = { a: a }\n    walk(a, b, patch, 0)\n    return patch\n}\n\nfunction walk(a, b, patch, index) {\n    if (a === b) {\n        return\n    }\n\n    var apply = patch[index]\n    var applyClear = false\n\n    if (isThunk(a) || isThunk(b)) {\n        thunks(a, b, patch, index)\n    } else if (b == null) {\n\n        // If a is a widget we will add a remove patch for it\n        // Otherwise any child widgets/hooks must be destroyed.\n        // This prevents adding two remove patches for a widget.\n        if (!isWidget(a)) {\n            clearState(a, patch, index)\n            apply = patch[index]\n        }\n\n        apply = appendPatch(apply, new VPatch(VPatch.REMOVE, a, b))\n    } else if (isVNode(b)) {\n        if (isVNode(a)) {\n            if (a.tagName === b.tagName &&\n                a.namespace === b.namespace &&\n                a.key === b.key) {\n                var propsPatch = diffProps(a.properties, b.properties)\n                if (propsPatch) {\n                    apply = appendPatch(apply,\n                        new VPatch(VPatch.PROPS, a, propsPatch))\n                }\n                apply = diffChildren(a, b, patch, apply, index)\n            } else {\n                apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))\n                applyClear = true\n            }\n        } else {\n            apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))\n            applyClear = true\n        }\n    } else if (isVText(b)) {\n        if (!isVText(a)) {\n            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))\n            applyClear = true\n        } else if (a.text !== b.text) {\n            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))\n        }\n    } else if (isWidget(b)) {\n        if (!isWidget(a)) {\n            applyClear = true\n        }\n\n        apply = appendPatch(apply, new VPatch(VPatch.WIDGET, a, b))\n    }\n\n    if (apply) {\n        patch[index] = apply\n    }\n\n    if (applyClear) {\n        clearState(a, patch, index)\n    }\n}\n\nfunction diffChildren(a, b, patch, apply, index) {\n    var aChildren = a.children\n    var orderedSet = reorder(aChildren, b.children)\n    var bChildren = orderedSet.children\n\n    var aLen = aChildren.length\n    var bLen = bChildren.length\n    var len = aLen > bLen ? aLen : bLen\n\n    for (var i = 0; i < len; i++) {\n        var leftNode = aChildren[i]\n        var rightNode = bChildren[i]\n        index += 1\n\n        if (!leftNode) {\n            if (rightNode) {\n                // Excess nodes in b need to be added\n                apply = appendPatch(apply,\n                    new VPatch(VPatch.INSERT, null, rightNode))\n            }\n        } else {\n            walk(leftNode, rightNode, patch, index)\n        }\n\n        if (isVNode(leftNode) && leftNode.count) {\n            index += leftNode.count\n        }\n    }\n\n    if (orderedSet.moves) {\n        // Reorder nodes last\n        apply = appendPatch(apply, new VPatch(\n            VPatch.ORDER,\n            a,\n            orderedSet.moves\n        ))\n    }\n\n    return apply\n}\n\nfunction clearState(vNode, patch, index) {\n    // TODO: Make this a single walk, not two\n    unhook(vNode, patch, index)\n    destroyWidgets(vNode, patch, index)\n}\n\n// Patch records for all destroyed widgets must be added because we need\n// a DOM node reference for the destroy function\nfunction destroyWidgets(vNode, patch, index) {\n    if (isWidget(vNode)) {\n        if (typeof vNode.destroy === \"function\") {\n            patch[index] = appendPatch(\n                patch[index],\n                new VPatch(VPatch.REMOVE, vNode, null)\n            )\n        }\n    } else if (isVNode(vNode) && (vNode.hasWidgets || vNode.hasThunks)) {\n        var children = vNode.children\n        var len = children.length\n        for (var i = 0; i < len; i++) {\n            var child = children[i]\n            index += 1\n\n            destroyWidgets(child, patch, index)\n\n            if (isVNode(child) && child.count) {\n                index += child.count\n            }\n        }\n    } else if (isThunk(vNode)) {\n        thunks(vNode, null, patch, index)\n    }\n}\n\n// Create a sub-patch for thunks\nfunction thunks(a, b, patch, index) {\n    var nodes = handleThunk(a, b)\n    var thunkPatch = diff(nodes.a, nodes.b)\n    if (hasPatches(thunkPatch)) {\n        patch[index] = new VPatch(VPatch.THUNK, null, thunkPatch)\n    }\n}\n\nfunction hasPatches(patch) {\n    for (var index in patch) {\n        if (index !== \"a\") {\n            return true\n        }\n    }\n\n    return false\n}\n\n// Execute hooks when two nodes are identical\nfunction unhook(vNode, patch, index) {\n    if (isVNode(vNode)) {\n        if (vNode.hooks) {\n            patch[index] = appendPatch(\n                patch[index],\n                new VPatch(\n                    VPatch.PROPS,\n                    vNode,\n                    undefinedKeys(vNode.hooks)\n                )\n            )\n        }\n\n        if (vNode.descendantHooks || vNode.hasThunks) {\n            var children = vNode.children\n            var len = children.length\n            for (var i = 0; i < len; i++) {\n                var child = children[i]\n                index += 1\n\n                unhook(child, patch, index)\n\n                if (isVNode(child) && child.count) {\n                    index += child.count\n                }\n            }\n        }\n    } else if (isThunk(vNode)) {\n        thunks(vNode, null, patch, index)\n    }\n}\n\nfunction undefinedKeys(obj) {\n    var result = {}\n\n    for (var key in obj) {\n        result[key] = undefined\n    }\n\n    return result\n}\n\n// List diff, naive left to right reordering\nfunction reorder(aChildren, bChildren) {\n    // O(M) time, O(M) memory\n    var bChildIndex = keyIndex(bChildren)\n    var bKeys = bChildIndex.keys\n    var bFree = bChildIndex.free\n\n    if (bFree.length === bChildren.length) {\n        return {\n            children: bChildren,\n            moves: null\n        }\n    }\n\n    // O(N) time, O(N) memory\n    var aChildIndex = keyIndex(aChildren)\n    var aKeys = aChildIndex.keys\n    var aFree = aChildIndex.free\n\n    if (aFree.length === aChildren.length) {\n        return {\n            children: bChildren,\n            moves: null\n        }\n    }\n\n    // O(MAX(N, M)) memory\n    var newChildren = []\n\n    var freeIndex = 0\n    var freeCount = bFree.length\n    var deletedItems = 0\n\n    // Iterate through a and match a node in b\n    // O(N) time,\n    for (var i = 0 ; i < aChildren.length; i++) {\n        var aItem = aChildren[i]\n        var itemIndex\n\n        if (aItem.key) {\n            if (bKeys.hasOwnProperty(aItem.key)) {\n                // Match up the old keys\n                itemIndex = bKeys[aItem.key]\n                newChildren.push(bChildren[itemIndex])\n\n            } else {\n                // Remove old keyed items\n                itemIndex = i - deletedItems++\n                newChildren.push(null)\n            }\n        } else {\n            // Match the item in a with the next free item in b\n            if (freeIndex < freeCount) {\n                itemIndex = bFree[freeIndex++]\n                newChildren.push(bChildren[itemIndex])\n            } else {\n                // There are no free items in b to match with\n                // the free items in a, so the extra free nodes\n                // are deleted.\n                itemIndex = i - deletedItems++\n                newChildren.push(null)\n            }\n        }\n    }\n\n    var lastFreeIndex = freeIndex >= bFree.length ?\n        bChildren.length :\n        bFree[freeIndex]\n\n    // Iterate through b and append any new keys\n    // O(M) time\n    for (var j = 0; j < bChildren.length; j++) {\n        var newItem = bChildren[j]\n\n        if (newItem.key) {\n            if (!aKeys.hasOwnProperty(newItem.key)) {\n                // Add any new keyed items\n                // We are adding new items to the end and then sorting them\n                // in place. In future we should insert new items in place.\n                newChildren.push(newItem)\n            }\n        } else if (j >= lastFreeIndex) {\n            // Add any leftover non-keyed items\n            newChildren.push(newItem)\n        }\n    }\n\n    var simulate = newChildren.slice()\n    var simulateIndex = 0\n    var removes = []\n    var inserts = []\n    var simulateItem\n\n    for (var k = 0; k < bChildren.length;) {\n        var wantedItem = bChildren[k]\n        simulateItem = simulate[simulateIndex]\n\n        // remove items\n        while (simulateItem === null && simulate.length) {\n            removes.push(remove(simulate, simulateIndex, null))\n            simulateItem = simulate[simulateIndex]\n        }\n\n        if (!simulateItem || simulateItem.key !== wantedItem.key) {\n            // if we need a key in this position...\n            if (wantedItem.key) {\n                if (simulateItem && simulateItem.key) {\n                    // if an insert doesn't put this key in place, it needs to move\n                    if (bKeys[simulateItem.key] !== k + 1) {\n                        removes.push(remove(simulate, simulateIndex, simulateItem.key))\n                        simulateItem = simulate[simulateIndex]\n                        // if the remove didn't put the wanted item in place, we need to insert it\n                        if (!simulateItem || simulateItem.key !== wantedItem.key) {\n                            inserts.push({key: wantedItem.key, to: k})\n                        }\n                        // items are matching, so skip ahead\n                        else {\n                            simulateIndex++\n                        }\n                    }\n                    else {\n                        inserts.push({key: wantedItem.key, to: k})\n                    }\n                }\n                else {\n                    inserts.push({key: wantedItem.key, to: k})\n                }\n                k++\n            }\n            // a key in simulate has no matching wanted key, remove it\n            else if (simulateItem && simulateItem.key) {\n                removes.push(remove(simulate, simulateIndex, simulateItem.key))\n            }\n        }\n        else {\n            simulateIndex++\n            k++\n        }\n    }\n\n    // remove all the remaining nodes from simulate\n    while(simulateIndex < simulate.length) {\n        simulateItem = simulate[simulateIndex]\n        removes.push(remove(simulate, simulateIndex, simulateItem && simulateItem.key))\n    }\n\n    // If the only moves we have are deletes then we can just\n    // let the delete patch remove these items.\n    if (removes.length === deletedItems && !inserts.length) {\n        return {\n            children: newChildren,\n            moves: null\n        }\n    }\n\n    return {\n        children: newChildren,\n        moves: {\n            removes: removes,\n            inserts: inserts\n        }\n    }\n}\n\nfunction remove(arr, index, key) {\n    arr.splice(index, 1)\n\n    return {\n        from: index,\n        key: key\n    }\n}\n\nfunction keyIndex(children) {\n    var keys = {}\n    var free = []\n    var length = children.length\n\n    for (var i = 0; i < length; i++) {\n        var child = children[i]\n\n        if (child.key) {\n            keys[child.key] = i\n        } else {\n            free.push(i)\n        }\n    }\n\n    return {\n        keys: keys,     // A hash of key name to index\n        free: free,     // An array of unkeyed item indices\n    }\n}\n\nfunction appendPatch(apply, patch) {\n    if (apply) {\n        if (isArray(apply)) {\n            apply.push(patch)\n        } else {\n            apply = [apply, patch]\n        }\n\n        return apply\n    } else {\n        return patch\n    }\n}\n","var createVNode = require('virtual-dom/h');\nvar htmltree = require(\"htmltree\");\nvar camel = require('to-camel-case');\n\nmodule.exports = virtualHTML;\n\nfunction virtualHTML (html, callback) {\n  callback = callback || defaultCb;\n  if (typeof html == 'function') html = html();\n  var res = null;\n\n  htmltree(html, function (err, dom) {\n    if (err) return callback(err);\n    res = vnode(dom.root[0]);\n    callback(undefined, res);\n  });\n\n  return res;\n\n  function defaultCb (err) {\n    if (err) throw new Error(err);\n  }\n}\n\nfunction vnode (parent) {\n  if (parent.type == \"text\") return parent.data;\n  if (parent.type != \"tag\") return;\n\n  var children;\n  var child;\n  var len;\n  var i;\n\n  if (parent.children.length) {\n    children = [];\n    len = parent.children.length;\n    i = -1;\n\n    while (++i < len) {\n      child = vnode(parent.children[i]);\n      if (!child) continue;\n      children.push(child);\n    }\n  }\n\n  var attributes = parent.attributes;\n  if (attributes.style) attributes.style = style(attributes.style);\n  if (attributes['class']) attributes.className = attributes['class'];\n  if (attributes['for']) {\n    attributes.htmlFor = attributes['for'];\n    delete attributes['for'];\n  }\n\n  attributes.dataset = createDataSet(attributes);\n\n  return createVNode(parent.name, attributes, children);\n}\n\nfunction style (raw) {\n  if (!raw) return {};\n\n  var result = {};\n  var fields = raw.split(/;\\s?/);\n  var len = fields.length;\n  var i = -1;\n  var s;\n\n  while (++i < len) {\n    s = fields[i].indexOf(':');\n    result[fields[i].slice(0, s)] = fields[i].slice(s + 1).trim();\n  }\n\n  return result;\n}\n\nfunction createDataSet (props) {\n  var dataset;\n  var key;\n\n  for (key in props) {\n    if (key.slice(0, 5) == 'data-') {\n      dataset || (dataset = {});\n      dataset[camel(key.slice(5))] = props[key];\n    }\n  }\n\n  return dataset;\n}\n","var sax = require('sax');\n\n//http://dev.w3.org/html5/spec-author-view/syntax.html#syntax-start-tag\n//http://www.w3.org/html/wg/drafts/html/master/single-page.html#void-elements\nvar void_elements = {};\n[\n    'area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input',\n    'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'\n].forEach(function(tag) {\n    void_elements[tag] = true;\n});\n\nfunction htmltree(str, cb) {\n\n    var strict = false;\n    var parser = sax.parser(strict, {\n        lowercase: true\n    });\n\n    // document doctype if set\n    var doctype = undefined;\n\n    var current = {\n        children: []\n    };\n\n    var stack = [];\n\n    parser.onerror = function (err) {\n        cb(err);\n    };\n\n    parser.ondoctype = function(type) {\n        doctype = type;\n    };\n\n    parser.ontext = function (text) {\n        current.children.push({\n            type: 'text',\n            data: text\n        });\n    };\n\n    parser.oncomment = function(comment) {\n        current.children.push({\n            type: 'comment',\n            data: comment\n        });\n    };\n\n    parser.onscript = function(script) {\n        current.data = script;\n    };\n\n    parser.onopentag = function (node) {\n\n        var element = {\n            type: 'tag',\n            name: node.name,\n            attributes: node.attributes,\n            children: [],\n            void: void_elements[node.name]\n        };\n\n        current.children.push(element);\n\n        // if element is a void tag we will not push it\n        if (!void_elements[element.name]) {\n            stack.push(current);\n            current = element;\n        }\n    };\n\n    parser.onclosetag = function(tag) {\n        if (current.name === tag) {\n            // current tag is closed, get the parent back\n            current = stack.pop();\n        }\n\n        if (!current) {\n            return cb(new Error('mismatched closing tag: ' + tag));\n        }\n    };\n\n    parser.onend = function () {\n        cb(null, {\n            doctype: doctype,\n            root: current.children\n        });\n    };\n\n    parser.write(str).close();\n}\n\nmodule.exports = htmltree;\n\n","// wrapper for non-node envs\n;(function (sax) {\n\nsax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\nsax.SAXParser = SAXParser\nsax.SAXStream = SAXStream\nsax.createStream = createStream\n\n// When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n// When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n// since that's the earliest that a buffer overrun could occur.  This way, checks are\n// as rare as required, but as often as necessary to ensure never crossing this bound.\n// Furthermore, buffers are only tested at most once per write(), so passing a very\n// large string into write() might have undesirable effects, but this is manageable by\n// the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n// edge case, result in creating at most one complete copy of the string passed in.\n// Set to Infinity to have unlimited buffers.\nsax.MAX_BUFFER_LENGTH = 64 * 1024\n\nvar buffers = [\n  \"comment\", \"sgmlDecl\", \"textNode\", \"tagName\", \"doctype\",\n  \"procInstName\", \"procInstBody\", \"entity\", \"attribName\",\n  \"attribValue\", \"cdata\", \"script\"\n]\n\nsax.EVENTS = // for discoverability.\n  [ \"text\"\n  , \"processinginstruction\"\n  , \"sgmldeclaration\"\n  , \"doctype\"\n  , \"comment\"\n  , \"attribute\"\n  , \"opentag\"\n  , \"closetag\"\n  , \"opencdata\"\n  , \"cdata\"\n  , \"closecdata\"\n  , \"error\"\n  , \"end\"\n  , \"ready\"\n  , \"script\"\n  , \"opennamespace\"\n  , \"closenamespace\"\n  ]\n\nfunction SAXParser (strict, opt) {\n  if (!(this instanceof SAXParser)) return new SAXParser(strict, opt)\n\n  var parser = this\n  clearBuffers(parser)\n  parser.q = parser.c = \"\"\n  parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n  parser.opt = opt || {}\n  parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n  parser.looseCase = parser.opt.lowercase ? \"toLowerCase\" : \"toUpperCase\"\n  parser.tags = []\n  parser.closed = parser.closedRoot = parser.sawRoot = false\n  parser.tag = parser.error = null\n  parser.strict = !!strict\n  parser.noscript = !!(strict || parser.opt.noscript)\n  parser.state = S.BEGIN\n  parser.ENTITIES = Object.create(sax.ENTITIES)\n  parser.attribList = []\n\n  // namespaces form a prototype chain.\n  // it always points at the current tag,\n  // which protos to its parent tag.\n  if (parser.opt.xmlns) parser.ns = Object.create(rootNS)\n\n  // mostly just for error reporting\n  parser.trackPosition = parser.opt.position !== false\n  if (parser.trackPosition) {\n    parser.position = parser.line = parser.column = 0\n  }\n  emit(parser, \"onready\")\n}\n\nif (!Object.create) Object.create = function (o) {\n  function f () { this.__proto__ = o }\n  f.prototype = o\n  return new f\n}\n\nif (!Object.getPrototypeOf) Object.getPrototypeOf = function (o) {\n  return o.__proto__\n}\n\nif (!Object.keys) Object.keys = function (o) {\n  var a = []\n  for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n  return a\n}\n\nfunction checkBufferLength (parser) {\n  var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    , maxActual = 0\n  for (var i = 0, l = buffers.length; i < l; i ++) {\n    var len = parser[buffers[i]].length\n    if (len > maxAllowed) {\n      // Text/cdata nodes can get big, and since they're buffered,\n      // we can get here under normal conditions.\n      // Avoid issues by emitting the text node now,\n      // so at least it won't get any bigger.\n      switch (buffers[i]) {\n        case \"textNode\":\n          closeText(parser)\n        break\n\n        case \"cdata\":\n          emitNode(parser, \"oncdata\", parser.cdata)\n          parser.cdata = \"\"\n        break\n\n        case \"script\":\n          emitNode(parser, \"onscript\", parser.script)\n          parser.script = \"\"\n        break\n\n        default:\n          error(parser, \"Max buffer length exceeded: \"+buffers[i])\n      }\n    }\n    maxActual = Math.max(maxActual, len)\n  }\n  // schedule the next check for the earliest possible buffer overrun.\n  parser.bufferCheckPosition = (sax.MAX_BUFFER_LENGTH - maxActual)\n                             + parser.position\n}\n\nfunction clearBuffers (parser) {\n  for (var i = 0, l = buffers.length; i < l; i ++) {\n    parser[buffers[i]] = \"\"\n  }\n}\n\nSAXParser.prototype =\n  { end: function () { end(this) }\n  , write: write\n  , resume: function () { this.error = null; return this }\n  , close: function () { return this.write(null) }\n  }\n\ntry {\n  var Stream = require(\"stream\").Stream\n} catch (ex) {\n  var Stream = function () {}\n}\n\n\nvar streamWraps = sax.EVENTS.filter(function (ev) {\n  return ev !== \"error\" && ev !== \"end\"\n})\n\nfunction createStream (strict, opt) {\n  return new SAXStream(strict, opt)\n}\n\nfunction SAXStream (strict, opt) {\n  if (!(this instanceof SAXStream)) return new SAXStream(strict, opt)\n\n  Stream.apply(this)\n\n  this._parser = new SAXParser(strict, opt)\n  this.writable = true\n  this.readable = true\n\n\n  var me = this\n\n  this._parser.onend = function () {\n    me.emit(\"end\")\n  }\n\n  this._parser.onerror = function (er) {\n    me.emit(\"error\", er)\n\n    // if didn't throw, then means error was handled.\n    // go ahead and clear error, so we can write again.\n    me._parser.error = null\n  }\n\n  this._decoder = null;\n\n  streamWraps.forEach(function (ev) {\n    Object.defineProperty(me, \"on\" + ev, {\n      get: function () { return me._parser[\"on\" + ev] },\n      set: function (h) {\n        if (!h) {\n          me.removeAllListeners(ev)\n          return me._parser[\"on\"+ev] = h\n        }\n        me.on(ev, h)\n      },\n      enumerable: true,\n      configurable: false\n    })\n  })\n}\n\nSAXStream.prototype = Object.create(Stream.prototype,\n  { constructor: { value: SAXStream } })\n\nSAXStream.prototype.write = function (data) {\n  if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n    if (!this._decoder) {\n      var SD = require('string_decoder').StringDecoder\n      this._decoder = new SD('utf8')\n    }\n    data = this._decoder.write(data);\n  }\n\n  this._parser.write(data.toString())\n  this.emit(\"data\", data)\n  return true\n}\n\nSAXStream.prototype.end = function (chunk) {\n  if (chunk && chunk.length) this.write(chunk)\n  else if (this.leftovers) this._parser.write(this.leftovers.toString())\n  this._parser.end()\n  return true\n}\n\nSAXStream.prototype.on = function (ev, handler) {\n  var me = this\n  if (!me._parser[\"on\"+ev] && streamWraps.indexOf(ev) !== -1) {\n    me._parser[\"on\"+ev] = function () {\n      var args = arguments.length === 1 ? [arguments[0]]\n               : Array.apply(null, arguments)\n      args.splice(0, 0, ev)\n      me.emit.apply(me, args)\n    }\n  }\n\n  return Stream.prototype.on.call(me, ev, handler)\n}\n\n\n\n// character classes and tokens\nvar whitespace = \"\\r\\n\\t \"\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  , number = \"0124356789\"\n  , letter = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n  // (Letter | \"_\" | \":\")\n  , quote = \"'\\\"\"\n  , entity = number+letter+\"#\"\n  , attribEnd = whitespace + \">\"\n  , CDATA = \"[CDATA[\"\n  , DOCTYPE = \"DOCTYPE\"\n  , XML_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\"\n  , XMLNS_NAMESPACE = \"http://www.w3.org/2000/xmlns/\"\n  , rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n// turn all the string character sets into character class objects.\nwhitespace = charClass(whitespace)\nnumber = charClass(number)\nletter = charClass(letter)\n\n// http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n// This implementation works on strings, a single character at a time\n// as such, it cannot ever support astral-plane characters (10000-EFFFF)\n// without a significant breaking change to either this  parser, or the\n// JavaScript language.  Implementation of an emoji-capable xml parser\n// is left as an exercise for the reader.\nvar nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\nvar nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040\\.\\d-]/\n\nquote = charClass(quote)\nentity = charClass(entity)\nattribEnd = charClass(attribEnd)\n\nfunction charClass (str) {\n  return str.split(\"\").reduce(function (s, c) {\n    s[c] = true\n    return s\n  }, {})\n}\n\nfunction isRegExp (c) {\n  return Object.prototype.toString.call(c) === '[object RegExp]'\n}\n\nfunction is (charclass, c) {\n  return isRegExp(charclass) ? !!c.match(charclass) : charclass[c]\n}\n\nfunction not (charclass, c) {\n  return !is(charclass, c)\n}\n\nvar S = 0\nsax.STATE =\n{ BEGIN                     : S++\n, TEXT                      : S++ // general stuff\n, TEXT_ENTITY               : S++ // &amp and such.\n, OPEN_WAKA                 : S++ // <\n, SGML_DECL                 : S++ // <!BLARG\n, SGML_DECL_QUOTED          : S++ // <!BLARG foo \"bar\n, DOCTYPE                   : S++ // <!DOCTYPE\n, DOCTYPE_QUOTED            : S++ // <!DOCTYPE \"//blah\n, DOCTYPE_DTD               : S++ // <!DOCTYPE \"//blah\" [ ...\n, DOCTYPE_DTD_QUOTED        : S++ // <!DOCTYPE \"//blah\" [ \"foo\n, COMMENT_STARTING          : S++ // <!-\n, COMMENT                   : S++ // <!--\n, COMMENT_ENDING            : S++ // <!-- blah -\n, COMMENT_ENDED             : S++ // <!-- blah --\n, CDATA                     : S++ // <![CDATA[ something\n, CDATA_ENDING              : S++ // ]\n, CDATA_ENDING_2            : S++ // ]]\n, PROC_INST                 : S++ // <?hi\n, PROC_INST_BODY            : S++ // <?hi there\n, PROC_INST_ENDING          : S++ // <?hi \"there\" ?\n, OPEN_TAG                  : S++ // <strong\n, OPEN_TAG_SLASH            : S++ // <strong /\n, ATTRIB                    : S++ // <a\n, ATTRIB_NAME               : S++ // <a foo\n, ATTRIB_NAME_SAW_WHITE     : S++ // <a foo _\n, ATTRIB_VALUE              : S++ // <a foo=\n, ATTRIB_VALUE_QUOTED       : S++ // <a foo=\"bar\n, ATTRIB_VALUE_UNQUOTED     : S++ // <a foo=bar\n, ATTRIB_VALUE_ENTITY_Q     : S++ // <foo bar=\"&quot;\"\n, ATTRIB_VALUE_ENTITY_U     : S++ // <foo bar=&quot;\n, CLOSE_TAG                 : S++ // </a\n, CLOSE_TAG_SAW_WHITE       : S++ // </a   >\n, SCRIPT                    : S++ // <script> ...\n, SCRIPT_ENDING             : S++ // <script> ... <\n}\n\nsax.ENTITIES =\n{ \"amp\" : \"&\"\n, \"gt\" : \">\"\n, \"lt\" : \"<\"\n, \"quot\" : \"\\\"\"\n, \"apos\" : \"'\"\n, \"AElig\" : 198\n, \"Aacute\" : 193\n, \"Acirc\" : 194\n, \"Agrave\" : 192\n, \"Aring\" : 197\n, \"Atilde\" : 195\n, \"Auml\" : 196\n, \"Ccedil\" : 199\n, \"ETH\" : 208\n, \"Eacute\" : 201\n, \"Ecirc\" : 202\n, \"Egrave\" : 200\n, \"Euml\" : 203\n, \"Iacute\" : 205\n, \"Icirc\" : 206\n, \"Igrave\" : 204\n, \"Iuml\" : 207\n, \"Ntilde\" : 209\n, \"Oacute\" : 211\n, \"Ocirc\" : 212\n, \"Ograve\" : 210\n, \"Oslash\" : 216\n, \"Otilde\" : 213\n, \"Ouml\" : 214\n, \"THORN\" : 222\n, \"Uacute\" : 218\n, \"Ucirc\" : 219\n, \"Ugrave\" : 217\n, \"Uuml\" : 220\n, \"Yacute\" : 221\n, \"aacute\" : 225\n, \"acirc\" : 226\n, \"aelig\" : 230\n, \"agrave\" : 224\n, \"aring\" : 229\n, \"atilde\" : 227\n, \"auml\" : 228\n, \"ccedil\" : 231\n, \"eacute\" : 233\n, \"ecirc\" : 234\n, \"egrave\" : 232\n, \"eth\" : 240\n, \"euml\" : 235\n, \"iacute\" : 237\n, \"icirc\" : 238\n, \"igrave\" : 236\n, \"iuml\" : 239\n, \"ntilde\" : 241\n, \"oacute\" : 243\n, \"ocirc\" : 244\n, \"ograve\" : 242\n, \"oslash\" : 248\n, \"otilde\" : 245\n, \"ouml\" : 246\n, \"szlig\" : 223\n, \"thorn\" : 254\n, \"uacute\" : 250\n, \"ucirc\" : 251\n, \"ugrave\" : 249\n, \"uuml\" : 252\n, \"yacute\" : 253\n, \"yuml\" : 255\n, \"copy\" : 169\n, \"reg\" : 174\n, \"nbsp\" : 160\n, \"iexcl\" : 161\n, \"cent\" : 162\n, \"pound\" : 163\n, \"curren\" : 164\n, \"yen\" : 165\n, \"brvbar\" : 166\n, \"sect\" : 167\n, \"uml\" : 168\n, \"ordf\" : 170\n, \"laquo\" : 171\n, \"not\" : 172\n, \"shy\" : 173\n, \"macr\" : 175\n, \"deg\" : 176\n, \"plusmn\" : 177\n, \"sup1\" : 185\n, \"sup2\" : 178\n, \"sup3\" : 179\n, \"acute\" : 180\n, \"micro\" : 181\n, \"para\" : 182\n, \"middot\" : 183\n, \"cedil\" : 184\n, \"ordm\" : 186\n, \"raquo\" : 187\n, \"frac14\" : 188\n, \"frac12\" : 189\n, \"frac34\" : 190\n, \"iquest\" : 191\n, \"times\" : 215\n, \"divide\" : 247\n, \"OElig\" : 338\n, \"oelig\" : 339\n, \"Scaron\" : 352\n, \"scaron\" : 353\n, \"Yuml\" : 376\n, \"fnof\" : 402\n, \"circ\" : 710\n, \"tilde\" : 732\n, \"Alpha\" : 913\n, \"Beta\" : 914\n, \"Gamma\" : 915\n, \"Delta\" : 916\n, \"Epsilon\" : 917\n, \"Zeta\" : 918\n, \"Eta\" : 919\n, \"Theta\" : 920\n, \"Iota\" : 921\n, \"Kappa\" : 922\n, \"Lambda\" : 923\n, \"Mu\" : 924\n, \"Nu\" : 925\n, \"Xi\" : 926\n, \"Omicron\" : 927\n, \"Pi\" : 928\n, \"Rho\" : 929\n, \"Sigma\" : 931\n, \"Tau\" : 932\n, \"Upsilon\" : 933\n, \"Phi\" : 934\n, \"Chi\" : 935\n, \"Psi\" : 936\n, \"Omega\" : 937\n, \"alpha\" : 945\n, \"beta\" : 946\n, \"gamma\" : 947\n, \"delta\" : 948\n, \"epsilon\" : 949\n, \"zeta\" : 950\n, \"eta\" : 951\n, \"theta\" : 952\n, \"iota\" : 953\n, \"kappa\" : 954\n, \"lambda\" : 955\n, \"mu\" : 956\n, \"nu\" : 957\n, \"xi\" : 958\n, \"omicron\" : 959\n, \"pi\" : 960\n, \"rho\" : 961\n, \"sigmaf\" : 962\n, \"sigma\" : 963\n, \"tau\" : 964\n, \"upsilon\" : 965\n, \"phi\" : 966\n, \"chi\" : 967\n, \"psi\" : 968\n, \"omega\" : 969\n, \"thetasym\" : 977\n, \"upsih\" : 978\n, \"piv\" : 982\n, \"ensp\" : 8194\n, \"emsp\" : 8195\n, \"thinsp\" : 8201\n, \"zwnj\" : 8204\n, \"zwj\" : 8205\n, \"lrm\" : 8206\n, \"rlm\" : 8207\n, \"ndash\" : 8211\n, \"mdash\" : 8212\n, \"lsquo\" : 8216\n, \"rsquo\" : 8217\n, \"sbquo\" : 8218\n, \"ldquo\" : 8220\n, \"rdquo\" : 8221\n, \"bdquo\" : 8222\n, \"dagger\" : 8224\n, \"Dagger\" : 8225\n, \"bull\" : 8226\n, \"hellip\" : 8230\n, \"permil\" : 8240\n, \"prime\" : 8242\n, \"Prime\" : 8243\n, \"lsaquo\" : 8249\n, \"rsaquo\" : 8250\n, \"oline\" : 8254\n, \"frasl\" : 8260\n, \"euro\" : 8364\n, \"image\" : 8465\n, \"weierp\" : 8472\n, \"real\" : 8476\n, \"trade\" : 8482\n, \"alefsym\" : 8501\n, \"larr\" : 8592\n, \"uarr\" : 8593\n, \"rarr\" : 8594\n, \"darr\" : 8595\n, \"harr\" : 8596\n, \"crarr\" : 8629\n, \"lArr\" : 8656\n, \"uArr\" : 8657\n, \"rArr\" : 8658\n, \"dArr\" : 8659\n, \"hArr\" : 8660\n, \"forall\" : 8704\n, \"part\" : 8706\n, \"exist\" : 8707\n, \"empty\" : 8709\n, \"nabla\" : 8711\n, \"isin\" : 8712\n, \"notin\" : 8713\n, \"ni\" : 8715\n, \"prod\" : 8719\n, \"sum\" : 8721\n, \"minus\" : 8722\n, \"lowast\" : 8727\n, \"radic\" : 8730\n, \"prop\" : 8733\n, \"infin\" : 8734\n, \"ang\" : 8736\n, \"and\" : 8743\n, \"or\" : 8744\n, \"cap\" : 8745\n, \"cup\" : 8746\n, \"int\" : 8747\n, \"there4\" : 8756\n, \"sim\" : 8764\n, \"cong\" : 8773\n, \"asymp\" : 8776\n, \"ne\" : 8800\n, \"equiv\" : 8801\n, \"le\" : 8804\n, \"ge\" : 8805\n, \"sub\" : 8834\n, \"sup\" : 8835\n, \"nsub\" : 8836\n, \"sube\" : 8838\n, \"supe\" : 8839\n, \"oplus\" : 8853\n, \"otimes\" : 8855\n, \"perp\" : 8869\n, \"sdot\" : 8901\n, \"lceil\" : 8968\n, \"rceil\" : 8969\n, \"lfloor\" : 8970\n, \"rfloor\" : 8971\n, \"lang\" : 9001\n, \"rang\" : 9002\n, \"loz\" : 9674\n, \"spades\" : 9824\n, \"clubs\" : 9827\n, \"hearts\" : 9829\n, \"diams\" : 9830\n}\n\nObject.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n})\n\nfor (var S in sax.STATE) sax.STATE[sax.STATE[S]] = S\n\n// shorthand\nS = sax.STATE\n\nfunction emit (parser, event, data) {\n  parser[event] && parser[event](data)\n}\n\nfunction emitNode (parser, nodeType, data) {\n  if (parser.textNode) closeText(parser)\n  emit(parser, nodeType, data)\n}\n\nfunction closeText (parser) {\n  parser.textNode = textopts(parser.opt, parser.textNode)\n  if (parser.textNode) emit(parser, \"ontext\", parser.textNode)\n  parser.textNode = \"\"\n}\n\nfunction textopts (opt, text) {\n  if (opt.trim) text = text.trim()\n  if (opt.normalize) text = text.replace(/\\s+/g, \" \")\n  return text\n}\n\nfunction error (parser, er) {\n  closeText(parser)\n  if (parser.trackPosition) {\n    er += \"\\nLine: \"+parser.line+\n          \"\\nColumn: \"+parser.column+\n          \"\\nChar: \"+parser.c\n  }\n  er = new Error(er)\n  parser.error = er\n  emit(parser, \"onerror\", er)\n  return parser\n}\n\nfunction end (parser) {\n  if (!parser.closedRoot) strictFail(parser, \"Unclosed root tag\")\n  if (parser.state !== S.TEXT) error(parser, \"Unexpected end\")\n  closeText(parser)\n  parser.c = \"\"\n  parser.closed = true\n  emit(parser, \"onend\")\n  SAXParser.call(parser, parser.strict, parser.opt)\n  return parser\n}\n\nfunction strictFail (parser, message) {\n  if (typeof parser !== 'object' || !(parser instanceof SAXParser))\n    throw new Error('bad call to strictFail');\n  if (parser.strict) error(parser, message)\n}\n\nfunction newTag (parser) {\n  if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n  var parent = parser.tags[parser.tags.length - 1] || parser\n    , tag = parser.tag = { name : parser.tagName, attributes : {} }\n\n  // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n  if (parser.opt.xmlns) tag.ns = parent.ns\n  parser.attribList.length = 0\n}\n\nfunction qname (name) {\n  var i = name.indexOf(\":\")\n    , qualName = i < 0 ? [ \"\", name ] : name.split(\":\")\n    , prefix = qualName[0]\n    , local = qualName[1]\n\n  // <x \"xmlns\"=\"http://foo\">\n  if (name === \"xmlns\") {\n    prefix = \"xmlns\"\n    local = \"\"\n  }\n\n  return { prefix: prefix, local: local }\n}\n\nfunction attrib (parser) {\n  if (!parser.strict) parser.attribName = parser.attribName[parser.looseCase]()\n\n  if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n    return parser.attribName = parser.attribValue = \"\"\n  }\n\n  if (parser.opt.xmlns) {\n    var qn = qname(parser.attribName)\n      , prefix = qn.prefix\n      , local = qn.local\n\n    if (prefix === \"xmlns\") {\n      // namespace binding attribute; push the binding into scope\n      if (local === \"xml\" && parser.attribValue !== XML_NAMESPACE) {\n        strictFail( parser\n                  , \"xml: prefix must be bound to \" + XML_NAMESPACE + \"\\n\"\n                  + \"Actual: \" + parser.attribValue )\n      } else if (local === \"xmlns\" && parser.attribValue !== XMLNS_NAMESPACE) {\n        strictFail( parser\n                  , \"xmlns: prefix must be bound to \" + XMLNS_NAMESPACE + \"\\n\"\n                  + \"Actual: \" + parser.attribValue )\n      } else {\n        var tag = parser.tag\n          , parent = parser.tags[parser.tags.length - 1] || parser\n        if (tag.ns === parent.ns) {\n          tag.ns = Object.create(parent.ns)\n        }\n        tag.ns[local] = parser.attribValue\n      }\n    }\n\n    // defer onattribute events until all attributes have been seen\n    // so any new bindings can take effect; preserve attribute order\n    // so deferred events can be emitted in document order\n    parser.attribList.push([parser.attribName, parser.attribValue])\n  } else {\n    // in non-xmlns mode, we can emit the event right away\n    parser.tag.attributes[parser.attribName] = parser.attribValue\n    emitNode( parser\n            , \"onattribute\"\n            , { name: parser.attribName\n              , value: parser.attribValue } )\n  }\n\n  parser.attribName = parser.attribValue = \"\"\n}\n\nfunction openTag (parser, selfClosing) {\n  if (parser.opt.xmlns) {\n    // emit namespace binding events\n    var tag = parser.tag\n\n    // add namespace info to tag\n    var qn = qname(parser.tagName)\n    tag.prefix = qn.prefix\n    tag.local = qn.local\n    tag.uri = tag.ns[qn.prefix] || \"\"\n\n    if (tag.prefix && !tag.uri) {\n      strictFail(parser, \"Unbound namespace prefix: \"\n                       + JSON.stringify(parser.tagName))\n      tag.uri = qn.prefix\n    }\n\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    if (tag.ns && parent.ns !== tag.ns) {\n      Object.keys(tag.ns).forEach(function (p) {\n        emitNode( parser\n                , \"onopennamespace\"\n                , { prefix: p , uri: tag.ns[p] } )\n      })\n    }\n\n    // handle deferred onattribute events\n    // Note: do not apply default ns to attributes:\n    //   http://www.w3.org/TR/REC-xml-names/#defaulting\n    for (var i = 0, l = parser.attribList.length; i < l; i ++) {\n      var nv = parser.attribList[i]\n      var name = nv[0]\n        , value = nv[1]\n        , qualName = qname(name)\n        , prefix = qualName.prefix\n        , local = qualName.local\n        , uri = prefix == \"\" ? \"\" : (tag.ns[prefix] || \"\")\n        , a = { name: name\n              , value: value\n              , prefix: prefix\n              , local: local\n              , uri: uri\n              }\n\n      // if there's any attributes with an undefined namespace,\n      // then fail on them now.\n      if (prefix && prefix != \"xmlns\" && !uri) {\n        strictFail(parser, \"Unbound namespace prefix: \"\n                         + JSON.stringify(prefix))\n        a.uri = prefix\n      }\n      parser.tag.attributes[name] = a\n      emitNode(parser, \"onattribute\", a)\n    }\n    parser.attribList.length = 0\n  }\n\n  parser.tag.isSelfClosing = !!selfClosing\n\n  // process the tag\n  parser.sawRoot = true\n  parser.tags.push(parser.tag)\n  emitNode(parser, \"onopentag\", parser.tag)\n  if (!selfClosing) {\n    // special case for <script> in non-strict mode.\n    if (!parser.noscript && parser.tagName.toLowerCase() === \"script\") {\n      parser.state = S.SCRIPT\n    } else {\n      parser.state = S.TEXT\n    }\n    parser.tag = null\n    parser.tagName = \"\"\n  }\n  parser.attribName = parser.attribValue = \"\"\n  parser.attribList.length = 0\n}\n\nfunction closeTag (parser) {\n  if (!parser.tagName) {\n    strictFail(parser, \"Weird empty close tag.\")\n    parser.textNode += \"</>\"\n    parser.state = S.TEXT\n    return\n  }\n\n  if (parser.script) {\n    if (parser.tagName !== \"script\") {\n      parser.script += \"</\" + parser.tagName + \">\"\n      parser.tagName = \"\"\n      parser.state = S.SCRIPT\n      return\n    }\n    emitNode(parser, \"onscript\", parser.script)\n    parser.script = \"\"\n  }\n\n  // first make sure that the closing tag actually exists.\n  // <a><b></c></b></a> will close everything, otherwise.\n  var t = parser.tags.length\n  var tagName = parser.tagName\n  if (!parser.strict) tagName = tagName[parser.looseCase]()\n  var closeTo = tagName\n  while (t --) {\n    var close = parser.tags[t]\n    if (close.name !== closeTo) {\n      // fail the first time in strict mode\n      strictFail(parser, \"Unexpected close tag\")\n    } else break\n  }\n\n  // didn't find it.  we already failed for strict, so just abort.\n  if (t < 0) {\n    strictFail(parser, \"Unmatched closing tag: \"+parser.tagName)\n    parser.textNode += \"</\" + parser.tagName + \">\"\n    parser.state = S.TEXT\n    return\n  }\n  parser.tagName = tagName\n  var s = parser.tags.length\n  while (s --> t) {\n    var tag = parser.tag = parser.tags.pop()\n    parser.tagName = parser.tag.name\n    emitNode(parser, \"onclosetag\", parser.tagName)\n\n    var x = {}\n    for (var i in tag.ns) x[i] = tag.ns[i]\n\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    if (parser.opt.xmlns && tag.ns !== parent.ns) {\n      // remove namespace bindings introduced by tag\n      Object.keys(tag.ns).forEach(function (p) {\n        var n = tag.ns[p]\n        emitNode(parser, \"onclosenamespace\", { prefix: p, uri: n })\n      })\n    }\n  }\n  if (t === 0) parser.closedRoot = true\n  parser.tagName = parser.attribValue = parser.attribName = \"\"\n  parser.attribList.length = 0\n  parser.state = S.TEXT\n}\n\nfunction parseEntity (parser) {\n  var entity = parser.entity\n    , entityLC = entity.toLowerCase()\n    , num\n    , numStr = \"\"\n  if (parser.ENTITIES[entity])\n    return parser.ENTITIES[entity]\n  if (parser.ENTITIES[entityLC])\n    return parser.ENTITIES[entityLC]\n  entity = entityLC\n  if (entity.charAt(0) === \"#\") {\n    if (entity.charAt(1) === \"x\") {\n      entity = entity.slice(2)\n      num = parseInt(entity, 16)\n      numStr = num.toString(16)\n    } else {\n      entity = entity.slice(1)\n      num = parseInt(entity, 10)\n      numStr = num.toString(10)\n    }\n  }\n  entity = entity.replace(/^0+/, \"\")\n  if (numStr.toLowerCase() !== entity) {\n    strictFail(parser, \"Invalid character entity\")\n    return \"&\"+parser.entity + \";\"\n  }\n  return String.fromCharCode(num)\n}\n\nfunction write (chunk) {\n  var parser = this\n  if (this.error) throw this.error\n  if (parser.closed) return error(parser,\n    \"Cannot write after close. Assign an onready handler.\")\n  if (chunk === null) return end(parser)\n  var i = 0, c = \"\"\n  while (parser.c = c = chunk.charAt(i++)) {\n    if (parser.trackPosition) {\n      parser.position ++\n      if (c === \"\\n\") {\n        parser.line ++\n        parser.column = 0\n      } else parser.column ++\n    }\n    switch (parser.state) {\n\n      case S.BEGIN:\n        if (c === \"<\") {\n          parser.state = S.OPEN_WAKA\n          parser.startTagPosition = parser.position\n        } else if (not(whitespace,c)) {\n          // have to process this as a text node.\n          // weird, but happens.\n          strictFail(parser, \"Non-whitespace before first tag.\")\n          parser.textNode = c\n          parser.state = S.TEXT\n        }\n      continue\n\n      case S.TEXT:\n        if (parser.sawRoot && !parser.closedRoot) {\n          var starti = i-1\n          while (c && c!==\"<\" && c!==\"&\") {\n            c = chunk.charAt(i++)\n            if (c && parser.trackPosition) {\n              parser.position ++\n              if (c === \"\\n\") {\n                parser.line ++\n                parser.column = 0\n              } else parser.column ++\n            }\n          }\n          parser.textNode += chunk.substring(starti, i-1)\n        }\n        if (c === \"<\") {\n          parser.state = S.OPEN_WAKA\n          parser.startTagPosition = parser.position\n        } else {\n          if (not(whitespace, c) && (!parser.sawRoot || parser.closedRoot))\n            strictFail(parser, \"Text data outside of root node.\")\n          if (c === \"&\") parser.state = S.TEXT_ENTITY\n          else parser.textNode += c\n        }\n      continue\n\n      case S.SCRIPT:\n        // only non-strict\n        if (c === \"<\") {\n          parser.state = S.SCRIPT_ENDING\n        } else parser.script += c\n      continue\n\n      case S.SCRIPT_ENDING:\n        if (c === \"/\") {\n          parser.state = S.CLOSE_TAG\n        } else {\n          parser.script += \"<\" + c\n          parser.state = S.SCRIPT\n        }\n      continue\n\n      case S.OPEN_WAKA:\n        // either a /, ?, !, or text is coming next.\n        if (c === \"!\") {\n          parser.state = S.SGML_DECL\n          parser.sgmlDecl = \"\"\n        } else if (is(whitespace, c)) {\n          // wait for it...\n        } else if (is(nameStart,c)) {\n          parser.state = S.OPEN_TAG\n          parser.tagName = c\n        } else if (c === \"/\") {\n          parser.state = S.CLOSE_TAG\n          parser.tagName = \"\"\n        } else if (c === \"?\") {\n          parser.state = S.PROC_INST\n          parser.procInstName = parser.procInstBody = \"\"\n        } else {\n          strictFail(parser, \"Unencoded <\")\n          // if there was some whitespace, then add that in.\n          if (parser.startTagPosition + 1 < parser.position) {\n            var pad = parser.position - parser.startTagPosition\n            c = new Array(pad).join(\" \") + c\n          }\n          parser.textNode += \"<\" + c\n          parser.state = S.TEXT\n        }\n      continue\n\n      case S.SGML_DECL:\n        if ((parser.sgmlDecl+c).toUpperCase() === CDATA) {\n          emitNode(parser, \"onopencdata\")\n          parser.state = S.CDATA\n          parser.sgmlDecl = \"\"\n          parser.cdata = \"\"\n        } else if (parser.sgmlDecl+c === \"--\") {\n          parser.state = S.COMMENT\n          parser.comment = \"\"\n          parser.sgmlDecl = \"\"\n        } else if ((parser.sgmlDecl+c).toUpperCase() === DOCTYPE) {\n          parser.state = S.DOCTYPE\n          if (parser.doctype || parser.sawRoot) strictFail(parser,\n            \"Inappropriately located doctype declaration\")\n          parser.doctype = \"\"\n          parser.sgmlDecl = \"\"\n        } else if (c === \">\") {\n          emitNode(parser, \"onsgmldeclaration\", parser.sgmlDecl)\n          parser.sgmlDecl = \"\"\n          parser.state = S.TEXT\n        } else if (is(quote, c)) {\n          parser.state = S.SGML_DECL_QUOTED\n          parser.sgmlDecl += c\n        } else parser.sgmlDecl += c\n      continue\n\n      case S.SGML_DECL_QUOTED:\n        if (c === parser.q) {\n          parser.state = S.SGML_DECL\n          parser.q = \"\"\n        }\n        parser.sgmlDecl += c\n      continue\n\n      case S.DOCTYPE:\n        if (c === \">\") {\n          parser.state = S.TEXT\n          emitNode(parser, \"ondoctype\", parser.doctype)\n          parser.doctype = true // just remember that we saw it.\n        } else {\n          parser.doctype += c\n          if (c === \"[\") parser.state = S.DOCTYPE_DTD\n          else if (is(quote, c)) {\n            parser.state = S.DOCTYPE_QUOTED\n            parser.q = c\n          }\n        }\n      continue\n\n      case S.DOCTYPE_QUOTED:\n        parser.doctype += c\n        if (c === parser.q) {\n          parser.q = \"\"\n          parser.state = S.DOCTYPE\n        }\n      continue\n\n      case S.DOCTYPE_DTD:\n        parser.doctype += c\n        if (c === \"]\") parser.state = S.DOCTYPE\n        else if (is(quote,c)) {\n          parser.state = S.DOCTYPE_DTD_QUOTED\n          parser.q = c\n        }\n      continue\n\n      case S.DOCTYPE_DTD_QUOTED:\n        parser.doctype += c\n        if (c === parser.q) {\n          parser.state = S.DOCTYPE_DTD\n          parser.q = \"\"\n        }\n      continue\n\n      case S.COMMENT:\n        if (c === \"-\") parser.state = S.COMMENT_ENDING\n        else parser.comment += c\n      continue\n\n      case S.COMMENT_ENDING:\n        if (c === \"-\") {\n          parser.state = S.COMMENT_ENDED\n          parser.comment = textopts(parser.opt, parser.comment)\n          if (parser.comment) emitNode(parser, \"oncomment\", parser.comment)\n          parser.comment = \"\"\n        } else {\n          parser.comment += \"-\" + c\n          parser.state = S.COMMENT\n        }\n      continue\n\n      case S.COMMENT_ENDED:\n        if (c !== \">\") {\n          strictFail(parser, \"Malformed comment\")\n          // allow <!-- blah -- bloo --> in non-strict mode,\n          // which is a comment of \" blah -- bloo \"\n          parser.comment += \"--\" + c\n          parser.state = S.COMMENT\n        } else parser.state = S.TEXT\n      continue\n\n      case S.CDATA:\n        if (c === \"]\") parser.state = S.CDATA_ENDING\n        else parser.cdata += c\n      continue\n\n      case S.CDATA_ENDING:\n        if (c === \"]\") parser.state = S.CDATA_ENDING_2\n        else {\n          parser.cdata += \"]\" + c\n          parser.state = S.CDATA\n        }\n      continue\n\n      case S.CDATA_ENDING_2:\n        if (c === \">\") {\n          if (parser.cdata) emitNode(parser, \"oncdata\", parser.cdata)\n          emitNode(parser, \"onclosecdata\")\n          parser.cdata = \"\"\n          parser.state = S.TEXT\n        } else if (c === \"]\") {\n          parser.cdata += \"]\"\n        } else {\n          parser.cdata += \"]]\" + c\n          parser.state = S.CDATA\n        }\n      continue\n\n      case S.PROC_INST:\n        if (c === \"?\") parser.state = S.PROC_INST_ENDING\n        else if (is(whitespace, c)) parser.state = S.PROC_INST_BODY\n        else parser.procInstName += c\n      continue\n\n      case S.PROC_INST_BODY:\n        if (!parser.procInstBody && is(whitespace, c)) continue\n        else if (c === \"?\") parser.state = S.PROC_INST_ENDING\n        else parser.procInstBody += c\n      continue\n\n      case S.PROC_INST_ENDING:\n        if (c === \">\") {\n          emitNode(parser, \"onprocessinginstruction\", {\n            name : parser.procInstName,\n            body : parser.procInstBody\n          })\n          parser.procInstName = parser.procInstBody = \"\"\n          parser.state = S.TEXT\n        } else {\n          parser.procInstBody += \"?\" + c\n          parser.state = S.PROC_INST_BODY\n        }\n      continue\n\n      case S.OPEN_TAG:\n        if (is(nameBody, c)) parser.tagName += c\n        else {\n          newTag(parser)\n          if (c === \">\") openTag(parser)\n          else if (c === \"/\") parser.state = S.OPEN_TAG_SLASH\n          else {\n            if (not(whitespace, c)) strictFail(\n              parser, \"Invalid character in tag name\")\n            parser.state = S.ATTRIB\n          }\n        }\n      continue\n\n      case S.OPEN_TAG_SLASH:\n        if (c === \">\") {\n          openTag(parser, true)\n          closeTag(parser)\n        } else {\n          strictFail(parser, \"Forward-slash in opening tag not followed by >\")\n          parser.state = S.ATTRIB\n        }\n      continue\n\n      case S.ATTRIB:\n        // haven't read the attribute name yet.\n        if (is(whitespace, c)) continue\n        else if (c === \">\") openTag(parser)\n        else if (c === \"/\") parser.state = S.OPEN_TAG_SLASH\n        else if (is(nameStart, c)) {\n          parser.attribName = c\n          parser.attribValue = \"\"\n          parser.state = S.ATTRIB_NAME\n        } else strictFail(parser, \"Invalid attribute name\")\n      continue\n\n      case S.ATTRIB_NAME:\n        if (c === \"=\") parser.state = S.ATTRIB_VALUE\n        else if (c === \">\") {\n          strictFail(parser, \"Attribute without value\")\n          parser.attribValue = parser.attribName\n          attrib(parser)\n          openTag(parser)\n        }\n        else if (is(whitespace, c)) parser.state = S.ATTRIB_NAME_SAW_WHITE\n        else if (is(nameBody, c)) parser.attribName += c\n        else strictFail(parser, \"Invalid attribute name\")\n      continue\n\n      case S.ATTRIB_NAME_SAW_WHITE:\n        if (c === \"=\") parser.state = S.ATTRIB_VALUE\n        else if (is(whitespace, c)) continue\n        else {\n          strictFail(parser, \"Attribute without value\")\n          parser.tag.attributes[parser.attribName] = \"\"\n          parser.attribValue = \"\"\n          emitNode(parser, \"onattribute\",\n                   { name : parser.attribName, value : \"\" })\n          parser.attribName = \"\"\n          if (c === \">\") openTag(parser)\n          else if (is(nameStart, c)) {\n            parser.attribName = c\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, \"Invalid attribute name\")\n            parser.state = S.ATTRIB\n          }\n        }\n      continue\n\n      case S.ATTRIB_VALUE:\n        if (is(whitespace, c)) continue\n        else if (is(quote, c)) {\n          parser.q = c\n          parser.state = S.ATTRIB_VALUE_QUOTED\n        } else {\n          strictFail(parser, \"Unquoted attribute value\")\n          parser.state = S.ATTRIB_VALUE_UNQUOTED\n          parser.attribValue = c\n        }\n      continue\n\n      case S.ATTRIB_VALUE_QUOTED:\n        if (c !== parser.q) {\n          if (c === \"&\") parser.state = S.ATTRIB_VALUE_ENTITY_Q\n          else parser.attribValue += c\n          continue\n        }\n        attrib(parser)\n        parser.q = \"\"\n        parser.state = S.ATTRIB\n      continue\n\n      case S.ATTRIB_VALUE_UNQUOTED:\n        if (not(attribEnd,c)) {\n          if (c === \"&\") parser.state = S.ATTRIB_VALUE_ENTITY_U\n          else parser.attribValue += c\n          continue\n        }\n        attrib(parser)\n        if (c === \">\") openTag(parser)\n        else parser.state = S.ATTRIB\n      continue\n\n      case S.CLOSE_TAG:\n        if (!parser.tagName) {\n          if (is(whitespace, c)) continue\n          else if (not(nameStart, c)) {\n            if (parser.script) {\n              parser.script += \"</\" + c\n              parser.state = S.SCRIPT\n            } else {\n              strictFail(parser, \"Invalid tagname in closing tag.\")\n            }\n          } else parser.tagName = c\n        }\n        else if (c === \">\") closeTag(parser)\n        else if (is(nameBody, c)) parser.tagName += c\n        else if (parser.script) {\n          parser.script += \"</\" + parser.tagName\n          parser.tagName = \"\"\n          parser.state = S.SCRIPT\n        } else {\n          if (not(whitespace, c)) strictFail(parser,\n            \"Invalid tagname in closing tag\")\n          parser.state = S.CLOSE_TAG_SAW_WHITE\n        }\n      continue\n\n      case S.CLOSE_TAG_SAW_WHITE:\n        if (is(whitespace, c)) continue\n        if (c === \">\") closeTag(parser)\n        else strictFail(parser, \"Invalid characters in closing tag\")\n      continue\n\n      case S.TEXT_ENTITY:\n      case S.ATTRIB_VALUE_ENTITY_Q:\n      case S.ATTRIB_VALUE_ENTITY_U:\n        switch(parser.state) {\n          case S.TEXT_ENTITY:\n            var returnState = S.TEXT, buffer = \"textNode\"\n          break\n\n          case S.ATTRIB_VALUE_ENTITY_Q:\n            var returnState = S.ATTRIB_VALUE_QUOTED, buffer = \"attribValue\"\n          break\n\n          case S.ATTRIB_VALUE_ENTITY_U:\n            var returnState = S.ATTRIB_VALUE_UNQUOTED, buffer = \"attribValue\"\n          break\n        }\n        if (c === \";\") {\n          parser[buffer] += parseEntity(parser)\n          parser.entity = \"\"\n          parser.state = returnState\n        }\n        else if (is(entity, c)) parser.entity += c\n        else {\n          strictFail(parser, \"Invalid character entity\")\n          parser[buffer] += \"&\" + parser.entity + c\n          parser.entity = \"\"\n          parser.state = returnState\n        }\n      continue\n\n      default:\n        throw new Error(parser, \"Unknown state: \" + parser.state)\n    }\n  } // while\n  // cdata blocks can get very big under normal conditions. emit and move on.\n  // if (parser.state === S.CDATA && parser.cdata) {\n  //   emitNode(parser, \"oncdata\", parser.cdata)\n  //   parser.cdata = \"\"\n  // }\n  if (parser.position >= parser.bufferCheckPosition) checkBufferLength(parser)\n  return parser\n}\n\n})(typeof exports === \"undefined\" ? sax = {} : exports)\n","\nvar toSpace = require('to-space-case');\n\n\n/**\n * Expose `toCamelCase`.\n */\n\nmodule.exports = toCamelCase;\n\n\n/**\n * Convert a `string` to camel case.\n *\n * @param {String} string\n * @return {String}\n */\n\n\nfunction toCamelCase (string) {\n  return toSpace(string).replace(/\\s(\\w)/g, function (matches, letter) {\n    return letter.toUpperCase();\n  });\n}","\nvar clean = require('to-no-case');\n\n\n/**\n * Expose `toSpaceCase`.\n */\n\nmodule.exports = toSpaceCase;\n\n\n/**\n * Convert a `string` to space case.\n *\n * @param {String} string\n * @return {String}\n */\n\n\nfunction toSpaceCase (string) {\n  return clean(string).replace(/[\\W_]+(.|$)/g, function (matches, match) {\n    return match ? ' ' + match : '';\n  });\n}","\n/**\n * Expose `toNoCase`.\n */\n\nmodule.exports = toNoCase;\n\n\n/**\n * Test whether a string is camel-case.\n */\n\nvar hasSpace = /\\s/;\nvar hasCamel = /[a-z][A-Z]/;\nvar hasSeparator = /[\\W_]/;\n\n\n/**\n * Remove any starting case from a `string`, like camel or snake, but keep\n * spaces and punctuation that may be important otherwise.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toNoCase (string) {\n  if (hasSpace.test(string)) return string.toLowerCase();\n\n  if (hasSeparator.test(string)) string = unseparate(string);\n  if (hasCamel.test(string)) string = uncamelize(string);\n  return string.toLowerCase();\n}\n\n\n/**\n * Separator splitter.\n */\n\nvar separatorSplitter = /[\\W_]+(.|$)/g;\n\n\n/**\n * Un-separate a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction unseparate (string) {\n  return string.replace(separatorSplitter, function (m, next) {\n    return next ? ' ' + next : '';\n  });\n}\n\n\n/**\n * Camelcase splitter.\n */\n\nvar camelSplitter = /(.)([A-Z]+)/g;\n\n\n/**\n * Un-camelcase a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction uncamelize (string) {\n  return string.replace(camelSplitter, function (m, previous, uppers) {\n    return previous + ' ' + uppers.toLowerCase().split('').join(' ');\n  });\n}","'use strict';\n\nvar R  =require('ramda');\nvar uuid = require('uuid');\nvar state = require('../state');\n\nvar actions = module.exports = {\n  getCurrentPlan () {\n    var id = state.select('currentPlanId').get();\n    var index = R.findIndex(R.propEq('id', id))(state.select('plans').get());\n    return state.select('plans', index);\n  },\n\n  addCategory ({type, name, budget}) {\n    actions.getCurrentPlan().select('categories').push({\n      type, name, budget,\n      id: uuid.v4(),\n    });\n  },\n\n  addEntry ({description, category, expense, income, period}) {\n    actions.getCurrentPlan().select('entries').push({\n      description, category, expense, income, period,\n      id: uuid.v4(),\n    });\n  },\n\n  addPlan ({name, periods, categories = []}) { // jshint ignore:line\n    state.select('plans').push({\n      name, periods,\n      id: uuid.v4(),\n      entries: [],\n      categories: categories\n    });\n  },\n\n  updateCategory (id, fields) {\n    var categories = actions.getCurrentPlan().select('categories');\n    var categoryIndex = R.findIndex(R.propEq('id', id))(categories.get());\n\n    if(categoryIndex > -1) {\n      let category = actions.getCurrentPlan().select('categories', categoryIndex);\n\n      Object.keys(fields).forEach((key) => {\n        category.set(key, fields[key]);\n      });\n    }\n  },\n\n  updateEntry (id, fields) {\n    var entries = actions.getCurrentPlan().select('entries');\n    var entryIndex = R.findIndex(R.propEq('id', id))(entries.get());\n\n    if(entryIndex > -1) {\n      let entry = actions.getCurrentPlan().select('entries', entryIndex);\n\n      Object.keys(fields).forEach((key) => {\n        entry.set(key, fields[key]);\n      });\n    }\n  },\n\n  updateCurrentPlan (id) {\n    state.select('currentPlanId').set(id);\n  },\n\n  removeCategory (id) {\n    var categories = actions.getCurrentPlan().select('categories');\n    var categoryIndex = R.findIndex(R.propEq('id', id))(categories.get());\n\n    if(categoryIndex > -1) {\n      categories.splice([categoryIndex, 1]);\n    }\n  },\n\n  removeEntry (id) {\n    var entries = actions.getCurrentPlan().select('entries');\n    var entryIndex = R.findIndex(R.propEq('id', id))(entries.get());\n\n    if(entryIndex > -1) {\n      entries.splice([entryIndex, 1]);\n    }\n  },\n\n  removePlan (id) {\n    var plans = state.select('plans');\n    var planIndex = R.findIndex(R.propEq('id', id))(plans.get());\n\n    if(planIndex > -1) {\n      plans.splice([planIndex, 1]);\n    }\n  },\n\n  loadAllData (data) {\n    //## Validate?\n    Object.keys(data).forEach((key) => {\n      state.set(key, data[key]);\n    });\n  },\n\n};\n","'use strict';\n\nexports.sync = (lsKey, tree) => {\n  tree.on('update', function () {\n    window.localStorage.setItem(lsKey, JSON.stringify(tree.get()));\n  });\n};\n\nexports.load = (lsKey, tree) => {\n  var stored = JSON.parse(window.localStorage.getItem(lsKey) || 'null');\n\n  if(stored && typeof stored === 'object') {\n    Object.keys(stored).forEach((key) => {\n      tree.set(key, stored[key]);\n    });\n  }\n};\n","'use strict';\n\nvar Baobab = require('baobab');\nvar Bacon = require('baconjs');\nvar R = require('ramda');\n\n// Monkey patch cursors to get them as Bacon properties\nvar Cursor = require('baobab/src/cursor');\nvar Facet = require('baobab/src/facet');\n\nCursor.prototype.asProperty = Facet.prototype.asProperty = function () {\n  var cursor = this;\n\n  return Bacon.fromEventTarget(cursor, 'update')\n    .map(() => cursor.get())\n    .toProperty(cursor.get());\n};\n\n//## Let users create these\nvar categories = [\n  {\n    name: 'Rent',\n    id: 'Rent-default',\n    type: 'expense',\n    budget: 54000,\n  },\n  {\n    name: 'Food',\n    id: 'Food-default',\n    type: 'expense',\n    budget: 24000,\n  },\n  {\n    name: 'Travel',\n    id: 'Travel-default',\n    type: 'expense',\n    budget: 12000,\n  },\n  {\n    name: 'Salary',\n    id: 'Salary-default',\n    type: 'income',\n    budget: 120000,\n  }\n];\n\nmodule.exports = new Baobab({\n  currentPlanId: 'default-plan',\n  plans: [\n    {\n      name: 'Sample plan',\n      id: 'default-plan',\n      periods: ['April', 'May', 'June', 'August', 'September', 'October'],\n      entries: [],\n      categories: categories,\n    }\n  ],\n}, {\n  facets: {\n    currentPlan: {\n      cursors: {\n        id: 'currentPlanId',\n        plans: 'plans',\n      },\n      get ({id, plans}) {\n        return R.find(R.propEq('id', id), plans) || {};\n      }\n    },\n    currentCategories: {\n      cursors: {\n        id: 'currentPlanId',\n        plans: 'plans',\n      },\n      get ({id, plans}) {\n        var plan = R.find(R.propEq('id', id), plans);\n        return plan && plan.categories || [];\n      }\n    },\n    currentEntries: {\n      cursors: {\n        id: 'currentPlanId',\n        plans: 'plans',\n      },\n      get ({id, plans}) {\n        var plan = R.find(R.propEq('id', id), plans);\n        return plan && plan.entries || [];\n      }\n    },\n    currentPeriods: {\n      cursors: {\n        id: 'currentPlanId',\n        plans: 'plans',\n      },\n      get ({id, plans}) {\n        var plan = R.find(R.propEq('id', id), plans);\n        return plan && plan.periods;\n      }\n    },\n  }\n});\n","'use strict';\n\nvar vdom = require('virtual-dom');\nvar vhtml = require('virtual-html');\n\nvar mixin = (target, source) => {\n  Object.keys(source).forEach(key => target[key] = source[key]);\n  return target;\n};\n\nvar renderer = (omnium) => (data) => {\n  return omnium.render(data);\n};\n\nclass Omnium {\n  static create (settings) {\n    // Hack to simply return a function to call\n    return renderer(mixin(new Omnium(), settings));\n  }\n\n  render (data) {\n    if(!this.tree) {\n      this.init(data);\n    }\n    else {\n      this.render_(data);\n    }\n\n    return this;\n  }\n\n  init (data) {\n    var html = this.template(data);\n\n    this.tree = vhtml(html);\n    this.root = vdom.create(this.tree);\n    this.parent.appendChild(this.root);\n  }\n\n  render_ (data) {\n    var html = this.template(data);\n    var newTree = vhtml(html);\n    var patch = vdom.diff(this.tree, newTree);\n\n    vdom.patch(this.root, patch);\n    this.tree = newTree;\n  }\n}\n\nmodule.exports = Omnium;\n","'use strict';\n\nvar Omnium = require('../utils/omnium');\n\nvar template = ({name = '', budget = ''} = {}) => { // jshint ignore:line\n  return `\n    <form class=\"form-inline\">\n      <select type=\"text\" class=\"js-category-type form-control\">\n        <option value=\"expense\">Expense</option>\n        <option value=\"income\">Income</option>\n      </select>\n      <input type=\"text\" class=\"js-category-name form-control\" placeholder=\"Name\" value=\"${name}\">\n      <input type=\"number\" class=\"js-category-budget form-control\" placeholder=\"Budget\" value=\"${budget}\">\n      <button class=\"btn btn-primary\"><i class=\"glyphicon glyphicon-plus\"></i> Add Category</button>\n    </form>\n  `;\n};\n\nexports.init = (elem, state, actions) => {\n  var render = Omnium.create({\n    parent: elem.get(0),\n    template\n  });\n\n  render();\n\n  elem.asEventStream('submit')\n  .doAction('.preventDefault')\n  .map(() => ({\n    type: elem.find('.js-category-type').val(),\n    name: elem.find('.js-category-name').val(),\n    budget: elem.find('.js-category-budget').val(),\n  }))\n  .doAction(actions.addCategory)\n  .onValue(render);\n};\n","'use strict';\n\nrequire('bootstrap/js/modal');\n\nvar Omnium = require('../utils/omnium');\n\nvar periods = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n];\n\nvar option = (text) => `<option value=\"${text}\">${text}</option>`;\n\nvar modal = () => {\n  return `\n    <div class=\"js-add-plan-modal modal fade\" tabindex=\"-1\">\n      <div class=\"modal-dialog\">\n        <form class=\"modal-content\">\n          <div class=\"modal-header\">\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n            <h4 class=\"modal-title\" id=\"myModalLabel\">New plan</h4>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"form form-horizontal\">\n              <div class=\"form-group\">\n                <label class=\"col-sm-4 control-label\">Name</label>\n                <div class=\"col-sm-6\">\n                  <input type=\"text\" class=\"js-add-plan-name form-control\" value=\"\">\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label class=\"col-sm-4 control-label\">Periods</label>\n                <div class=\"col-sm-6\">\n                  <select type=\"text\" class=\"js-add-plan-period form-control\">\n                    ${periods.map(option).join('')}\n                  </select>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label class=\"col-sm-4 control-label\">Use budgets from current plan</label>\n                <div class=\"col-sm-6\">\n                  <input type=\"checkbox\" class=\"js-add-plan-clone\">\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n            <button class=\"btn btn-primary\">Add plan</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  `;\n};\n\nvar template = () => {\n  return `\n    <div>\n      <button class=\"js-add btn btn-primary pull-right\"><i class=\"glyphicon glyphicon-plus\"></i></button>\n      ${modal()}\n    </div>\n  `;\n};\n\nexports.init = (elem, {categories}, actions) => {\n  var render = Omnium.create({\n    parent: elem.get(0),\n    template\n  });\n\n  render();\n\n  elem.asEventStream('click', '.js-add').onValue(() => {\n    elem.find('.js-add-plan-modal').modal();\n  });\n\n  elem.asEventStream('submit')\n  .doAction('.preventDefault')\n  .onValue(() => {\n    var numberOfPeriods = 6;\n    var name = elem.find('.js-add-plan-name').val();\n    var cloneCategories = elem.find('.js-add-plan-clone').prop('checked');\n    var selectedPeriod = elem.find('.js-add-plan-period').val();\n    var selectedPeriodIndex = periods.indexOf(selectedPeriod);\n    // Loop the periods-array so we can take n periods from it with a slice\n    var extendedPeriods = [...periods].concat(periods.slice(0, numberOfPeriods));\n    var planPeriods = extendedPeriods.slice(selectedPeriodIndex, selectedPeriodIndex + numberOfPeriods);\n\n    actions.addPlan({\n      name,\n      periods: planPeriods,\n      categories: cloneCategories ? categories.get() : []\n    });\n\n    elem.find('.js-add-plan-modal').modal('hide');\n    render();\n  });\n};\n","'use strict';\n\nvar Bacon = require('baconjs');\nvar R = require('ramda');\nvar Omnium = require('../utils/omnium');\n\nvar hasCategory = R.propEq('category');\nvar hasPeriod = R.propEq('period');\nvar spentInPeriod = (entries, category, period, summer) => entries\n  .filter(hasCategory(category.id))\n  .filter(hasPeriod(period))\n  .map(summer)\n  .reduce(R.add, 0);\n\nvar expMinusInc = entry => +entry.expense - entry.income;\nvar incMinusExp = entry => +entry.income - entry.expense;\nvar periodHeader = period => `<th>${period}</th>`;\n\nvar categoryRow = (periods, entries, summer) => (category) => {\n  var periodResults = periods.map((period) => {\n    return `\n      <td>${spentInPeriod(entries, category, period, summer)}</td>\n    `;\n  }).join('');\n\n  var amountLeft = category.budget;\n  var periodBudgets = periods.map((period, i) => {\n    //## Take into consideration if period is past to move leftovers forward?\n\n    var maxBudgetThisPeriod = amountLeft/(periods.length - i);\n    var spentThisPeriod = spentInPeriod(entries, category, period, summer);\n    var budgetThisPeriod = Math.max(maxBudgetThisPeriod, spentThisPeriod);\n    var leftThisPeriod = budgetThisPeriod - spentThisPeriod;\n\n    amountLeft -= budgetThisPeriod;\n\n    return `\n      <td>${(leftThisPeriod).toFixed(0)}</td>\n    `;\n  }).join('');\n\n  var total = entries\n    .filter(hasCategory(category.id))\n    .map(summer)\n    .reduce(R.add, 0);\n  var negative = category.budget - total < 0 ? 'u-negative' : '';\n\n  return `\n    <tr class=\"actions-row\" data-id=\"${category.id}\">\n      <td>\n        <div class=\"actions-box\">\n          <button class=\"js-remove btn btn-xs btn-danger\" data-id=\"${category.id}\"><i class=\"glyphicon glyphicon-minus\"></i></button>\n        </div>\n        <input class=\"editable\" data-field=\"name\" value=\"${category.name}\">\n      </td>\n      ${periodResults}\n      <td>${total}</td>\n    </tr>\n    <tr data-id=\"${category.id}\">\n      <td><input class=\"editable\" data-field=\"budget\" value=\"${category.budget}\"></td>\n      ${periodBudgets}\n      <td class=\"${negative}\">${category.budget - total}</td>\n    </tr>\n  `;\n};\n\nvar table = (periods) => (title, body) => {\n  return `\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>${title}</th>\n          ${periods.map(periodHeader).join('')}\n          <th>Total</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${body}\n      </tbody>\n    </table>\n  `;\n};\n\nvar periodResultBalance = (entries) => (period) => {\n  var balance = entries\n    .filter(hasPeriod(period))\n    .map(incMinusExp)\n    .reduce(R.add, 0);\n  var negative = balance < 0 ? 'u-negative' : '';\n\n  return `<td class=\"${negative}\">${balance}</td>`;\n};\n\nvar totalResultBalance = (entries) => {\n  return entries.map(incMinusExp).reduce(R.add, 0);\n};\n\nvar balance = (entries, periods) => {\n  var total = totalResultBalance(entries);\n  var negative = total < 0 ? 'u-negative' : '';\n\n  return `\n    <tr>\n      <td>Balance</td>\n      ${periods.map(periodResultBalance(entries)).join('')}\n      <td class=\"${negative}\">${total}</td>\n    </tr>\n  `;\n};\n\nvar template = ({periods, categories, entries}) => {\n  if(!periods) {\n    return `<div>No plan selected</div>`;\n  }\n\n  var expenses = categories.filter(R.propEq('type', 'expense'));\n  var incomes = categories.filter(R.propEq('type', 'income'));\n  var periodTable = table(periods);\n\n  return `\n    <div>\n      ${periodTable('Expenses', expenses.map(categoryRow(periods, entries, expMinusInc)).join(''))}\n      ${periodTable('Incomes', incomes.map(categoryRow(periods, entries, incMinusExp)).join(''))}\n      ${periodTable('Result', balance(entries, periods))}\n    </div>\n  `;\n};\n\nexports.init = (elem, {periods, categories, entries}, actions) => {\n  var render = Omnium.create({\n    template,\n    parent: elem.get(0)\n  });\n\n  Bacon.combineTemplate({\n    periods: periods.asProperty(),\n    categories: categories.asProperty(),\n    entries: entries.asProperty(),\n  })\n  .onValue(render);\n\n  elem.asEventStream('click', '.js-remove')\n  .map('.currentTarget').map($)\n  .onValue((button) => {\n    actions.removeCategory(button.attr('data-id'));\n  });\n\n  elem.asEventStream('change')\n  .map('.target').map($)\n  .onValue((field) => {\n    var id = field.closest('tr').attr('data-id');\n    var key = field.attr('data-field');\n    var value = field.val();\n\n    actions.updateCategory(id, {\n      [key]: value\n    });\n  });\n};\n","'use strict';\n\nvar saveAs = require('filesaver.js');\n\nexports.init = (elem, {state}) => {\n  elem.asEventStream('click', '.js-export')\n  .doAction('.preventDefault')\n  .onValue(() => {\n    saveAs(new Blob([JSON.stringify(state.get())], {\n      type: 'application/javascript;charset=utf-8'\n    }), 'data.json');\n  });\n};\n","'use strict';\n\nvar Omnium = require('../utils/omnium');\n\nvar toggle = ((x = false) => () => x = !x)();\n\nvar link = () => {\n  return `\n    <a href=\"#\" class=\"js-import-toggle\"><i class=\"glyphicon glyphicon-open\"></i> Import</a>\n  `;\n};\n\nvar input = () => {\n  return `\n    <input type=\"file\" class=\"form-control js-import-file\">\n    <button class=\"btn btn-default js-import-toggle\"><i class=\"glyphicon glyphicon-remove\"></i></button>\n  `;\n};\n\nvar template = (showInput) => {\n  return `\n    <ul class=\"nav navbar-${showInput ? 'form' : 'nav'} navbar-right js-importer\">\n      <li>${showInput ? input() : link()}</li>\n    </ul>\n  `;\n};\n\nexports.init = (elem, state, actions) => {\n  var render = Omnium.create({\n    parent: elem.get(0),\n    template\n  });\n\n  render();\n\n  elem.asEventStream('click', '.js-import-toggle')\n  .doAction('.preventDefault')\n  .onValue(() => {\n    render(toggle());\n  });\n\n  elem.asEventStream('change', '.js-import-file')\n  .onValue((e) => {\n    var reader = new FileReader();\n    reader.onload = (e) => {\n      actions.loadAllData(JSON.parse(e.target.result));\n      render(toggle());\n    };\n    reader.readAsText(e.target.files[0]);\n  });\n};\n","'use strict';\n\nvar Bacon = require('baconjs');\nvar R = require('ramda');\nvar Omnium = require('../utils/omnium');\n\nvar hasPeriod = R.propEq('period');\nvar incMinusExp = (entry) => +entry.income - entry.expense;\n\nvar categoryOption = R.curry((current, {id, name}) => {\n  var selected = current === id ? 'selected' : '';\n  return `<option value=\"${id}\" ${selected}>${name}</option>`;\n});\n\nvar categorySelect = (categories, current, classnames = 'editable') => {\n  return `\n    <select class=\"${classnames} form-control input-sm\" data-field=\"category\">\n      ${categories.map(categoryOption(current)).join('')}\n    </select>\n  `;\n};\n\nvar entryTemplate = R.curry((categories, entry) => {\n  return `\n    <tr class=\"actions-row\" data-id=\"${entry.id}\">\n      <td>\n        <div class=\"actions-box\">\n          <button type=\"button\" class=\"js-remove btn btn-xs btn-danger\" data-id=\"${entry.id}\"><i class=\"glyphicon glyphicon-minus\"></i></button>\n        </div>\n        ${categorySelect(categories, entry.category)}\n      </td>\n      <td>\n        <input class=\"editable\" data-field=\"description\" value=\"${entry.description || ''}\">\n      </td>\n      <td>\n        <input type=\"number\" data-field=\"expense\" class=\"editable\" value=\"${entry.expense || ''}\">\n      </td>\n      <td>\n        <input type=\"number\" data-field=\"income\" class=\"editable\" value=\"${entry.income || ''}\">\n      </td>\n    </tr>\n  `;\n});\n\nvar addEntry = (period, categories) => {\n  return `\n    <tr class=\"actions-row\">\n      <td>\n        <button class=\"hidden\"></button>\n        <input type=\"hidden\" class=\"js-add-entry-period\" value=\"${period}\">\n        <div class=\"actions-box\">\n          <button class=\"btn btn-xs btn-primary\"><i class=\"glyphicon glyphicon-plus\"></i></button>\n        </div>\n        ${categorySelect(categories, '', 'js-add-entry-category')}\n      </td>\n      <td>\n        <input type=\"text\" class=\"js-add-entry-text form-control input-sm\" value=\"\" placeholder=\"Description\">\n      </td>\n      <td>\n        <input type=\"number\" class=\"js-add-entry-expense form-control input-sm\" value=\"\" placeholder=\"Expense\">\n      </td>\n      <td>\n        <input type=\"number\" class=\"js-add-entry-income form-control input-sm\" value=\"\" placeholder=\"Income\">\n      </td>\n    </tr>\n  `;\n};\n\nvar table = (period, entries, categories) => {\n  var result = R.sum(entries.map(incMinusExp).map(Number));\n  var negative = result < 0 ? 'u-negative' : '';\n\n  return `<form>\n    <table class=\"table table-bordered table-hover\">\n      <caption>${period}</caption>\n      <thead>\n        <tr>\n          <th>Category</th>\n          <th>Comment</th>\n          <th>Expense</th>\n          <th>Income</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${entries.map(entryTemplate(categories)).join('')}\n      </tbody>\n      <tfoot>\n        ${addEntry(period, categories)}\n      </tfoot>\n    </table>\n    <p>\n      Result: <span class=\"${negative}\">${result}</span>\n    </p>\n  </form>`;\n};\n\nvar template = function ({entries, periods, categories}) {\n  if(!periods) {\n    return `<div>No plan selected</div>`;\n  }\n\n  return `\n    <div>\n      ${periods.map((period) => {\n        return table(period, entries.filter(hasPeriod(period)), categories);\n      }).join('')}\n    </div>\n  `;\n};\n\nexports.init = function (elem, {periods, entries, categories}, actions) {\n  var render = Omnium.create({\n    template,\n    parent: elem.get(0)\n  });\n\n  Bacon.combineTemplate({\n    entries: entries.asProperty(),\n    periods: periods.asProperty(),\n    categories: categories.asProperty(),\n  })\n  .onValue(render);\n\n  elem.asEventStream('click', '.js-remove')\n  .map('.currentTarget').map($)\n  .onValue((button) => {\n    actions.removeEntry(button.attr('data-id'));\n  });\n\n  elem.asEventStream('change')\n  .map('.target').map($)\n  .onValue((field) => {\n    var id = field.closest('tr').attr('data-id');\n    var key = field.attr('data-field');\n    var value = field.val();\n\n    if(id) {\n      actions.updateEntry(id, {\n        [key]: value\n      });\n    }\n  });\n\n  elem.asEventStream('keypress', '.editable').onValue((e) => {\n    if(e.which === 13) {\n      e.preventDefault();\n      e.stopPropagation();\n      //## Move focus to the field below\n    }\n  });\n\n  elem.asEventStream('submit', 'form')\n  .doAction('.preventDefault')\n  .map('.target').map($)\n  .map((form) => {\n    var entry = {\n      period: form.find('.js-add-entry-period').val(),\n      category: form.find('.js-add-entry-category').val(),\n      description: form.find('.js-add-entry-text').val(),\n      expense: form.find('.js-add-entry-expense').val(),\n      income: form.find('.js-add-entry-income').val(),\n    };\n\n    return entry;\n  })\n  .onValue(actions.addEntry);\n};\n","'use strict';\n\nvar Bacon = require('baconjs');\nvar R = require('ramda');\nvar Omnium = require('../utils/omnium');\n\nvar tab = R.curry((currentPlanId, plan) => {\n  var active = currentPlanId === plan.id ? 'active' : '';\n\n  return `\n    <li class=\"${active} actions-row\">\n      <a href=\"#/${plan.id}\">\n        <button\n          class=\"js-plans-remove btn btn-danger btn-xs actions-box actions-box--xr\"\n          data-id=\"${plan.id}\"\n          ><i class=\"glyphicon glyphicon-minus\"></i></button>\n        ${plan.name}\n      </a>\n    </li>\n  `;\n});\n\nvar template = ({currentPlanId, plans}) => {\n  return `\n    <ul class=\"nav nav-tabs\">\n      ${plans.map(tab(currentPlanId)).join('')}\n    </ul>\n  `;\n};\n\nexports.init = (elem, {currentPlanId, plans}, actions) => {\n  var render = Omnium.create({\n    parent: elem.get(0),\n    template\n  });\n\n  Bacon.combineTemplate({\n    currentPlanId: currentPlanId.asProperty(),\n    plans: plans.asProperty(),\n  })\n  .onValue(render);\n\n  //## use onhashchange routing?\n  elem.asEventStream('click', 'a')\n  .doAction('.preventDefault')\n  .map('.currentTarget').map($)\n  .onValue((link) => {\n    actions.updateCurrentPlan(link.attr('href').substring(2));\n  });\n\n  elem.asEventStream('click', '.js-plans-remove')\n  .doAction('.preventDefault')\n  .doAction('.stopPropagation')\n  .map('.currentTarget').map($)\n  .onValue((button) => {\n    if(window.confirm('Are you really sure you want to delete the plan? There is no going back...')) {\n      actions.removePlan(button.attr('data-id'));\n    }\n  });\n};\n"],"sourceRoot":"/source/"}